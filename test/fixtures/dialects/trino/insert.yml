# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 1dc3f1f809d4499a91b27089b61aae1ed008179a2e91ad350b56db9d7db4359c
file:
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        naked_identifier: t1
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: t2
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        naked_identifier: t1
    - values_clause:
        keyword: VALUES
        expression:
          bracketed:
            start_bracket: (
            numeric_literal: '1'
            comma: ','
            quoted_literal: "'San Francisco'"
            end_bracket: )
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: a
      - comma: ','
      - column_reference:
          naked_identifier: b
      - comma: ','
      - column_reference:
          naked_identifier: c
      - end_bracket: )
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: t2
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: a
      - comma: ','
      - column_reference:
          naked_identifier: b
      - comma: ','
      - column_reference:
          naked_identifier: c
      - end_bracket: )
    - values_clause:
        keyword: VALUES
        expression:
          bracketed:
          - start_bracket: (
          - numeric_literal: '26'
          - comma: ','
          - quoted_literal: "'POLAND'"
          - comma: ','
          - numeric_literal: '3'
          - end_bracket: )
- statement_terminator: ;
