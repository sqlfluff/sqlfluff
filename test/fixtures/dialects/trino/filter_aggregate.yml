# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 1e9debe004cb3ca0275e2d088ae04a7ede6c8dea9535c6a4147575837ab852ec
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: id
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: COUNT
            function_contents:
              bracketed:
                start_bracket: (
                star: '*'
                end_bracket: )
            keyword: FILTER
            bracketed:
              start_bracket: (
              keyword: WHERE
              expression:
              - column_reference:
                  naked_identifier: o
              - keyword: IS
              - keyword: NOT
              - null_literal: 'NULL'
              end_bracket: )
          alias_expression:
            keyword: AS
            naked_identifier: count
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                - keyword: VALUES
                - expression:
                    bracketed:
                    - start_bracket: (
                    - numeric_literal: '100'
                    - comma: ','
                    - numeric_literal: '2'
                    - comma: ','
                    - quoted_literal: "'a'"
                    - end_bracket: )
                - comma: ','
                - expression:
                    bracketed:
                    - start_bracket: (
                    - numeric_literal: '100'
                    - comma: ','
                    - numeric_literal: '1'
                    - comma: ','
                    - quoted_literal: "'b'"
                    - end_bracket: )
                - comma: ','
                - expression:
                    bracketed:
                    - start_bracket: (
                    - numeric_literal: '200'
                    - comma: ','
                    - null_literal: 'NULL'
                    - comma: ','
                    - quoted_literal: "'c'"
                    - end_bracket: )
                - comma: ','
                - expression:
                    bracketed:
                    - start_bracket: (
                    - numeric_literal: '200'
                    - comma: ','
                    - numeric_literal: '2'
                    - comma: ','
                    - quoted_literal: "'a'"
                    - end_bracket: )
                - comma: ','
                - expression:
                    bracketed:
                    - start_bracket: (
                    - numeric_literal: '300'
                    - comma: ','
                    - null_literal: 'NULL'
                    - comma: ','
                    - quoted_literal: "'b'"
                    - end_bracket: )
                - comma: ','
                - expression:
                    bracketed:
                    - start_bracket: (
                    - numeric_literal: '300'
                    - comma: ','
                    - null_literal: 'NULL'
                    - comma: ','
                    - quoted_literal: "'c'"
                    - end_bracket: )
              end_bracket: )
            alias_expression:
              naked_identifier: t
              bracketed:
                start_bracket: (
                identifier_list:
                - naked_identifier: id
                - comma: ','
                - naked_identifier: o
                - comma: ','
                - naked_identifier: value
                end_bracket: )
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - column_reference:
          naked_identifier: id
  statement_terminator: ;
