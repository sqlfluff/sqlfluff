# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: e67ce96f8afb40f1f0d3294f475582134acf57bc2b9c31635c2c8095a9878978
file:
- statement:
    begin_end_block:
    - declare_segment:
        keyword: DECLARE
        create_procedure_statement:
        - keyword: PROCEDURE
        - function_name:
            function_name_identifier: p
        - function_parameter_list:
            bracketed:
            - start_bracket: (
            - parameter: sales
            - data_type:
                data_type_identifier: NUMBER
            - comma: ','
            - parameter: quota
            - data_type:
                data_type_identifier: NUMBER
            - comma: ','
            - parameter: emp_id
            - data_type:
                data_type_identifier: NUMBER
            - end_bracket: )
        - keyword: IS
        - declare_segment:
          - naked_identifier: bonus
          - data_type:
              data_type_identifier: NUMBER
          - colon: ':'
          - comparison_operator:
              raw_comparison_operator: '='
          - expression:
              numeric_literal: '0'
          - statement_terminator: ;
          - naked_identifier: updated
          - data_type:
              data_type_identifier: VARCHAR2
              bracketed_arguments:
                bracketed:
                  start_bracket: (
                  numeric_literal: '3'
                  end_bracket: )
          - colon: ':'
          - comparison_operator:
              raw_comparison_operator: '='
          - expression:
              quoted_literal: "'No'"
          - statement_terminator: ;
        - begin_end_block:
          - keyword: BEGIN
          - statement:
              if_then_statement:
              - if_clause:
                - keyword: IF
                - expression:
                    column_reference:
                      naked_identifier: sales
                    comparison_operator:
                      raw_comparison_operator: '>'
                    bracketed:
                      start_bracket: (
                      expression:
                        column_reference:
                          naked_identifier: quota
                        binary_operator: +
                        numeric_literal: '200'
                      end_bracket: )
                - keyword: THEN
              - statement:
                  assignment_segment_statement:
                    object_reference:
                      naked_identifier: bonus
                    colon: ':'
                    comparison_operator:
                      raw_comparison_operator: '='
                    expression:
                      bracketed:
                        start_bracket: (
                        expression:
                        - column_reference:
                            naked_identifier: sales
                        - binary_operator: '-'
                        - column_reference:
                            naked_identifier: quota
                        end_bracket: )
                      binary_operator: /
                      numeric_literal: '4'
              - statement_terminator: ;
              - statement:
                  update_statement:
                    keyword: UPDATE
                    table_reference:
                      naked_identifier: employees
                    set_clause_list:
                      keyword: SET
                      set_clause:
                        column_reference:
                          naked_identifier: salary
                        comparison_operator:
                          raw_comparison_operator: '='
                        expression:
                        - column_reference:
                            naked_identifier: salary
                        - binary_operator: +
                        - column_reference:
                            naked_identifier: bonus
                    where_clause:
                      keyword: WHERE
                      expression:
                      - column_reference:
                          naked_identifier: employee_id
                      - comparison_operator:
                          raw_comparison_operator: '='
                      - column_reference:
                          naked_identifier: emp_id
              - statement_terminator: ;
              - statement:
                  assignment_segment_statement:
                    object_reference:
                      naked_identifier: updated
                    colon: ':'
                    comparison_operator:
                      raw_comparison_operator: '='
                    expression:
                      quoted_literal: "'Yes'"
              - statement_terminator: ;
              - keyword: END
              - keyword: IF
          - statement_terminator: ;
          - statement:
              function:
                function_name:
                  naked_identifier: DBMS_OUTPUT
                  dot: .
                  function_name_identifier: PUT_LINE
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                    - quoted_literal: "'Table updated?  '"
                    - binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                    - column_reference:
                        naked_identifier: updated
                    - binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                    - quoted_literal: "', '"
                    - binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                    - quoted_literal: "'bonus = '"
                    - binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                    - column_reference:
                        naked_identifier: bonus
                    - binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                    - quoted_literal: "'.'"
                    end_bracket: )
          - statement_terminator: ;
          - keyword: END
          - object_reference:
              naked_identifier: p
        - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        function:
          function_name:
            function_name_identifier: p
          function_contents:
            bracketed:
            - start_bracket: (
            - expression:
                numeric_literal: '10100'
            - comma: ','
            - expression:
                numeric_literal: '10000'
            - comma: ','
            - expression:
                numeric_literal: '120'
            - end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            function_name_identifier: p
          function_contents:
            bracketed:
            - start_bracket: (
            - expression:
                numeric_literal: '10500'
            - comma: ','
            - expression:
                numeric_literal: '10000'
            - comma: ','
            - expression:
                numeric_literal: '121'
            - end_bracket: )
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
- statement:
    begin_end_block:
    - declare_segment:
        keyword: DECLARE
        create_procedure_statement:
        - keyword: PROCEDURE
        - function_name:
            function_name_identifier: p
        - function_parameter_list:
            bracketed:
            - start_bracket: (
            - parameter: sales
            - data_type:
                data_type_identifier: NUMBER
            - comma: ','
            - parameter: quota
            - data_type:
                data_type_identifier: NUMBER
            - comma: ','
            - parameter: emp_id
            - data_type:
                data_type_identifier: NUMBER
            - end_bracket: )
        - keyword: IS
        - declare_segment:
            naked_identifier: bonus
            data_type:
              data_type_identifier: NUMBER
            colon: ':'
            comparison_operator:
              raw_comparison_operator: '='
            expression:
              numeric_literal: '0'
            statement_terminator: ;
        - begin_end_block:
          - keyword: BEGIN
          - statement:
              if_then_statement:
              - if_clause:
                - keyword: IF
                - expression:
                    column_reference:
                      naked_identifier: sales
                    comparison_operator:
                      raw_comparison_operator: '>'
                    bracketed:
                      start_bracket: (
                      expression:
                        column_reference:
                          naked_identifier: quota
                        binary_operator: +
                        numeric_literal: '200'
                      end_bracket: )
                - keyword: THEN
              - statement:
                  assignment_segment_statement:
                    object_reference:
                      naked_identifier: bonus
                    colon: ':'
                    comparison_operator:
                      raw_comparison_operator: '='
                    expression:
                      bracketed:
                        start_bracket: (
                        expression:
                        - column_reference:
                            naked_identifier: sales
                        - binary_operator: '-'
                        - column_reference:
                            naked_identifier: quota
                        end_bracket: )
                      binary_operator: /
                      numeric_literal: '4'
              - statement_terminator: ;
              - keyword: ELSE
              - statement:
                  assignment_segment_statement:
                    object_reference:
                      naked_identifier: bonus
                    colon: ':'
                    comparison_operator:
                      raw_comparison_operator: '='
                    expression:
                      numeric_literal: '50'
              - statement_terminator: ;
              - keyword: END
              - keyword: IF
          - statement_terminator: ;
          - statement:
              function:
                function_name:
                  naked_identifier: DBMS_OUTPUT
                  dot: .
                  function_name_identifier: PUT_LINE
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      quoted_literal: "'bonus = '"
                      binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                      column_reference:
                        naked_identifier: bonus
                    end_bracket: )
          - statement_terminator: ;
          - statement:
              update_statement:
                keyword: UPDATE
                table_reference:
                  naked_identifier: employees
                set_clause_list:
                  keyword: SET
                  set_clause:
                    column_reference:
                      naked_identifier: salary
                    comparison_operator:
                      raw_comparison_operator: '='
                    expression:
                    - column_reference:
                        naked_identifier: salary
                    - binary_operator: +
                    - column_reference:
                        naked_identifier: bonus
                where_clause:
                  keyword: WHERE
                  expression:
                  - column_reference:
                      naked_identifier: employee_id
                  - comparison_operator:
                      raw_comparison_operator: '='
                  - column_reference:
                      naked_identifier: emp_id
          - statement_terminator: ;
          - keyword: END
          - object_reference:
              naked_identifier: p
        - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        function:
          function_name:
            function_name_identifier: p
          function_contents:
            bracketed:
            - start_bracket: (
            - expression:
                numeric_literal: '10100'
            - comma: ','
            - expression:
                numeric_literal: '10000'
            - comma: ','
            - expression:
                numeric_literal: '120'
            - end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            function_name_identifier: p
          function_contents:
            bracketed:
            - start_bracket: (
            - expression:
                numeric_literal: '10500'
            - comma: ','
            - expression:
                numeric_literal: '10000'
            - comma: ','
            - expression:
                numeric_literal: '121'
            - end_bracket: )
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
- statement:
    begin_end_block:
    - declare_segment:
        keyword: DECLARE
        create_procedure_statement:
        - keyword: PROCEDURE
        - function_name:
            function_name_identifier: p
        - function_parameter_list:
            bracketed:
            - start_bracket: (
            - parameter: sales
            - data_type:
                data_type_identifier: NUMBER
            - comma: ','
            - parameter: quota
            - data_type:
                data_type_identifier: NUMBER
            - comma: ','
            - parameter: emp_id
            - data_type:
                data_type_identifier: NUMBER
            - end_bracket: )
        - keyword: IS
        - declare_segment:
            naked_identifier: bonus
            data_type:
              data_type_identifier: NUMBER
            colon: ':'
            comparison_operator:
              raw_comparison_operator: '='
            expression:
              numeric_literal: '0'
            statement_terminator: ;
        - begin_end_block:
          - keyword: BEGIN
          - statement:
              if_then_statement:
              - if_clause:
                - keyword: IF
                - expression:
                    column_reference:
                      naked_identifier: sales
                    comparison_operator:
                      raw_comparison_operator: '>'
                    bracketed:
                      start_bracket: (
                      expression:
                        column_reference:
                          naked_identifier: quota
                        binary_operator: +
                        numeric_literal: '200'
                      end_bracket: )
                - keyword: THEN
              - statement:
                  assignment_segment_statement:
                    object_reference:
                      naked_identifier: bonus
                    colon: ':'
                    comparison_operator:
                      raw_comparison_operator: '='
                    expression:
                      bracketed:
                        start_bracket: (
                        expression:
                        - column_reference:
                            naked_identifier: sales
                        - binary_operator: '-'
                        - column_reference:
                            naked_identifier: quota
                        end_bracket: )
                      binary_operator: /
                      numeric_literal: '4'
              - statement_terminator: ;
              - keyword: ELSE
              - statement:
                  if_then_statement:
                  - if_clause:
                    - keyword: IF
                    - expression:
                      - column_reference:
                          naked_identifier: sales
                      - comparison_operator:
                          raw_comparison_operator: '>'
                      - column_reference:
                          naked_identifier: quota
                    - keyword: THEN
                  - statement:
                      assignment_segment_statement:
                        object_reference:
                          naked_identifier: bonus
                        colon: ':'
                        comparison_operator:
                          raw_comparison_operator: '='
                        expression:
                          numeric_literal: '50'
                  - statement_terminator: ;
                  - keyword: ELSE
                  - statement:
                      assignment_segment_statement:
                        object_reference:
                          naked_identifier: bonus
                        colon: ':'
                        comparison_operator:
                          raw_comparison_operator: '='
                        expression:
                          numeric_literal: '0'
                  - statement_terminator: ;
                  - keyword: END
                  - keyword: IF
              - statement_terminator: ;
              - keyword: END
              - keyword: IF
          - statement_terminator: ;
          - statement:
              function:
                function_name:
                  naked_identifier: DBMS_OUTPUT
                  dot: .
                  function_name_identifier: PUT_LINE
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      quoted_literal: "'bonus = '"
                      binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                      column_reference:
                        naked_identifier: bonus
                    end_bracket: )
          - statement_terminator: ;
          - statement:
              update_statement:
                keyword: UPDATE
                table_reference:
                  naked_identifier: employees
                set_clause_list:
                  keyword: SET
                  set_clause:
                    column_reference:
                      naked_identifier: salary
                    comparison_operator:
                      raw_comparison_operator: '='
                    expression:
                    - column_reference:
                        naked_identifier: salary
                    - binary_operator: +
                    - column_reference:
                        naked_identifier: bonus
                where_clause:
                  keyword: WHERE
                  expression:
                  - column_reference:
                      naked_identifier: employee_id
                  - comparison_operator:
                      raw_comparison_operator: '='
                  - column_reference:
                      naked_identifier: emp_id
          - statement_terminator: ;
          - keyword: END
          - object_reference:
              naked_identifier: p
        - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        function:
          function_name:
            function_name_identifier: p
          function_contents:
            bracketed:
            - start_bracket: (
            - expression:
                numeric_literal: '10100'
            - comma: ','
            - expression:
                numeric_literal: '10000'
            - comma: ','
            - expression:
                numeric_literal: '120'
            - end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            function_name_identifier: p
          function_contents:
            bracketed:
            - start_bracket: (
            - expression:
                numeric_literal: '10500'
            - comma: ','
            - expression:
                numeric_literal: '10000'
            - comma: ','
            - expression:
                numeric_literal: '121'
            - end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            function_name_identifier: p
          function_contents:
            bracketed:
            - start_bracket: (
            - expression:
                numeric_literal: '9500'
            - comma: ','
            - expression:
                numeric_literal: '10000'
            - comma: ','
            - expression:
                numeric_literal: '122'
            - end_bracket: )
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
- statement:
    begin_end_block:
    - declare_segment:
        keyword: DECLARE
        create_procedure_statement:
        - keyword: PROCEDURE
        - function_name:
            function_name_identifier: p
        - function_parameter_list:
            bracketed:
              start_bracket: (
              parameter: sales
              data_type:
                data_type_identifier: NUMBER
              end_bracket: )
        - keyword: IS
        - declare_segment:
            naked_identifier: bonus
            data_type:
              data_type_identifier: NUMBER
            colon: ':'
            comparison_operator:
              raw_comparison_operator: '='
            expression:
              numeric_literal: '0'
            statement_terminator: ;
        - begin_end_block:
          - keyword: BEGIN
          - statement:
              if_then_statement:
              - if_clause:
                - keyword: IF
                - expression:
                    column_reference:
                      naked_identifier: sales
                    comparison_operator:
                      raw_comparison_operator: '>'
                    numeric_literal: '50000'
                - keyword: THEN
              - statement:
                  assignment_segment_statement:
                    object_reference:
                      naked_identifier: bonus
                    colon: ':'
                    comparison_operator:
                      raw_comparison_operator: '='
                    expression:
                      numeric_literal: '1500'
              - statement_terminator: ;
              - keyword: ELSIF
              - expression:
                  column_reference:
                    naked_identifier: sales
                  comparison_operator:
                    raw_comparison_operator: '>'
                  numeric_literal: '35000'
              - keyword: THEN
              - statement:
                  assignment_segment_statement:
                    object_reference:
                      naked_identifier: bonus
                    colon: ':'
                    comparison_operator:
                      raw_comparison_operator: '='
                    expression:
                      numeric_literal: '500'
              - statement_terminator: ;
              - keyword: ELSE
              - statement:
                  assignment_segment_statement:
                    object_reference:
                      naked_identifier: bonus
                    colon: ':'
                    comparison_operator:
                      raw_comparison_operator: '='
                    expression:
                      numeric_literal: '100'
              - statement_terminator: ;
              - keyword: END
              - keyword: IF
          - statement_terminator: ;
          - statement:
              function:
                function_name:
                  naked_identifier: DBMS_OUTPUT
                  dot: .
                  function_name_identifier: PUT_LINE
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                    - quoted_literal: "'Sales = '"
                    - binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                    - column_reference:
                        naked_identifier: sales
                    - binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                    - quoted_literal: "', bonus = '"
                    - binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                    - column_reference:
                        naked_identifier: bonus
                    - binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                    - quoted_literal: "'.'"
                    end_bracket: )
          - statement_terminator: ;
          - keyword: END
          - object_reference:
              naked_identifier: p
        - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        function:
          function_name:
            function_name_identifier: p
          function_contents:
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '55000'
              end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            function_name_identifier: p
          function_contents:
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '40000'
              end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            function_name_identifier: p
          function_contents:
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '30000'
              end_bracket: )
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
