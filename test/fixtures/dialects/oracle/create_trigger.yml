# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 1d37343531c537e9f509e63d4908b849fddac1d7092328eca110b6fc3f151256
file:
  statement:
    create_trigger:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: TRIGGER
    - trigger_reference:
        naked_identifier: t
    - keyword: BEFORE
    - dml_event_clause:
      - keyword: INSERT
      - keyword: OR
      - keyword: UPDATE
      - keyword: OF
      - column_reference:
          naked_identifier: salary
      - comma: ','
      - column_reference:
          naked_identifier: department_id
      - keyword: OR
      - keyword: DELETE
      - keyword: 'ON'
      - table_reference:
          naked_identifier: employees
    - statement:
        begin_end_block:
        - keyword: BEGIN
        - statement:
            case_expression:
            - keyword: CASE
            - when_clause:
              - keyword: WHEN
              - keyword: INSERTING
              - keyword: THEN
              - statement:
                  function:
                    function_name:
                      naked_identifier: DBMS_OUTPUT
                      dot: .
                      function_name_identifier: PUT_LINE
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          quoted_literal: "'Inserting'"
                        end_bracket: )
              - statement_terminator: ;
            - when_clause:
              - keyword: WHEN
              - expression:
                  function:
                    function_name:
                      function_name_identifier: UPDATING
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          quoted_literal: "'salary'"
                        end_bracket: )
              - keyword: THEN
              - statement:
                  function:
                    function_name:
                      naked_identifier: DBMS_OUTPUT
                      dot: .
                      function_name_identifier: PUT_LINE
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          quoted_literal: "'Updating salary'"
                        end_bracket: )
              - statement_terminator: ;
            - when_clause:
              - keyword: WHEN
              - expression:
                  function:
                    function_name:
                      function_name_identifier: UPDATING
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          quoted_literal: "'department_id'"
                        end_bracket: )
              - keyword: THEN
              - statement:
                  function:
                    function_name:
                      naked_identifier: DBMS_OUTPUT
                      dot: .
                      function_name_identifier: PUT_LINE
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          quoted_literal: "'Updating department ID'"
                        end_bracket: )
              - statement_terminator: ;
            - when_clause:
              - keyword: WHEN
              - keyword: DELETING
              - keyword: THEN
              - statement:
                  function:
                    function_name:
                      naked_identifier: DBMS_OUTPUT
                      dot: .
                      function_name_identifier: PUT_LINE
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          quoted_literal: "'Deleting'"
                        end_bracket: )
              - statement_terminator: ;
            - keyword: END
            - keyword: CASE
        - statement_terminator: ;
        - keyword: END
    - statement_terminator: ;
    - binary_operator: /
    - statement:
        create_trigger:
        - keyword: CREATE
        - keyword: OR
        - keyword: REPLACE
        - keyword: TRIGGER
        - trigger_reference:
            naked_identifier: order_info_insert
        - keyword: INSTEAD
        - keyword: OF
        - dml_event_clause:
          - keyword: INSERT
          - keyword: 'ON'
          - table_reference:
              naked_identifier: order_info
        - statement:
            begin_end_block:
            - declare_segment:
              - keyword: DECLARE
              - naked_identifier: duplicate_info
              - data_type:
                  data_type_identifier: EXCEPTION
              - statement_terminator: ;
              - keyword: PRAGMA
              - function:
                  function_name:
                    function_name_identifier: EXCEPTION_INIT
                  function_contents:
                    bracketed:
                    - start_bracket: (
                    - expression:
                        column_reference:
                          naked_identifier: duplicate_info
                    - comma: ','
                    - expression:
                        numeric_literal:
                          sign_indicator: '-'
                          numeric_literal: '00001'
                    - end_bracket: )
              - statement_terminator: ;
            - keyword: BEGIN
            - statement:
                insert_statement:
                - keyword: INSERT
                - keyword: INTO
                - table_reference:
                    naked_identifier: customers
                - bracketed:
                  - start_bracket: (
                  - column_reference:
                      naked_identifier: customer_id
                  - comma: ','
                  - column_reference:
                      naked_identifier: cust_last_name
                  - comma: ','
                  - column_reference:
                      naked_identifier: cust_first_name
                  - end_bracket: )
                - values_clause:
                    keyword: VALUES
                    bracketed:
                    - start_bracket: (
                    - sqlplus_variable:
                      - colon: ':'
                      - parameter: new
                      - dot: .
                      - parameter: customer_id
                    - comma: ','
                    - sqlplus_variable:
                      - colon: ':'
                      - parameter: new
                      - dot: .
                      - parameter: cust_last_name
                    - comma: ','
                    - sqlplus_variable:
                      - colon: ':'
                      - parameter: new
                      - dot: .
                      - parameter: cust_first_name
                    - end_bracket: )
            - statement_terminator: ;
            - statement:
                insert_statement:
                - keyword: INSERT
                - keyword: INTO
                - table_reference:
                    naked_identifier: orders
                - bracketed:
                  - start_bracket: (
                  - column_reference:
                      naked_identifier: order_id
                  - comma: ','
                  - column_reference:
                      naked_identifier: order_date
                  - comma: ','
                  - column_reference:
                      naked_identifier: customer_id
                  - end_bracket: )
                - values_clause:
                    keyword: VALUES
                    bracketed:
                    - start_bracket: (
                    - sqlplus_variable:
                      - colon: ':'
                      - parameter: new
                      - dot: .
                      - parameter: order_id
                    - comma: ','
                    - sqlplus_variable:
                      - colon: ':'
                      - parameter: new
                      - dot: .
                      - parameter: order_date
                    - comma: ','
                    - sqlplus_variable:
                      - colon: ':'
                      - parameter: new
                      - dot: .
                      - parameter: customer_id
                    - end_bracket: )
            - statement_terminator: ;
            - keyword: EXCEPTION
            - keyword: WHEN
            - naked_identifier: duplicate_info
            - keyword: THEN
            - statement:
                function:
                  function_name:
                    function_name_identifier: RAISE_APPLICATION_ERROR
                  function_contents:
                    bracketed:
                    - start_bracket: (
                    - named_argument:
                        naked_identifier: num
                        right_arrow: =>
                        expression:
                          numeric_literal:
                            sign_indicator: '-'
                            numeric_literal: '20107'
                    - comma: ','
                    - named_argument:
                        naked_identifier: msg
                        right_arrow: =>
                        expression:
                          quoted_literal: "'Duplicate customer or order ID'"
                    - end_bracket: )
            - statement_terminator: ;
            - keyword: END
            - object_reference:
                naked_identifier: order_info_insert
        - statement_terminator: ;
        - binary_operator: /
        - statement:
            create_trigger:
            - keyword: CREATE
            - keyword: OR
            - keyword: REPLACE
            - keyword: TRIGGER
            - trigger_reference:
                naked_identifier: dept_emplist_tr
            - keyword: INSTEAD
            - keyword: OF
            - dml_event_clause:
              - keyword: INSERT
              - keyword: 'ON'
              - keyword: NESTED
              - keyword: TABLE
              - column_reference:
                  naked_identifier: emplist
              - keyword: OF
              - table_reference:
                  naked_identifier: dept_view
            - referencing_clause:
              - keyword: REFERENCING
              - keyword: NEW
              - keyword: AS
              - naked_identifier: Employee
              - keyword: PARENT
              - keyword: AS
              - naked_identifier: Department
            - keyword: FOR
            - keyword: EACH
            - keyword: ROW
            - statement:
                begin_end_block:
                - keyword: BEGIN
                - statement:
                    insert_statement:
                    - keyword: INSERT
                    - keyword: INTO
                    - table_reference:
                        naked_identifier: employees
                    - bracketed:
                      - start_bracket: (
                      - column_reference:
                          naked_identifier: employee_id
                      - comma: ','
                      - column_reference:
                          naked_identifier: last_name
                      - comma: ','
                      - column_reference:
                          naked_identifier: email
                      - comma: ','
                      - column_reference:
                          naked_identifier: hire_date
                      - comma: ','
                      - column_reference:
                          naked_identifier: job_id
                      - comma: ','
                      - column_reference:
                          naked_identifier: salary
                      - comma: ','
                      - column_reference:
                          naked_identifier: department_id
                      - end_bracket: )
                    - values_clause:
                        keyword: VALUES
                        bracketed:
                        - start_bracket: (
                        - sqlplus_variable:
                          - colon: ':'
                          - parameter: Employee
                          - dot: .
                          - parameter: emp_id
                        - comma: ','
                        - sqlplus_variable:
                          - colon: ':'
                          - parameter: Employee
                          - dot: .
                          - parameter: lastname
                        - comma: ','
                        - expression:
                            sqlplus_variable:
                            - colon: ':'
                            - parameter: Employee
                            - dot: .
                            - parameter: lastname
                            binary_operator:
                            - pipe: '|'
                            - pipe: '|'
                            quoted_literal: "'@example.com'"
                        - comma: ','
                        - expression:
                            bare_function: SYSDATE
                        - comma: ','
                        - sqlplus_variable:
                          - colon: ':'
                          - parameter: Employee
                          - dot: .
                          - parameter: job
                        - comma: ','
                        - sqlplus_variable:
                          - colon: ':'
                          - parameter: Employee
                          - dot: .
                          - parameter: sal
                        - comma: ','
                        - sqlplus_variable:
                          - colon: ':'
                          - parameter: Department
                          - dot: .
                          - parameter: department_id
                        - end_bracket: )
                - statement_terminator: ;
                - keyword: END
            - statement_terminator: ;
            - binary_operator: /
