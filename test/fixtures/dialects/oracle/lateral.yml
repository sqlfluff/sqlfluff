# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: acd2d7ccea6b8957dd10d36e45d32f26fb39e85e66e1b179bebe4b6fbd3b7eb9
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - naked_identifier: t1
          - dot: .
          - naked_identifier: id
      - comma: ','
      - select_clause_element:
          column_reference:
          - naked_identifier: t2
          - dot: .
          - naked_identifier: id
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: t2_id
      - comma: ','
      - select_clause_element:
          column_reference:
          - naked_identifier: t2
          - dot: .
          - naked_identifier: col1
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: tbl1
            alias_expression:
              naked_identifier: t1
          join_clause:
          - keyword: INNER
          - keyword: JOIN
          - from_expression_element:
              keyword: LATERAL
              table_expression:
                bracketed:
                  start_bracket: (
                  select_statement:
                    select_clause:
                    - keyword: SELECT
                    - select_clause_element:
                        column_reference:
                          naked_identifier: id
                    - comma: ','
                    - select_clause_element:
                        column_reference:
                          naked_identifier: col1
                    from_clause:
                      keyword: FROM
                      from_expression:
                        from_expression_element:
                          table_expression:
                            table_reference:
                              naked_identifier: tbl2
                  end_bracket: )
              alias_expression:
                naked_identifier: t2
          - join_on_condition:
              keyword: 'ON'
              expression:
              - column_reference:
                - naked_identifier: t1
                - dot: .
                - naked_identifier: id
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                - naked_identifier: t2
                - dot: .
                - naked_identifier: id
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - naked_identifier: t1
          - dot: .
          - naked_identifier: id
      - comma: ','
      - select_clause_element:
          column_reference:
          - naked_identifier: t2
          - dot: .
          - naked_identifier: id
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: t2_id
      - comma: ','
      - select_clause_element:
          column_reference:
          - naked_identifier: t2
          - dot: .
          - naked_identifier: col1
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: tbl1
            alias_expression:
              naked_identifier: t1
          join_clause:
          - keyword: CROSS
          - keyword: JOIN
          - from_expression_element:
              keyword: LATERAL
              table_expression:
                bracketed:
                  start_bracket: (
                  select_statement:
                    select_clause:
                    - keyword: SELECT
                    - select_clause_element:
                        column_reference:
                          naked_identifier: id
                    - comma: ','
                    - select_clause_element:
                        column_reference:
                          naked_identifier: col1
                    from_clause:
                      keyword: FROM
                      from_expression:
                        from_expression_element:
                          table_expression:
                            table_reference:
                              naked_identifier: tbl2
                  end_bracket: )
              alias_expression:
                naked_identifier: t2
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - naked_identifier: t1
          - dot: .
          - naked_identifier: id
      - comma: ','
      - select_clause_element:
          column_reference:
          - naked_identifier: t2
          - dot: .
          - naked_identifier: id
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: t2_id
      - comma: ','
      - select_clause_element:
          column_reference:
          - naked_identifier: t2
          - dot: .
          - naked_identifier: col1
      from_clause:
      - keyword: FROM
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: tbl1
            alias_expression:
              naked_identifier: t1
      - comma: ','
      - from_expression:
          from_expression_element:
            keyword: LATERAL
            table_expression:
              bracketed:
                start_bracket: (
                select_statement:
                  select_clause:
                  - keyword: SELECT
                  - select_clause_element:
                      column_reference:
                        naked_identifier: id
                  - comma: ','
                  - select_clause_element:
                      column_reference:
                        naked_identifier: col1
                  from_clause:
                    keyword: FROM
                    from_expression:
                      from_expression_element:
                        table_expression:
                          table_reference:
                            naked_identifier: tbl2
                end_bracket: )
            alias_expression:
              naked_identifier: t2
- statement_terminator: ;
