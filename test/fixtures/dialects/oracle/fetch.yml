# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 4261173c48027065a3994944218fc5a00f68b16543da541ce7ead3aa4ba11b44
file:
- statement:
    begin_end_block:
    - declare_segment:
      - keyword: DECLARE
      - record_type:
        - keyword: TYPE
        - naked_identifier: EmpRecTyp
        - keyword: IS
        - keyword: RECORD
        - bracketed:
          - start_bracket: (
          - naked_identifier: emp_id
          - column_type_reference:
              column_reference:
              - naked_identifier: employees
              - dot: .
              - naked_identifier: employee_id
              binary_operator: '%'
              keyword: TYPE
          - comma: ','
          - naked_identifier: salary
          - column_type_reference:
              column_reference:
              - naked_identifier: employees
              - dot: .
              - naked_identifier: salary
              binary_operator: '%'
              keyword: TYPE
          - end_bracket: )
      - statement_terminator: ;
      - cursor_variable:
        - keyword: CURSOR
        - naked_identifier: desc_salary
        - keyword: RETURN
        - data_type:
            data_type_identifier: EmpRecTyp
        - keyword: IS
        - select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  naked_identifier: employee_id
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: salary
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: employees
            orderby_clause:
            - keyword: ORDER
            - keyword: BY
            - column_reference:
                naked_identifier: salary
            - keyword: DESC
        - statement_terminator: ;
      - naked_identifier: highest_paid_emp
      - data_type:
          data_type_identifier: EmpRecTyp
      - statement_terminator: ;
      - naked_identifier: next_highest_paid_emp
      - data_type:
          data_type_identifier: EmpRecTyp
      - statement_terminator: ;
      - create_function_statement:
        - keyword: FUNCTION
        - function_name:
            function_name_identifier: nth_highest_salary
        - function_parameter_list:
            bracketed:
              start_bracket: (
              parameter: n
              data_type:
                data_type_identifier: INTEGER
              end_bracket: )
        - keyword: RETURN
        - data_type:
            data_type_identifier: EmpRecTyp
        - keyword: IS
        - declare_segment:
            naked_identifier: emp_rec
            data_type:
              data_type_identifier: EmpRecTyp
            statement_terminator: ;
        - begin_end_block:
          - keyword: BEGIN
          - statement:
              open_statement:
                keyword: OPEN
                naked_identifier: desc_salary
          - statement_terminator: ;
          - statement:
              for_loop_statement:
              - keyword: FOR
              - naked_identifier: i
              - keyword: IN
              - numeric_literal: '1'
              - dot: .
              - dot: .
              - naked_identifier: n
              - loop_statement:
                - keyword: LOOP
                - statement:
                    fetch_statement:
                      keyword: FETCH
                      naked_identifier: desc_salary
                      into_clause:
                        keyword: INTO
                        naked_identifier: emp_rec
                - statement_terminator: ;
                - keyword: END
                - keyword: LOOP
          - statement_terminator: ;
          - statement:
              close_statement:
                keyword: CLOSE
                naked_identifier: desc_salary
          - statement_terminator: ;
          - statement:
              return_statement:
                keyword: RETURN
                expression:
                  column_reference:
                    naked_identifier: emp_rec
          - statement_terminator: ;
          - keyword: END
          - object_reference:
              naked_identifier: nth_highest_salary
        - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        assignment_segment_statement:
          object_reference:
            naked_identifier: highest_paid_emp
          colon: ':'
          comparison_operator:
            raw_comparison_operator: '='
          expression:
            function:
              function_name:
                function_name_identifier: nth_highest_salary
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '1'
                  end_bracket: )
    - statement_terminator: ;
    - statement:
        assignment_segment_statement:
          object_reference:
            naked_identifier: next_highest_paid_emp
          colon: ':'
          comparison_operator:
            raw_comparison_operator: '='
          expression:
            function:
              function_name:
                function_name_identifier: nth_highest_salary
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '2'
                  end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            naked_identifier: DBMS_OUTPUT
            dot: .
            function_name_identifier: PUT_LINE
          function_contents:
            bracketed:
              start_bracket: (
              expression:
              - quoted_literal: "'Highest Paid: #'"
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - column_reference:
                - naked_identifier: highest_paid_emp
                - dot: .
                - naked_identifier: emp_id
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "', $'"
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - column_reference:
                - naked_identifier: highest_paid_emp
                - dot: .
                - naked_identifier: salary
              end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            naked_identifier: DBMS_OUTPUT
            dot: .
            function_name_identifier: PUT_LINE
          function_contents:
            bracketed:
              start_bracket: (
              expression:
              - quoted_literal: "'Next Highest Paid: #'"
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - column_reference:
                - naked_identifier: next_highest_paid_emp
                - dot: .
                - naked_identifier: emp_id
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "', $'"
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - column_reference:
                - naked_identifier: next_highest_paid_emp
                - dot: .
                - naked_identifier: salary
              end_bracket: )
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
- statement:
    begin_end_block:
    - declare_segment:
      - keyword: DECLARE
      - cursor_variable:
        - keyword: CURSOR
        - naked_identifier: c1
        - keyword: IS
        - select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  naked_identifier: last_name
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: job_id
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: employees
            where_clause:
              keyword: WHERE
              expression:
                function:
                  function_name:
                    function_name_identifier: REGEXP_LIKE
                  function_contents:
                    bracketed:
                    - start_bracket: (
                    - expression:
                        column_reference:
                          naked_identifier: job_id
                    - comma: ','
                    - expression:
                        quoted_literal: "'S[HT]_CLERK'"
                    - end_bracket: )
            orderby_clause:
            - keyword: ORDER
            - keyword: BY
            - column_reference:
                naked_identifier: last_name
        - statement_terminator: ;
      - naked_identifier: v_lastname
      - column_type_reference:
          column_reference:
          - naked_identifier: employees
          - dot: .
          - naked_identifier: last_name
          binary_operator: '%'
          keyword: TYPE
      - statement_terminator: ;
      - naked_identifier: v_jobid
      - column_type_reference:
          column_reference:
          - naked_identifier: employees
          - dot: .
          - naked_identifier: job_id
          binary_operator: '%'
          keyword: TYPE
      - statement_terminator: ;
      - cursor_variable:
        - keyword: CURSOR
        - naked_identifier: c2
        - keyword: IS
        - select_statement:
            select_clause:
              keyword: SELECT
              select_clause_element:
                wildcard_expression:
                  wildcard_identifier:
                    star: '*'
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: employees
            where_clause:
              keyword: WHERE
              expression:
                function:
                  function_name:
                    function_name_identifier: REGEXP_LIKE
                  function_contents:
                    bracketed:
                    - start_bracket: (
                    - expression:
                        column_reference:
                          naked_identifier: job_id
                    - comma: ','
                    - expression:
                        quoted_literal: "'[ACADFIMKSA]_M[ANGR]'"
                    - end_bracket: )
            orderby_clause:
            - keyword: ORDER
            - keyword: BY
            - column_reference:
                naked_identifier: job_id
        - statement_terminator: ;
      - naked_identifier: v_employees
      - row_type_reference:
          table_reference:
            naked_identifier: employees
          binary_operator: '%'
          keyword: ROWTYPE
      - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        open_statement:
          keyword: OPEN
          naked_identifier: c1
    - statement_terminator: ;
    - statement:
        loop_statement:
        - keyword: LOOP
        - statement:
            fetch_statement:
              keyword: FETCH
              naked_identifier: c1
              into_clause:
              - keyword: INTO
              - naked_identifier: v_lastname
              - comma: ','
              - naked_identifier: v_jobid
        - statement_terminator: ;
        - statement:
            exit_statement:
            - keyword: EXIT
            - keyword: WHEN
            - expression:
                naked_identifier: c1
                binary_operator: '%'
                keyword: NOTFOUND
        - statement_terminator: ;
        - statement:
            function:
              function_name:
                naked_identifier: DBMS_OUTPUT
                dot: .
                function_name_identifier: PUT_LINE
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        function_name_identifier: RPAD
                      function_contents:
                        bracketed:
                        - start_bracket: (
                        - expression:
                            column_reference:
                              naked_identifier: v_lastname
                        - comma: ','
                        - expression:
                            numeric_literal: '25'
                        - comma: ','
                        - expression:
                            quoted_literal: "' '"
                        - end_bracket: )
                    binary_operator:
                    - pipe: '|'
                    - pipe: '|'
                    column_reference:
                      naked_identifier: v_jobid
                  end_bracket: )
        - statement_terminator: ;
        - keyword: END
        - keyword: LOOP
    - statement_terminator: ;
    - statement:
        close_statement:
          keyword: CLOSE
          naked_identifier: c1
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            naked_identifier: DBMS_OUTPUT
            dot: .
            function_name_identifier: PUT_LINE
          function_contents:
            bracketed:
              start_bracket: (
              expression:
                quoted_literal: "'-------------------------------------'"
              end_bracket: )
    - statement_terminator: ;
    - statement:
        open_statement:
          keyword: OPEN
          naked_identifier: c2
    - statement_terminator: ;
    - statement:
        loop_statement:
        - keyword: LOOP
        - statement:
            fetch_statement:
              keyword: FETCH
              naked_identifier: c2
              into_clause:
                keyword: INTO
                naked_identifier: v_employees
        - statement_terminator: ;
        - statement:
            exit_statement:
            - keyword: EXIT
            - keyword: WHEN
            - expression:
                naked_identifier: c2
                binary_operator: '%'
                keyword: NOTFOUND
        - statement_terminator: ;
        - statement:
            function:
              function_name:
                naked_identifier: DBMS_OUTPUT
                dot: .
                function_name_identifier: PUT_LINE
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        function_name_identifier: RPAD
                      function_contents:
                        bracketed:
                        - start_bracket: (
                        - expression:
                            column_reference:
                            - naked_identifier: v_employees
                            - dot: .
                            - naked_identifier: last_name
                        - comma: ','
                        - expression:
                            numeric_literal: '25'
                        - comma: ','
                        - expression:
                            quoted_literal: "' '"
                        - end_bracket: )
                    binary_operator:
                    - pipe: '|'
                    - pipe: '|'
                    column_reference:
                    - naked_identifier: v_employees
                    - dot: .
                    - naked_identifier: job_id
                  end_bracket: )
        - statement_terminator: ;
        - keyword: END
        - keyword: LOOP
    - statement_terminator: ;
    - statement:
        close_statement:
          keyword: CLOSE
          naked_identifier: c2
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
- statement:
    begin_end_block:
    - declare_segment:
      - keyword: DECLARE
      - cursor_variable:
        - keyword: CURSOR
        - naked_identifier: c
        - keyword: IS
        - select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                - naked_identifier: e
                - dot: .
                - naked_identifier: job_id
            - comma: ','
            - select_clause_element:
                column_reference:
                - naked_identifier: j
                - dot: .
                - naked_identifier: job_title
            from_clause:
            - keyword: FROM
            - from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: employees
                  alias_expression:
                    naked_identifier: e
            - comma: ','
            - from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: jobs
                  alias_expression:
                    naked_identifier: j
            where_clause:
              keyword: WHERE
              expression:
              - column_reference:
                - naked_identifier: e
                - dot: .
                - naked_identifier: job_id
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                - naked_identifier: j
                - dot: .
                - naked_identifier: job_id
              - binary_operator: AND
              - column_reference:
                - naked_identifier: e
                - dot: .
                - naked_identifier: manager_id
              - comparison_operator:
                  raw_comparison_operator: '='
              - numeric_literal: '100'
            orderby_clause:
            - keyword: ORDER
            - keyword: BY
            - column_reference:
                naked_identifier: last_name
        - statement_terminator: ;
      - naked_identifier: job1
      - row_type_reference:
          table_reference:
            naked_identifier: c
          binary_operator: '%'
          keyword: ROWTYPE
      - statement_terminator: ;
      - naked_identifier: job2
      - row_type_reference:
          table_reference:
            naked_identifier: c
          binary_operator: '%'
          keyword: ROWTYPE
      - statement_terminator: ;
      - naked_identifier: job3
      - row_type_reference:
          table_reference:
            naked_identifier: c
          binary_operator: '%'
          keyword: ROWTYPE
      - statement_terminator: ;
      - naked_identifier: job4
      - row_type_reference:
          table_reference:
            naked_identifier: c
          binary_operator: '%'
          keyword: ROWTYPE
      - statement_terminator: ;
      - naked_identifier: job5
      - row_type_reference:
          table_reference:
            naked_identifier: c
          binary_operator: '%'
          keyword: ROWTYPE
      - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        open_statement:
          keyword: OPEN
          naked_identifier: c
    - statement_terminator: ;
    - statement:
        fetch_statement:
          keyword: FETCH
          naked_identifier: c
          into_clause:
            keyword: INTO
            naked_identifier: job1
    - statement_terminator: ;
    - statement:
        fetch_statement:
          keyword: FETCH
          naked_identifier: c
          into_clause:
            keyword: INTO
            naked_identifier: job2
    - statement_terminator: ;
    - statement:
        fetch_statement:
          keyword: FETCH
          naked_identifier: c
          into_clause:
            keyword: INTO
            naked_identifier: job3
    - statement_terminator: ;
    - statement:
        fetch_statement:
          keyword: FETCH
          naked_identifier: c
          into_clause:
            keyword: INTO
            naked_identifier: job4
    - statement_terminator: ;
    - statement:
        fetch_statement:
          keyword: FETCH
          naked_identifier: c
          into_clause:
            keyword: INTO
            naked_identifier: job5
    - statement_terminator: ;
    - statement:
        close_statement:
          keyword: CLOSE
          naked_identifier: c
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            naked_identifier: DBMS_OUTPUT
            dot: .
            function_name_identifier: PUT_LINE
          function_contents:
            bracketed:
              start_bracket: (
              expression:
              - column_reference:
                - naked_identifier: job1
                - dot: .
                - naked_identifier: job_title
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "' ('"
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - column_reference:
                - naked_identifier: job1
                - dot: .
                - naked_identifier: job_id
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "')'"
              end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            naked_identifier: DBMS_OUTPUT
            dot: .
            function_name_identifier: PUT_LINE
          function_contents:
            bracketed:
              start_bracket: (
              expression:
              - column_reference:
                - naked_identifier: job2
                - dot: .
                - naked_identifier: job_title
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "' ('"
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - column_reference:
                - naked_identifier: job2
                - dot: .
                - naked_identifier: job_id
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "')'"
              end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            naked_identifier: DBMS_OUTPUT
            dot: .
            function_name_identifier: PUT_LINE
          function_contents:
            bracketed:
              start_bracket: (
              expression:
              - column_reference:
                - naked_identifier: job3
                - dot: .
                - naked_identifier: job_title
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "' ('"
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - column_reference:
                - naked_identifier: job3
                - dot: .
                - naked_identifier: job_id
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "')'"
              end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            naked_identifier: DBMS_OUTPUT
            dot: .
            function_name_identifier: PUT_LINE
          function_contents:
            bracketed:
              start_bracket: (
              expression:
              - column_reference:
                - naked_identifier: job4
                - dot: .
                - naked_identifier: job_title
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "' ('"
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - column_reference:
                - naked_identifier: job4
                - dot: .
                - naked_identifier: job_id
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "')'"
              end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            naked_identifier: DBMS_OUTPUT
            dot: .
            function_name_identifier: PUT_LINE
          function_contents:
            bracketed:
              start_bracket: (
              expression:
              - column_reference:
                - naked_identifier: job5
                - dot: .
                - naked_identifier: job_title
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "' ('"
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - column_reference:
                - naked_identifier: job5
                - dot: .
                - naked_identifier: job_id
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "')'"
              end_bracket: )
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
- statement:
    begin_end_block:
    - declare_segment:
      - keyword: DECLARE
      - naked_identifier: cv
      - data_type:
          data_type_identifier: SYS_REFCURSOR
      - statement_terminator: ;
      - naked_identifier: v_lastname
      - column_type_reference:
          column_reference:
          - naked_identifier: employees
          - dot: .
          - naked_identifier: last_name
          binary_operator: '%'
          keyword: TYPE
      - statement_terminator: ;
      - naked_identifier: v_jobid
      - column_type_reference:
          column_reference:
          - naked_identifier: employees
          - dot: .
          - naked_identifier: job_id
          binary_operator: '%'
          keyword: TYPE
      - statement_terminator: ;
      - naked_identifier: query_2
      - data_type:
          data_type_identifier: VARCHAR2
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '200'
              end_bracket: )
      - colon: ':'
      - comparison_operator:
          raw_comparison_operator: '='
      - expression:
          quoted_literal: "'SELECT * FROM employees\n    WHERE REGEXP_LIKE (job_id,\
            \ ''[ACADFIMKSA]_M[ANGR]'')\n    ORDER BY job_id'"
      - statement_terminator: ;
      - naked_identifier: v_employees
      - row_type_reference:
          table_reference:
            naked_identifier: employees
          binary_operator: '%'
          keyword: ROWTYPE
      - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        open_for_statement:
        - keyword: OPEN
        - naked_identifier: cv
        - keyword: FOR
        - select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  naked_identifier: last_name
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: job_id
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: employees
            where_clause:
              keyword: WHERE
              expression:
                function:
                  function_name:
                    function_name_identifier: REGEXP_LIKE
                  function_contents:
                    bracketed:
                    - start_bracket: (
                    - expression:
                        column_reference:
                          naked_identifier: job_id
                    - comma: ','
                    - expression:
                        quoted_literal: "'S[HT]_CLERK'"
                    - end_bracket: )
            orderby_clause:
            - keyword: ORDER
            - keyword: BY
            - column_reference:
                naked_identifier: last_name
    - statement_terminator: ;
    - statement:
        loop_statement:
        - keyword: LOOP
        - statement:
            fetch_statement:
              keyword: FETCH
              naked_identifier: cv
              into_clause:
              - keyword: INTO
              - naked_identifier: v_lastname
              - comma: ','
              - naked_identifier: v_jobid
        - statement_terminator: ;
        - statement:
            exit_statement:
            - keyword: EXIT
            - keyword: WHEN
            - expression:
                naked_identifier: cv
                binary_operator: '%'
                keyword: NOTFOUND
        - statement_terminator: ;
        - statement:
            function:
              function_name:
                naked_identifier: DBMS_OUTPUT
                dot: .
                function_name_identifier: PUT_LINE
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        function_name_identifier: RPAD
                      function_contents:
                        bracketed:
                        - start_bracket: (
                        - expression:
                            column_reference:
                              naked_identifier: v_lastname
                        - comma: ','
                        - expression:
                            numeric_literal: '25'
                        - comma: ','
                        - expression:
                            quoted_literal: "' '"
                        - end_bracket: )
                    binary_operator:
                    - pipe: '|'
                    - pipe: '|'
                    column_reference:
                      naked_identifier: v_jobid
                  end_bracket: )
        - statement_terminator: ;
        - keyword: END
        - keyword: LOOP
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            naked_identifier: DBMS_OUTPUT
            dot: .
            function_name_identifier: PUT_LINE
          function_contents:
            bracketed:
              start_bracket: (
              expression:
                quoted_literal: "'-------------------------------------'"
              end_bracket: )
    - statement_terminator: ;
    - statement:
        open_for_statement:
        - keyword: OPEN
        - naked_identifier: cv
        - keyword: FOR
        - naked_identifier: query_2
    - statement_terminator: ;
    - statement:
        loop_statement:
        - keyword: LOOP
        - statement:
            fetch_statement:
              keyword: FETCH
              naked_identifier: cv
              into_clause:
                keyword: INTO
                naked_identifier: v_employees
        - statement_terminator: ;
        - statement:
            exit_statement:
            - keyword: EXIT
            - keyword: WHEN
            - expression:
                naked_identifier: cv
                binary_operator: '%'
                keyword: NOTFOUND
        - statement_terminator: ;
        - statement:
            function:
              function_name:
                naked_identifier: DBMS_OUTPUT
                dot: .
                function_name_identifier: PUT_LINE
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        function_name_identifier: RPAD
                      function_contents:
                        bracketed:
                        - start_bracket: (
                        - expression:
                            column_reference:
                            - naked_identifier: v_employees
                            - dot: .
                            - naked_identifier: last_name
                        - comma: ','
                        - expression:
                            numeric_literal: '25'
                        - comma: ','
                        - expression:
                            quoted_literal: "' '"
                        - end_bracket: )
                    binary_operator:
                    - pipe: '|'
                    - pipe: '|'
                    column_reference:
                    - naked_identifier: v_employees
                    - dot: .
                    - naked_identifier: job_id
                  end_bracket: )
        - statement_terminator: ;
        - keyword: END
        - keyword: LOOP
    - statement_terminator: ;
    - statement:
        close_statement:
          keyword: CLOSE
          naked_identifier: cv
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
- statement:
    begin_end_block:
    - declare_segment:
      - keyword: DECLARE
      - ref_cursor_type:
        - keyword: TYPE
        - naked_identifier: empcurtyp
        - keyword: IS
        - keyword: REF
        - keyword: CURSOR
      - statement_terminator: ;
      - collection_type:
        - keyword: TYPE
        - naked_identifier: namelist
        - keyword: IS
        - keyword: TABLE
        - keyword: OF
        - column_type_reference:
            column_reference:
            - naked_identifier: employees
            - dot: .
            - naked_identifier: last_name
            binary_operator: '%'
            keyword: TYPE
      - statement_terminator: ;
      - collection_type:
        - keyword: TYPE
        - naked_identifier: sallist
        - keyword: IS
        - keyword: TABLE
        - keyword: OF
        - column_type_reference:
            column_reference:
            - naked_identifier: employees
            - dot: .
            - naked_identifier: salary
            binary_operator: '%'
            keyword: TYPE
      - statement_terminator: ;
      - naked_identifier: emp_cv
      - data_type:
          data_type_identifier: empcurtyp
      - statement_terminator: ;
      - naked_identifier: names
      - data_type:
          data_type_identifier: namelist
      - statement_terminator: ;
      - naked_identifier: sals
      - data_type:
          data_type_identifier: sallist
      - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        open_for_statement:
        - keyword: OPEN
        - naked_identifier: emp_cv
        - keyword: FOR
        - select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  naked_identifier: last_name
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: salary
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: employees
            where_clause:
              keyword: WHERE
              expression:
                column_reference:
                  naked_identifier: job_id
                comparison_operator:
                  raw_comparison_operator: '='
                quoted_literal: "'SA_REP'"
            orderby_clause:
            - keyword: ORDER
            - keyword: BY
            - column_reference:
                naked_identifier: salary
            - keyword: DESC
    - statement_terminator: ;
    - statement:
        fetch_statement:
          keyword: FETCH
          naked_identifier: emp_cv
          bulk_collect_into_clause:
          - keyword: BULK
          - keyword: COLLECT
          - keyword: INTO
          - naked_identifier: names
          - comma: ','
          - naked_identifier: sals
    - statement_terminator: ;
    - statement:
        close_statement:
          keyword: CLOSE
          naked_identifier: emp_cv
    - statement_terminator: ;
    - statement:
        for_loop_statement:
        - keyword: FOR
        - naked_identifier: i
        - keyword: IN
        - naked_identifier: names
        - dot: .
        - naked_identifier: FIRST
        - dot: .
        - dot: .
        - naked_identifier: names
        - dot: .
        - naked_identifier: LAST
        - loop_statement:
          - keyword: LOOP
          - statement:
              function:
                function_name:
                  naked_identifier: DBMS_OUTPUT
                  dot: .
                  function_name_identifier: PUT_LINE
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                    - quoted_literal: "'Name = '"
                    - binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                    - function:
                        function_name:
                          function_name_identifier: names
                        function_contents:
                          bracketed:
                            start_bracket: (
                            expression:
                              column_reference:
                                naked_identifier: i
                            end_bracket: )
                    - binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                    - quoted_literal: "', salary = '"
                    - binary_operator:
                      - pipe: '|'
                      - pipe: '|'
                    - function:
                        function_name:
                          function_name_identifier: sals
                        function_contents:
                          bracketed:
                            start_bracket: (
                            expression:
                              column_reference:
                                naked_identifier: i
                            end_bracket: )
                    end_bracket: )
          - statement_terminator: ;
          - keyword: END
          - keyword: LOOP
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
- statement:
    begin_end_block:
    - declare_segment:
        keyword: DECLARE
        cursor_variable:
        - keyword: CURSOR
        - naked_identifier: c1
        - keyword: IS
        - select_statement:
          - select_clause:
              keyword: SELECT
              select_clause_element:
                wildcard_expression:
                  wildcard_identifier:
                    star: '*'
          - from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: emp
          - keyword: FOR
          - keyword: UPDATE
          - keyword: OF
          - table_reference:
              naked_identifier: salary
          - orderby_clause:
            - keyword: ORDER
            - keyword: BY
            - column_reference:
                naked_identifier: employee_id
        - statement_terminator: ;
        naked_identifier: emp_rec
        row_type_reference:
          table_reference:
            naked_identifier: emp
          binary_operator: '%'
          keyword: ROWTYPE
        statement_terminator: ;
    - keyword: BEGIN
    - statement:
        open_statement:
          keyword: OPEN
          naked_identifier: c1
    - statement_terminator: ;
    - statement:
        loop_statement:
        - keyword: LOOP
        - statement:
            fetch_statement:
              keyword: FETCH
              naked_identifier: c1
              into_clause:
                keyword: INTO
                naked_identifier: emp_rec
        - statement_terminator: ;
        - statement:
            exit_statement:
            - keyword: EXIT
            - keyword: WHEN
            - expression:
                naked_identifier: c1
                binary_operator: '%'
                keyword: NOTFOUND
        - statement_terminator: ;
        - statement:
            function:
              function_name:
                naked_identifier: DBMS_OUTPUT
                dot: .
                function_name_identifier: PUT_LINE
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    quoted_literal: "'emp_rec.employee_id = '"
                    binary_operator:
                    - pipe: '|'
                    - pipe: '|'
                    function:
                      function_name:
                        function_name_identifier: TO_CHAR
                      function_contents:
                        bracketed:
                          start_bracket: (
                          expression:
                            column_reference:
                            - naked_identifier: emp_rec
                            - dot: .
                            - naked_identifier: employee_id
                          end_bracket: )
                  end_bracket: )
        - statement_terminator: ;
        - statement:
            update_statement:
              keyword: UPDATE
              table_reference:
                naked_identifier: emp
              set_clause_list:
                keyword: SET
                set_clause:
                  column_reference:
                    naked_identifier: salary
                  comparison_operator:
                    raw_comparison_operator: '='
                  expression:
                    column_reference:
                      naked_identifier: salary
                    binary_operator: '*'
                    numeric_literal: '1.05'
              where_clause:
                keyword: WHERE
                expression:
                  column_reference:
                    naked_identifier: employee_id
                  comparison_operator:
                    raw_comparison_operator: '='
                  numeric_literal: '105'
        - statement_terminator: ;
        - statement:
            transaction_statement:
              keyword: COMMIT
        - statement_terminator: ;
        - keyword: END
        - keyword: LOOP
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
- statement:
    begin_end_block:
    - declare_segment:
      - keyword: DECLARE
      - ref_cursor_type:
        - keyword: TYPE
        - naked_identifier: EmpCurTyp
        - keyword: IS
        - keyword: REF
        - keyword: CURSOR
      - statement_terminator: ;
      - naked_identifier: v_emp_cursor
      - data_type:
          data_type_identifier: EmpCurTyp
      - statement_terminator: ;
      - naked_identifier: emp_record
      - row_type_reference:
          table_reference:
            naked_identifier: employees
          binary_operator: '%'
          keyword: ROWTYPE
      - statement_terminator: ;
      - naked_identifier: v_stmt_str
      - data_type:
          data_type_identifier: VARCHAR2
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '200'
              end_bracket: )
      - statement_terminator: ;
      - naked_identifier: v_e_job
      - column_type_reference:
          column_reference:
          - naked_identifier: employees
          - dot: .
          - naked_identifier: job_id
          binary_operator: '%'
          keyword: TYPE
      - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        assignment_segment_statement:
          object_reference:
            naked_identifier: v_stmt_str
          colon: ':'
          comparison_operator:
            raw_comparison_operator: '='
          expression:
            quoted_literal: "'SELECT * FROM employees WHERE job_id = :j'"
    - statement_terminator: ;
    - statement:
        open_for_statement:
        - keyword: OPEN
        - naked_identifier: v_emp_cursor
        - keyword: FOR
        - naked_identifier: v_stmt_str
        - keyword: USING
        - quoted_identifier: "'MANAGER'"
    - statement_terminator: ;
    - statement:
        loop_statement:
        - keyword: LOOP
        - statement:
            fetch_statement:
              keyword: FETCH
              naked_identifier: v_emp_cursor
              into_clause:
                keyword: INTO
                naked_identifier: emp_record
        - statement_terminator: ;
        - statement:
            exit_statement:
            - keyword: EXIT
            - keyword: WHEN
            - expression:
                naked_identifier: v_emp_cursor
                binary_operator: '%'
                keyword: NOTFOUND
        - statement_terminator: ;
        - keyword: END
        - keyword: LOOP
    - statement_terminator: ;
    - statement:
        close_statement:
          keyword: CLOSE
          naked_identifier: v_emp_cursor
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
- statement:
    begin_end_block:
    - declare_segment:
      - keyword: DECLARE
      - collection_type:
        - keyword: TYPE
        - naked_identifier: NameList
        - keyword: IS
        - keyword: TABLE
        - keyword: OF
        - column_type_reference:
            column_reference:
            - naked_identifier: employees
            - dot: .
            - naked_identifier: last_name
            binary_operator: '%'
            keyword: TYPE
      - statement_terminator: ;
      - collection_type:
        - keyword: TYPE
        - naked_identifier: SalList
        - keyword: IS
        - keyword: TABLE
        - keyword: OF
        - column_type_reference:
            column_reference:
            - naked_identifier: employees
            - dot: .
            - naked_identifier: salary
            binary_operator: '%'
            keyword: TYPE
      - statement_terminator: ;
      - cursor_variable:
        - keyword: CURSOR
        - naked_identifier: c1
        - keyword: IS
        - select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  naked_identifier: last_name
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: salary
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: employees
            where_clause:
              keyword: WHERE
              expression:
                column_reference:
                  naked_identifier: salary
                comparison_operator:
                  raw_comparison_operator: '>'
                numeric_literal: '10000'
            orderby_clause:
            - keyword: ORDER
            - keyword: BY
            - column_reference:
                naked_identifier: last_name
        - statement_terminator: ;
      - naked_identifier: names
      - data_type:
          data_type_identifier: NameList
      - statement_terminator: ;
      - naked_identifier: sals
      - data_type:
          data_type_identifier: SalList
      - statement_terminator: ;
      - collection_type:
        - keyword: TYPE
        - naked_identifier: RecList
        - keyword: IS
        - keyword: TABLE
        - keyword: OF
        - row_type_reference:
            table_reference:
              naked_identifier: c1
            binary_operator: '%'
            keyword: ROWTYPE
      - statement_terminator: ;
      - naked_identifier: recs
      - data_type:
          data_type_identifier: RecList
      - statement_terminator: ;
      - naked_identifier: v_limit
      - data_type:
          data_type_identifier: PLS_INTEGER
      - colon: ':'
      - comparison_operator:
          raw_comparison_operator: '='
      - expression:
          numeric_literal: '10'
      - statement_terminator: ;
      - create_procedure_statement:
        - keyword: PROCEDURE
        - function_name:
            function_name_identifier: print_results
        - keyword: IS
        - begin_end_block:
          - keyword: BEGIN
          - statement:
              if_then_statement:
              - if_clause:
                - keyword: IF
                - expression:
                  - column_reference:
                      naked_identifier: names
                  - keyword: IS
                  - null_literal: 'NULL'
                  - binary_operator: OR
                  - column_reference:
                    - naked_identifier: names
                    - dot: .
                    - naked_identifier: COUNT
                  - comparison_operator:
                      raw_comparison_operator: '='
                  - numeric_literal: '0'
                - keyword: THEN
              - statement:
                  function:
                    function_name:
                      naked_identifier: DBMS_OUTPUT
                      dot: .
                      function_name_identifier: PUT_LINE
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          quoted_literal: "'No results!'"
                        end_bracket: )
              - statement_terminator: ;
              - keyword: ELSE
              - statement:
                  function:
                    function_name:
                      naked_identifier: DBMS_OUTPUT
                      dot: .
                      function_name_identifier: PUT_LINE
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          quoted_literal: "'Result: '"
                        end_bracket: )
              - statement_terminator: ;
              - statement:
                  for_loop_statement:
                  - keyword: FOR
                  - naked_identifier: i
                  - keyword: IN
                  - naked_identifier: names
                  - dot: .
                  - naked_identifier: FIRST
                  - dot: .
                  - dot: .
                  - naked_identifier: names
                  - dot: .
                  - naked_identifier: LAST
                  - loop_statement:
                    - keyword: LOOP
                    - statement:
                        function:
                          function_name:
                            naked_identifier: DBMS_OUTPUT
                            dot: .
                            function_name_identifier: PUT_LINE
                          function_contents:
                            bracketed:
                              start_bracket: (
                              expression:
                              - quoted_literal: "'  Employee '"
                              - binary_operator:
                                - pipe: '|'
                                - pipe: '|'
                              - function:
                                  function_name:
                                    function_name_identifier: names
                                  function_contents:
                                    bracketed:
                                      start_bracket: (
                                      expression:
                                        column_reference:
                                          naked_identifier: i
                                      end_bracket: )
                              - binary_operator:
                                - pipe: '|'
                                - pipe: '|'
                              - quoted_literal: "': $'"
                              - binary_operator:
                                - pipe: '|'
                                - pipe: '|'
                              - function:
                                  function_name:
                                    function_name_identifier: sals
                                  function_contents:
                                    bracketed:
                                      start_bracket: (
                                      expression:
                                        column_reference:
                                          naked_identifier: i
                                      end_bracket: )
                              end_bracket: )
                    - statement_terminator: ;
                    - keyword: END
                    - keyword: LOOP
              - statement_terminator: ;
              - keyword: END
              - keyword: IF
          - statement_terminator: ;
          - keyword: END
        - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        function:
          function_name:
            naked_identifier: DBMS_OUTPUT
            dot: .
            function_name_identifier: PUT_LINE
          function_contents:
            bracketed:
              start_bracket: (
              expression:
                quoted_literal: "'--- Processing all results simultaneously ---'"
              end_bracket: )
    - statement_terminator: ;
    - statement:
        open_statement:
          keyword: OPEN
          naked_identifier: c1
    - statement_terminator: ;
    - statement:
        fetch_statement:
          keyword: FETCH
          naked_identifier: c1
          bulk_collect_into_clause:
          - keyword: BULK
          - keyword: COLLECT
          - keyword: INTO
          - naked_identifier: names
          - comma: ','
          - naked_identifier: sals
    - statement_terminator: ;
    - statement:
        close_statement:
          keyword: CLOSE
          naked_identifier: c1
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            function_name_identifier: print_results
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            naked_identifier: DBMS_OUTPUT
            dot: .
            function_name_identifier: PUT_LINE
          function_contents:
            bracketed:
              start_bracket: (
              expression:
              - quoted_literal: "'--- Processing '"
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - column_reference:
                  naked_identifier: v_limit
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - quoted_literal: "' rows at a time ---'"
              end_bracket: )
    - statement_terminator: ;
    - statement:
        open_statement:
          keyword: OPEN
          naked_identifier: c1
    - statement_terminator: ;
    - statement:
        loop_statement:
        - keyword: LOOP
        - statement:
            fetch_statement:
            - keyword: FETCH
            - naked_identifier: c1
            - bulk_collect_into_clause:
              - keyword: BULK
              - keyword: COLLECT
              - keyword: INTO
              - naked_identifier: names
              - comma: ','
              - naked_identifier: sals
            - keyword: LIMIT
            - naked_identifier: v_limit
        - statement_terminator: ;
        - statement:
            exit_statement:
            - keyword: EXIT
            - keyword: WHEN
            - expression:
                column_reference:
                - naked_identifier: names
                - dot: .
                - naked_identifier: COUNT
                comparison_operator:
                  raw_comparison_operator: '='
                numeric_literal: '0'
        - statement_terminator: ;
        - statement:
            function:
              function_name:
                function_name_identifier: print_results
              function_contents:
                bracketed:
                  start_bracket: (
                  end_bracket: )
        - statement_terminator: ;
        - keyword: END
        - keyword: LOOP
    - statement_terminator: ;
    - statement:
        close_statement:
          keyword: CLOSE
          naked_identifier: c1
    - statement_terminator: ;
    - statement:
        function:
          function_name:
            naked_identifier: DBMS_OUTPUT
            dot: .
            function_name_identifier: PUT_LINE
          function_contents:
            bracketed:
              start_bracket: (
              expression:
                quoted_literal: "'--- Fetching records rather than columns ---'"
              end_bracket: )
    - statement_terminator: ;
    - statement:
        open_statement:
          keyword: OPEN
          naked_identifier: c1
    - statement_terminator: ;
    - statement:
        fetch_statement:
          keyword: FETCH
          naked_identifier: c1
          bulk_collect_into_clause:
          - keyword: BULK
          - keyword: COLLECT
          - keyword: INTO
          - naked_identifier: recs
    - statement_terminator: ;
    - statement:
        for_loop_statement:
        - keyword: FOR
        - naked_identifier: i
        - keyword: IN
        - naked_identifier: recs
        - dot: .
        - naked_identifier: FIRST
        - dot: .
        - dot: .
        - naked_identifier: recs
        - dot: .
        - naked_identifier: LAST
        - loop_statement:
          - keyword: LOOP
          - statement:
              function:
                function_name:
                  naked_identifier: DBMS_OUTPUT
                  dot: .
                  function_name_identifier: PUT_LINE
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      numeric_literal: '1'
                    end_bracket: )
          - statement_terminator: ;
          - keyword: END
          - keyword: LOOP
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
- statement:
    begin_end_block:
    - declare_segment:
      - keyword: DECLARE
      - cursor_variable:
        - keyword: CURSOR
        - naked_identifier: c1
        - keyword: IS
        - select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  naked_identifier: first_name
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: last_name
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: hire_date
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: employees
        - statement_terminator: ;
      - collection_type:
        - keyword: TYPE
        - naked_identifier: NameSet
        - keyword: IS
        - keyword: TABLE
        - keyword: OF
        - row_type_reference:
            table_reference:
              naked_identifier: c1
            binary_operator: '%'
            keyword: ROWTYPE
      - statement_terminator: ;
      - naked_identifier: stock_managers
      - data_type:
          data_type_identifier: NameSet
      - statement_terminator: ;
      - ref_cursor_type:
        - keyword: TYPE
        - naked_identifier: cursor_var_type
        - keyword: is
        - keyword: REF
        - keyword: CURSOR
      - statement_terminator: ;
      - naked_identifier: cv
      - data_type:
          data_type_identifier: cursor_var_type
      - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        open_for_statement:
        - keyword: OPEN
        - naked_identifier: cv
        - keyword: FOR
        - select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  naked_identifier: first_name
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: last_name
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: hire_date
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: employees
            where_clause:
              keyword: WHERE
              expression:
                column_reference:
                  naked_identifier: job_id
                comparison_operator:
                  raw_comparison_operator: '='
                quoted_literal: "'ST_MAN'"
            orderby_clause:
            - keyword: ORDER
            - keyword: BY
            - column_reference:
                naked_identifier: hire_date
    - statement_terminator: ;
    - statement:
        fetch_statement:
          keyword: FETCH
          naked_identifier: cv
          bulk_collect_into_clause:
          - keyword: BULK
          - keyword: COLLECT
          - keyword: INTO
          - naked_identifier: stock_managers
    - statement_terminator: ;
    - statement:
        close_statement:
          keyword: CLOSE
          naked_identifier: cv
    - statement_terminator: ;
    - statement:
        for_loop_statement:
        - keyword: FOR
        - naked_identifier: i
        - keyword: IN
        - naked_identifier: stock_managers
        - dot: .
        - naked_identifier: FIRST
        - dot: .
        - dot: .
        - naked_identifier: stock_managers
        - dot: .
        - naked_identifier: LAST
        - loop_statement:
          - keyword: LOOP
          - statement:
              function:
                function_name:
                  naked_identifier: DBMS_OUTPUT
                  dot: .
                  function_name_identifier: PUT_LINE
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      numeric_literal: '1'
                    end_bracket: )
          - statement_terminator: ;
          - keyword: END
          - keyword: LOOP
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
- statement:
    begin_end_block:
    - declare_segment:
      - keyword: DECLARE
      - collection_type:
        - keyword: TYPE
        - naked_identifier: numtab
        - keyword: IS
        - keyword: TABLE
        - keyword: OF
        - data_type:
            data_type_identifier: NUMBER
        - keyword: INDEX
        - keyword: BY
        - data_type:
            data_type_identifier: PLS_INTEGER
      - statement_terminator: ;
      - cursor_variable:
        - keyword: CURSOR
        - naked_identifier: c1
        - keyword: IS
        - select_statement:
            select_clause:
              keyword: SELECT
              select_clause_element:
                column_reference:
                  naked_identifier: employee_id
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: employees
            where_clause:
              keyword: WHERE
              expression:
                column_reference:
                  naked_identifier: department_id
                comparison_operator:
                  raw_comparison_operator: '='
                numeric_literal: '80'
            orderby_clause:
            - keyword: ORDER
            - keyword: BY
            - column_reference:
                naked_identifier: employee_id
        - statement_terminator: ;
      - naked_identifier: empids
      - data_type:
          data_type_identifier: numtab
      - statement_terminator: ;
    - keyword: BEGIN
    - statement:
        open_statement:
          keyword: OPEN
          naked_identifier: c1
    - statement_terminator: ;
    - statement:
        loop_statement:
        - keyword: LOOP
        - statement:
            fetch_statement:
            - keyword: FETCH
            - naked_identifier: c1
            - bulk_collect_into_clause:
              - keyword: BULK
              - keyword: COLLECT
              - keyword: INTO
              - naked_identifier: empids
            - keyword: LIMIT
            - numeric_literal: '10'
        - statement_terminator: ;
        - statement:
            function:
              function_name:
                naked_identifier: DBMS_OUTPUT
                dot: .
                function_name_identifier: PUT_LINE
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    quoted_literal: "'------- Results from One Bulk Fetch --------'"
                  end_bracket: )
        - statement_terminator: ;
        - statement:
            for_loop_statement:
            - keyword: FOR
            - naked_identifier: i
            - keyword: IN
            - numeric_literal: '1'
            - dot: .
            - dot: .
            - naked_identifier: empids
            - dot: .
            - naked_identifier: COUNT
            - loop_statement:
              - keyword: LOOP
              - statement:
                  function:
                    function_name:
                      naked_identifier: DBMS_OUTPUT
                      dot: .
                      function_name_identifier: PUT_LINE
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          quoted_literal: "'Employee Id: '"
                          binary_operator:
                          - pipe: '|'
                          - pipe: '|'
                          function:
                            function_name:
                              function_name_identifier: empids
                            function_contents:
                              bracketed:
                                start_bracket: (
                                expression:
                                  column_reference:
                                    naked_identifier: i
                                end_bracket: )
                        end_bracket: )
              - statement_terminator: ;
              - keyword: END
              - keyword: LOOP
        - statement_terminator: ;
        - statement:
            exit_statement:
            - keyword: EXIT
            - keyword: WHEN
            - expression:
                naked_identifier: c1
                binary_operator: '%'
                keyword: NOTFOUND
        - statement_terminator: ;
        - keyword: END
        - keyword: LOOP
    - statement_terminator: ;
    - statement:
        close_statement:
          keyword: CLOSE
          naked_identifier: c1
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement_terminator: /
