# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 209707747e9dcced53a0e41345eb2e667abbfc6ab1828270e775e9e4f36ea5a2
file:
  statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: t10
    - keyword: PROPERTIES
    - bracketed:
      - start_bracket: (
      - quoted_literal: "'replication_num'"
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'1'"
      - comma: ','
      - quoted_literal: "'storage_medium'"
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'SSD'"
      - end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: name
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: COUNT
              function_contents:
                bracketed:
                  start_bracket: (
                  star: '*'
                  end_bracket: )
            alias_expression:
              keyword: as
              naked_identifier: count
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: t1
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
              naked_identifier: status
            comparison_operator:
              raw_comparison_operator: '='
            quoted_literal: "'active'"
        groupby_clause:
        - keyword: GROUP
        - keyword: BY
        - column_reference:
            naked_identifier: id
        - comma: ','
        - column_reference:
            naked_identifier: name
  statement_terminator: ;
