# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 0da06ad10c8235daf84446d1672b93696dd4e8180223a0f017ffcbced7a92820
file:
  statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: t8
    - bracketed:
      - start_bracket: (
      - column_definition:
          naked_identifier: c1
          data_type:
            data_type_identifier: INT
      - comma: ','
      - column_definition:
        - naked_identifier: c2
        - keyword: DATETIME
        - keyword: NOT
        - keyword: 'NULL'
      - end_bracket: )
    - keyword: DUPLICATE
    - keyword: KEY
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: c1
        end_bracket: )
    - partition_segment:
      - keyword: PARTITION
      - keyword: BY
      - keyword: RANGE
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: c2
          end_bracket: )
      - bracketed:
          start_bracket: (
          range_partition_interval:
          - keyword: FROM
          - bracketed:
              start_bracket: (
              quoted_literal: "'2020-01-01'"
              end_bracket: )
          - keyword: TO
          - bracketed:
              start_bracket: (
              quoted_literal: "'2020-01-10'"
              end_bracket: )
          - keyword: INTERVAL
          - numeric_literal: '1'
          - keyword: DAY
          end_bracket: )
    - distribution_segment:
      - keyword: DISTRIBUTED
      - keyword: BY
      - keyword: RANDOM
    - keyword: PROPERTIES
    - bracketed:
      - start_bracket: (
      - quoted_literal: "'replication_num'"
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'1'"
      - end_bracket: )
  statement_terminator: ;
