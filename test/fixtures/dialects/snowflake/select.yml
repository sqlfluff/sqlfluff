# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 7e91a615e51a9371171b3d61b6a68065aa569a024e7cd76ce5c91d2256b0f623
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: a
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: b
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: view
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: foo
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: view
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: case
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: issue
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: issue
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: customer_id
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: TRIM
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: value
                  semi_structured_expression:
                    colon: ':'
                    semi_structured_element: cross
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: cross
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: customer_id
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
          join_clause:
          - keyword: cross
          - keyword: join
          - from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: my_table2
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          column_reference:
            naked_identifier: notify
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: foo
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: coalesce
            function_contents:
              bracketed:
              - start_bracket: (
              - expression:
                  column_reference:
                  - naked_identifier: do
                  - dot: .
                  - naked_identifier: a
              - comma: ','
              - expression:
                  column_reference:
                  - naked_identifier: do
                  - dot: .
                  - naked_identifier: b
              - end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: value
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: delivery_override
            alias_expression:
              alias_operator:
                keyword: as
              naked_identifier: do
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - naked_identifier: t
          - dot: .
          - naked_identifier: id
      - comma: ','
      - select_clause_element:
          boolean_literal: 'TRUE'
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: test
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: mytable
            alias_expression:
              naked_identifier: t
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - boolean_literal: 'TRUE'
- statement_terminator: ;
