# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 6c9aa8d27592eba6eb381f95f93eec863ddd0d4af605d5d60defd9e14f8ebbb2
file:
  statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: value
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: p_id
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: name
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: iff
            function_contents:
              bracketed:
              - start_bracket: (
              - expression:
                  function:
                    function_name:
                      function_name_identifier: rank
                    function_contents:
                      bracketed:
                        start_bracket: (
                        end_bracket: )
                    over_clause:
                      keyword: over
                      bracketed:
                        start_bracket: (
                        window_specification:
                          partitionby_clause:
                          - keyword: partition
                          - keyword: by
                          - expression:
                              column_reference:
                                naked_identifier: id
                          orderby_clause:
                          - keyword: order
                          - keyword: by
                          - column_reference:
                              naked_identifier: t_id
                          - keyword: desc
                        end_bracket: )
                  comparison_operator:
                    raw_comparison_operator: '='
                  numeric_literal: '1'
              - comma: ','
              - expression:
                  boolean_literal: 'true'
              - comma: ','
              - expression:
                  boolean_literal: 'false'
              - end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: most_recent
      from_clause:
      - keyword: from
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: a
          join_clause:
          - keyword: inner
          - keyword: join
          - from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: b
          - join_on_condition:
              keyword: 'on'
              bracketed:
                start_bracket: (
                expression:
                - column_reference:
                  - naked_identifier: b
                  - dot: .
                  - naked_identifier: c_id
                - comparison_operator:
                    raw_comparison_operator: '='
                - column_reference:
                  - naked_identifier: a
                  - dot: .
                  - naked_identifier: c_id
                end_bracket: )
      - comma: ','
      - from_expression:
          from_expression_element:
            keyword: lateral
            table_expression:
              function:
                function_name:
                  function_name_identifier: flatten
                function_contents:
                  bracketed:
                    start_bracket: (
                    snowflake_keyword_expression:
                      parameter: input
                      parameter_assigner: =>
                      column_reference:
                      - naked_identifier: b
                      - dot: .
                      - naked_identifier: cool_ids
                    end_bracket: )
