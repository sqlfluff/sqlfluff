# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 59ae7a78940dcb8ef632a7dc767734a26350b65799eb64dad9809fc83bf64d7e
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: DATEADD
            function_contents:
              bracketed:
              - start_bracket: (
              - date_part: NANOSECONDS
              - comma: ','
              - expression:
                  numeric_literal:
                    sign_indicator: '-'
                    numeric_literal: '1'
              - comma: ','
              - expression:
                  quoted_literal: "'2020-01-01'"
              - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          expression:
            function:
              function_name:
                function_name_identifier: to_date
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    quoted_literal: "'2018-04-15'"
                  end_bracket: )
            binary_operator: +
            keyword: INTERVAL
            date_constructor_literal: "'1 year'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          expression:
            function:
              function_name:
                function_name_identifier: to_time
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    quoted_literal: "'04:15:29'"
                  end_bracket: )
            binary_operator: +
            keyword: INTERVAL
            date_constructor_literal: "'3 hours, 18 minutes'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          expression:
            bare_function: current_timestamp
            binary_operator: +
            keyword: INTERVAL
            date_constructor_literal: "'1 year, 3 quarters, 4 months, 5 weeks, 6 days,\
              \ 7 minutes, 8 seconds,\n                            1000 milliseconds,\
              \ 4000000 microseconds, 5000000001 nanoseconds'"
          alias_expression:
            keyword: as
            naked_identifier: complex_interval1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          expression:
            function:
              function_name:
                function_name_identifier: to_date
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    quoted_literal: "'2025-01-17'"
                  end_bracket: )
            binary_operator: +
            keyword: INTERVAL
            date_constructor_literal: "'1 y, 3 q, 4 mm, 5 w, 6 d, 7 h, 9 m, 8 s,\n\
              \                                1000 ms, 445343232 us, 898498273498\
              \ ns'"
          alias_expression:
            keyword: as
            naked_identifier: complex_interval2
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: name
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: hire_date
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: employees
      where_clause:
        keyword: where
        expression:
          column_reference:
            naked_identifier: hire_date
          comparison_operator:
            raw_comparison_operator: '>'
          bare_function: current_date
          binary_operator: '-'
          keyword: INTERVAL
          date_constructor_literal: "'2 y, 3 month'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          expression:
            column_reference:
              naked_identifier: ts
            binary_operator: +
            keyword: INTERVAL
            date_constructor_literal: "'4 seconds'"
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: t1
      where_clause:
        keyword: where
        expression:
          column_reference:
            naked_identifier: ts
          comparison_operator:
            raw_comparison_operator: '>'
          function:
            function_name:
              function_name_identifier: to_timestamp
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  quoted_literal: "'2014-04-05 01:02:03'"
                end_bracket: )
- statement_terminator: ;
