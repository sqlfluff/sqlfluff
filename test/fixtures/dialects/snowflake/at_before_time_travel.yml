# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 2efae40f5e4f06ca9a77243c50b161f929fad64916dd18f324cb582360bba534
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
            from_at_expression:
              keyword: AT
              bracketed:
                start_bracket: (
                keyword: TIMESTAMP
                parameter_assigner: =>
                expression:
                  cast_expression:
                    quoted_literal: "'2024-06-05 12:30:00'"
                    casting_operator: '::'
                    data_type:
                      data_type_identifier: TIMESTAMP_LTZ
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
            from_at_expression:
              keyword: AT
              bracketed:
                start_bracket: (
                keyword: TIMESTAMP
                parameter_assigner: =>
                expression:
                  cast_expression:
                    quoted_literal: "'2024-06-05 12:30:00'"
                    casting_operator: '::'
                    data_type:
                      keyword: TIMESTAMP
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
            from_at_expression:
              keyword: AT
              bracketed:
                start_bracket: (
                keyword: TIMESTAMP
                parameter_assigner: =>
                expression:
                  quoted_literal: "'2024-06-05 12:30:00'"
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
            from_at_expression:
              keyword: AT
              bracketed:
                start_bracket: (
                keyword: TIMESTAMP
                parameter_assigner: =>
                expression:
                  quoted_literal: "'2024-06-05 12:30:00'"
                end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: T
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
            from_before_expression:
              keyword: BEFORE
              bracketed:
                start_bracket: (
                keyword: STATEMENT
                parameter_assigner: =>
                expression:
                  quoted_literal: "'8e5d0ca9-005e-44e6-b858-a8f5b37c5726'"
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              naked_identifier: oldt
              dot: .
              star: '*'
      - comma: ','
      - select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              naked_identifier: newt
              dot: .
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
            from_before_expression:
              keyword: BEFORE
              bracketed:
                start_bracket: (
                keyword: STATEMENT
                parameter_assigner: =>
                expression:
                  quoted_literal: "'8e5d0ca9-005e-44e6-b858-a8f5b37c5726'"
                end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: oldt
          join_clause:
          - keyword: FULL
          - keyword: OUTER
          - keyword: JOIN
          - from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: my_table
              from_at_expression:
                keyword: AT
                bracketed:
                  start_bracket: (
                  keyword: STATEMENT
                  parameter_assigner: =>
                  expression:
                    quoted_literal: "'8e5d0ca9-005e-44e6-b858-a8f5b37c5726'"
                  end_bracket: )
              alias_expression:
                keyword: AS
                naked_identifier: newt
          - join_on_condition:
              keyword: 'ON'
              expression:
              - column_reference:
                - naked_identifier: oldt
                - dot: .
                - naked_identifier: id
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                - naked_identifier: newt
                - dot: .
                - naked_identifier: id
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
          - naked_identifier: oldt
          - dot: .
          - naked_identifier: id
        - keyword: IS
        - null_literal: 'NULL'
        - binary_operator: OR
        - column_reference:
          - naked_identifier: newt
          - dot: .
          - naked_identifier: id
        - keyword: IS
        - null_literal: 'NULL'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: db1
              - dot: .
              - naked_identifier: public
              - dot: .
              - naked_identifier: htt1
            from_at_expression:
              keyword: AT
              bracketed:
                start_bracket: (
                keyword: TIMESTAMP
                parameter_assigner: =>
                expression:
                  cast_expression:
                    quoted_literal: "'2024-06-05 17:50:00'"
                    casting_operator: '::'
                    data_type:
                      data_type_identifier: TIMESTAMP_LTZ
                end_bracket: )
            alias_expression:
              naked_identifier: h
          join_clause:
            keyword: JOIN
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db1
                - dot: .
                - naked_identifier: public
                - dot: .
                - naked_identifier: tt1
              from_at_expression:
                keyword: AT
                bracketed:
                  start_bracket: (
                  keyword: TIMESTAMP
                  parameter_assigner: =>
                  expression:
                    cast_expression:
                      quoted_literal: "'2024-06-05 17:50:00'"
                      casting_operator: '::'
                      data_type:
                        data_type_identifier: TIMESTAMP_LTZ
                  end_bracket: )
              alias_expression:
                naked_identifier: t
            join_on_condition:
              keyword: 'ON'
              expression:
              - column_reference:
                - naked_identifier: h
                - dot: .
                - naked_identifier: c1
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                - naked_identifier: t
                - dot: .
                - naked_identifier: c1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
            from_at_expression:
              keyword: AT
              bracketed:
                start_bracket: (
                keyword: TIMESTAMP
                parameter_assigner: =>
                expression:
                  function:
                    function_name:
                      function_name_identifier: TO_TIMESTAMP
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          function:
                            function_name:
                              function_name_identifier: DATEADD
                            function_contents:
                              bracketed:
                              - start_bracket: (
                              - expression:
                                  quoted_literal: "'DAY'"
                              - comma: ','
                              - expression:
                                  numeric_literal:
                                    sign_indicator: '-'
                                    numeric_literal: '1'
                              - comma: ','
                              - expression:
                                  function:
                                    function_name:
                                      function_name_identifier: DATEADD
                                    function_contents:
                                      bracketed:
                                      - start_bracket: (
                                      - expression:
                                          quoted_literal: "'MONTH'"
                                      - comma: ','
                                      - expression:
                                          numeric_literal:
                                            sign_indicator: '-'
                                            numeric_literal: '1'
                                      - comma: ','
                                      - expression:
                                          function:
                                            function_name:
                                              function_name_identifier: DATEADD
                                            function_contents:
                                              bracketed:
                                              - start_bracket: (
                                              - expression:
                                                  quoted_literal: "'DAY'"
                                              - comma: ','
                                              - expression:
                                                  numeric_literal:
                                                    sign_indicator: '-'
                                                    numeric_literal: '1'
                                              - comma: ','
                                              - expression:
                                                  bare_function: CURRENT_DATE
                                              - end_bracket: )
                                      - end_bracket: )
                              - end_bracket: )
                        end_bracket: )
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
            from_at_expression:
              keyword: AT
              bracketed:
                start_bracket: (
                keyword: TIMESTAMP
                parameter_assigner: =>
                expression:
                  cast_expression:
                    quoted_literal: "'Fri, 01 May 2015 16:20:00 -0700'"
                    casting_operator: '::'
                    data_type:
                      data_type_identifier: timestamp_tz
                end_bracket: )
- statement_terminator: ;
