# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 2c8f51e053b95cafd4b305f54ca5a6e139deff7f16379199222c54dddfcfca14
file:
- statement:
    scripting_let_statement:
      keyword: LET
      variable: query_tag
      data_type:
        data_type_identifier: STRING
      assignment_operator: :=
      expression:
        null_literal: 'NULL'
- statement_terminator: ;
- statement:
    show_statement:
    - keyword: SHOW
    - keyword: PARAMETERS
    - keyword: LIKE
    - quoted_literal: "'QUERY_TAG'"
    - keyword: IN
    - keyword: SESSION
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            column_index_identifier_segment: $2
      into_clause:
        keyword: INTO
        bind_variable:
          colon_prefix: ':'
          variable: query_tag
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              function:
                function_name:
                  function_name_identifier: TABLE
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      function:
                        function_name:
                          function_name_identifier: RESULT_SCAN
                        function_contents:
                          bracketed:
                            start_bracket: (
                            expression:
                              function:
                                function_name:
                                  function_name_identifier: LAST_QUERY_ID
                                function_contents:
                                  bracketed:
                                    start_bracket: (
                                    end_bracket: )
                            end_bracket: )
                    end_bracket: )
- statement_terminator: ;
