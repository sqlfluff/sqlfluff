# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 087a0e455d9e14d4bae84ed573b38e4fcc411914f68a9ed336429258131050a7
file:
- statement:
    alter_role_statement:
    - keyword: ALTER
    - keyword: ROLE
    - keyword: IF
    - keyword: EXISTS
    - role_reference:
        quoted_identifier: '"test_role"'
    - keyword: RENAME
    - keyword: TO
    - role_reference:
        quoted_identifier: '"prod_role"'
- statement_terminator: ;
- statement:
    alter_role_statement:
    - keyword: ALTER
    - keyword: ROLE
    - role_reference:
        quoted_identifier: '"test_role"'
    - keyword: RENAME
    - keyword: TO
    - role_reference:
        quoted_identifier: '"prod_role"'
- statement_terminator: ;
- statement:
    alter_role_statement:
    - keyword: ALTER
    - keyword: ROLE
    - keyword: IF
    - keyword: EXISTS
    - role_reference:
        quoted_identifier: '"test_role"'
    - keyword: SET
    - comment_equals_clause:
        keyword: COMMENT
        comparison_operator:
          raw_comparison_operator: '='
        quoted_literal: "'test_comment'"
- statement_terminator: ;
- statement:
    alter_role_statement:
    - keyword: ALTER
    - keyword: ROLE
    - keyword: IF
    - keyword: EXISTS
    - role_reference:
        quoted_identifier: '"test_role"'
    - keyword: UNSET
    - role_reference:
        naked_identifier: COMMENT
- statement_terminator: ;
- statement:
    alter_role_statement:
    - keyword: ALTER
    - keyword: ROLE
    - role_reference:
        quoted_identifier: '"test_role"'
    - keyword: SET
    - comment_equals_clause:
        keyword: COMMENT
        comparison_operator:
          raw_comparison_operator: '='
        quoted_literal: "'test_comment'"
- statement_terminator: ;
- statement:
    alter_role_statement:
    - keyword: ALTER
    - keyword: ROLE
    - role_reference:
        quoted_identifier: '"test_role"'
    - keyword: UNSET
    - role_reference:
        naked_identifier: COMMENT
- statement_terminator: ;
- statement:
    alter_role_statement:
    - keyword: ALTER
    - keyword: ROLE
    - keyword: IF
    - keyword: EXISTS
    - role_reference:
        quoted_identifier: '"test_role"'
    - keyword: SET
    - tag_equals:
        keyword: TAG
        tag_reference:
          naked_identifier: TAG1
        comparison_operator:
          raw_comparison_operator: '='
        quoted_literal: "'value1'"
- statement_terminator: ;
- statement:
    alter_role_statement:
    - keyword: ALTER
    - keyword: ROLE
    - keyword: IF
    - keyword: EXISTS
    - role_reference:
        quoted_identifier: '"test_role"'
    - keyword: SET
    - tag_equals:
      - keyword: TAG
      - tag_reference:
          naked_identifier: TAG1
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'value1'"
      - comma: ','
      - tag_reference:
          naked_identifier: TAG1
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'value2'"
      - comma: ','
      - tag_reference:
          naked_identifier: TAG1
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'value3'"
- statement_terminator: ;
- statement:
    alter_role_statement:
    - keyword: ALTER
    - keyword: ROLE
    - keyword: IF
    - keyword: EXISTS
    - role_reference:
        quoted_identifier: '"test_role"'
    - keyword: UNSET
    - keyword: TAG
    - tag_reference:
        naked_identifier: TAG1
- statement_terminator: ;
- statement:
    alter_role_statement:
    - keyword: ALTER
    - keyword: ROLE
    - keyword: IF
    - keyword: EXISTS
    - role_reference:
        quoted_identifier: '"test_role"'
    - keyword: UNSET
    - keyword: TAG
    - tag_reference:
        naked_identifier: TAG1
    - comma: ','
    - tag_reference:
        naked_identifier: TAG2
    - comma: ','
    - tag_reference:
        naked_identifier: TAG3
- statement_terminator: ;
