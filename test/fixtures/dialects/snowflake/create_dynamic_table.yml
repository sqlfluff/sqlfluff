# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: c50fafc1e621ade3b1f6fba074280b656867d00e09110117437ead25f292e0a8
file:
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: DYNAMIC
    - keyword: TABLE
    - table_reference:
        naked_identifier: names
    - bracketed:
      - start_bracket: (
      - naked_identifier: id
      - comma: ','
      - naked_identifier: first_name
      - comma: ','
      - naked_identifier: last_name
      - end_bracket: )
    - dynamic_table_options:
      - keyword: REFRESH_MODE
      - comparison_operator:
          raw_comparison_operator: '='
      - keyword: AUTO
      - keyword: TARGET_LAG
      - comparison_operator:
          raw_comparison_operator: '='
      - dynamic_table_lag_interval_segment: "'1 minute'"
      - keyword: INITIALIZE
      - comparison_operator:
          raw_comparison_operator: '='
      - initialize_type: ON_CREATE
      - keyword: WAREHOUSE
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'mywh'"
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            expression:
              cast_expression:
                column_reference:
                  naked_identifier: var
                semi_structured_expression:
                  colon: ':'
                  semi_structured_element: id
                casting_operator: '::'
                data_type:
                  data_type_identifier: int
            alias_expression:
              naked_identifier: id
        - comma: ','
        - select_clause_element:
            expression:
              cast_expression:
                column_reference:
                  naked_identifier: var
                semi_structured_expression:
                  colon: ':'
                  semi_structured_element: fname
                casting_operator: '::'
                data_type:
                  data_type_identifier: string
            alias_expression:
              naked_identifier: first_name
        - comma: ','
        - select_clause_element:
            expression:
              cast_expression:
                column_reference:
                  naked_identifier: var
                semi_structured_expression:
                  colon: ':'
                  semi_structured_element: lname
                casting_operator: '::'
                data_type:
                  data_type_identifier: string
            alias_expression:
              naked_identifier: last_name
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: raw
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: DYNAMIC
    - keyword: TABLE
    - table_reference:
        naked_identifier: product
    - dynamic_table_options:
      - keyword: TARGET_LAG
      - comparison_operator:
          raw_comparison_operator: '='
      - dynamic_table_lag_interval_segment: "'20 minutes'"
      - keyword: WAREHOUSE
      - comparison_operator:
          raw_comparison_operator: '='
      - object_reference:
          naked_identifier: mywh
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: product_id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: product_name
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: staging_table
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: DYNAMIC
    - keyword: ICEBERG
    - keyword: TABLE
    - table_reference:
        naked_identifier: product
    - bracketed:
      - start_bracket: (
      - column_definition:
          naked_identifier: date
          data_type:
            data_type_identifier: TIMESTAMP_NTZ
      - comma: ','
      - column_definition:
          naked_identifier: id
          data_type:
            data_type_identifier: NUMBER
      - comma: ','
      - column_definition:
          naked_identifier: content
          data_type:
            data_type_identifier: STRING
      - end_bracket: )
    - dynamic_table_options:
      - keyword: TARGET_LAG
      - comparison_operator:
          raw_comparison_operator: '='
      - dynamic_table_lag_interval_segment: "'20 minutes'"
      - keyword: WAREHOUSE
      - comparison_operator:
          raw_comparison_operator: '='
      - object_reference:
          naked_identifier: mywh
      - keyword: EXTERNAL_VOLUME
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'my_external_volume'"
      - keyword: CATALOG
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'SNOWFLAKE'"
      - keyword: BASE_LOCATION
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'my_iceberg_table'"
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: product_id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: product_name
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: staging_table
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: DYNAMIC
    - keyword: TABLE
    - table_reference:
        naked_identifier: product
    - bracketed:
      - start_bracket: (
      - column_definition:
          naked_identifier: date
          data_type:
            data_type_identifier: TIMESTAMP_NTZ
      - comma: ','
      - column_definition:
          naked_identifier: id
          data_type:
            data_type_identifier: NUMBER
      - comma: ','
      - column_definition:
          naked_identifier: content
          data_type:
            data_type_identifier: VARIANT
      - end_bracket: )
    - dynamic_table_options:
      - keyword: TARGET_LAG
      - comparison_operator:
          raw_comparison_operator: '='
      - dynamic_table_lag_interval_segment: "'20 minutes'"
      - keyword: WAREHOUSE
      - comparison_operator:
          raw_comparison_operator: '='
      - object_reference:
          naked_identifier: mywh
      - keyword: CLUSTER
      - keyword: BY
      - expression:
          bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: date
          - comma: ','
          - column_reference:
              naked_identifier: id
          - end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: product_id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: product_name
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: staging_table
- statement_terminator: ;
- statement:
    create_clone_statement:
    - keyword: CREATE
    - keyword: DYNAMIC
    - keyword: TABLE
    - object_reference:
        naked_identifier: product_clone
    - keyword: CLONE
    - object_reference:
        naked_identifier: product
    - from_at_expression:
        keyword: AT
        bracketed:
          start_bracket: (
          keyword: TIMESTAMP
          parameter_assigner: =>
          expression:
            function:
              function_name:
                function_name_identifier: TO_TIMESTAMP_TZ
              function_contents:
                bracketed:
                - start_bracket: (
                - expression:
                    quoted_literal: "'04/05/2013 01:02:03'"
                - comma: ','
                - expression:
                    quoted_literal: "'mm/dd/yyyy hh24:mi:ss'"
                - end_bracket: )
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: DYNAMIC
    - keyword: TABLE
    - table_reference:
        naked_identifier: product
    - dynamic_table_options:
      - keyword: TARGET_LAG
      - comparison_operator:
          raw_comparison_operator: '='
      - dynamic_table_lag_interval_segment: "'DOWNSTREAM'"
      - keyword: WAREHOUSE
      - comparison_operator:
          raw_comparison_operator: '='
      - object_reference:
          naked_identifier: mywh
      - keyword: INITIALIZE
      - comparison_operator:
          raw_comparison_operator: '='
      - initialize_type: on_schedule
      - keyword: REQUIRE
      - keyword: USER
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: product_id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: product_name
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: staging_table
- statement_terminator: ;
