# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: e1ab69b4177cfa5b47b9f671f10058fa9845ed715ec16860b26973e9493bdf33
file:
- statement:
    set_expression:
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            numeric_literal: '1'
    - set_operator:
        keyword: UNION
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            numeric_literal: '2'
    - orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - numeric_literal: '1'
- statement_terminator: ;
- statement:
    set_expression:
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            numeric_literal: '1'
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: foo
    - set_operator:
      - keyword: UNION
      - keyword: ALL
      - keyword: BY
      - keyword: NAME
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            numeric_literal: '2'
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: foo
- statement_terminator: ;
- statement:
    set_expression:
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            numeric_literal: '1'
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: foo
    - set_operator:
      - keyword: UNION
      - keyword: BY
      - keyword: NAME
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            numeric_literal: '2'
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: foo
- statement_terminator: ;
