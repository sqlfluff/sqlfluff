# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: adab8d47461f5a8bd21c56e7de3380e8825d5c7efa3a236f8a7c9f2700f8697b
file:
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: SORTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - column_attribute_segment:
        - keyword: GENERATED
        - keyword: BY
        - keyword: DEFAULT
        - keyword: AS
        - keyword: IDENTITY
        - bracketed:
          - start_bracket: (
          - numeric_literal: '1'
          - comma: ','
          - numeric_literal: '1'
          - end_bracket: )
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: SORTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: col3
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: col4
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: col5
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: col6
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: COMPOUND
      - keyword: SORTKEY
      - bracketed:
        - start_bracket: (
        - column_reference:
            naked_identifier: col4
        - comma: ','
        - column_reference:
            naked_identifier: col5
        - comma: ','
        - column_reference:
            naked_identifier: col6
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - column_constraint_segment:
          keyword: REFERENCES
          table_reference:
            naked_identifier: t2
          bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: col1
            end_bracket: )
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: SORTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: SORTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TEMPORARY
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: SORTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TEMP
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: SORTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: LOCAL
    - keyword: TEMPORARY
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
          keyword: UNIQUE
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - end_bracket: )
    - keyword: BACKUP
    - keyword: 'YES'
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TEMPORARY
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - end_bracket: )
    - keyword: BACKUP
    - keyword: 'NO'
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: SORTKEY
      - bracketed:
        - start_bracket: (
        - column_reference:
            naked_identifier: col1
        - comma: ','
        - column_reference:
            naked_identifier: col2
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_attribute_segment:
        - keyword: ENCODE
        - keyword: AZ64
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - column_attribute_segment:
        - keyword: ENCODE
        - keyword: TEXT255
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: SORTKEY
      - keyword: AUTO
      - keyword: DISTSTYLE
      - keyword: EVEN
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: schema1
      - dot: .
      - naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INTEGER
      - column_attribute_segment:
        - keyword: ENCODE
        - keyword: AZ64
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - column_attribute_segment:
        - keyword: ENCODE
        - keyword: TEXT255
      - comma: ','
      - column_reference:
          naked_identifier: col3
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - column_attribute_segment:
        - keyword: COLLATE
        - keyword: CASE_SENSITIVE
      - comma: ','
      - column_reference:
          naked_identifier: col3
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
      - column_attribute_segment:
        - keyword: COLLATE
        - keyword: CASE_INSENSITIVE
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: UniqueKey_demo
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INT
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
        - keyword: UNIQUE
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          datetime_type_identifier:
            keyword: DATE
      - comma: ','
      - column_reference:
          naked_identifier: col3
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '60'
              end_bracket: )
      - comma: ','
      - table_constraint:
          keyword: UNIQUE
          bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: col1
            end_bracket: )
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: COMPOUND
      - keyword: SORTKEY
      - bracketed:
        - start_bracket: (
        - column_reference:
            naked_identifier: col1
        - comma: ','
        - column_reference:
            naked_identifier: col2
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: UniqueKey_demo
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INT
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
        - keyword: UNIQUE
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          datetime_type_identifier:
            keyword: DATE
      - comma: ','
      - column_reference:
          naked_identifier: col3
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '60'
              end_bracket: )
      - comma: ','
      - table_constraint:
        - keyword: PRIMARY
        - keyword: KEY
        - bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: col1
            end_bracket: )
      - end_bracket: )
    - table_constraint:
      - keyword: DISTKEY
      - bracketed:
          start_bracket: (
          column_reference:
            naked_identifier: col1
          end_bracket: )
      - keyword: INTERLEAVED
      - keyword: SORTKEY
      - bracketed:
        - start_bracket: (
        - column_reference:
            naked_identifier: col1
        - comma: ','
        - column_reference:
            naked_identifier: col2
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TEMP
    - keyword: TABLE
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        naked_identifier: UniqueKey_demo
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: INT
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
        - keyword: UNIQUE
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          datetime_type_identifier:
            keyword: DATE
      - comma: ','
      - column_reference:
          naked_identifier: col3
      - data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '60'
              end_bracket: )
      - comma: ','
      - table_constraint:
        - keyword: FOREIGN
        - keyword: KEY
        - bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: col3
            end_bracket: )
        - keyword: REFERENCES
        - table_reference:
            naked_identifier: t2
        - bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: col5
            end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TEMP
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
        start_bracket: (
        keyword: LIKE
        table_reference:
        - naked_identifier: schema1
        - dot: .
        - naked_identifier: t2
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TEMP
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
        start_bracket: (
        keyword: LIKE
        table_reference:
        - naked_identifier: schema1
        - dot: .
        - naked_identifier: t2
        like_option_segment:
        - keyword: INCLUDING
        - keyword: DEFAULTS
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: t1
    - bracketed:
        start_bracket: (
        keyword: LIKE
        table_reference:
        - naked_identifier: schema1
        - dot: .
        - naked_identifier: t2
        like_option_segment:
        - keyword: EXCLUDING
        - keyword: DEFAULTS
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: some_schema
      - dot: .
      - naked_identifier: example_table
    - bracketed:
      - start_bracket: (
      - keyword: LIKE
      - table_reference:
        - naked_identifier: some_schema
        - dot: .
        - naked_identifier: another_table
      - like_option_segment:
        - keyword: INCLUDING
        - keyword: DEFAULTS
      - comma: ','
      - keyword: LIKE
      - table_reference:
        - naked_identifier: some_schema
        - dot: .
        - naked_identifier: next_table
      - like_option_segment:
        - keyword: EXCLUDING
        - keyword: DEFAULTS
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: some_schema
      - dot: .
      - naked_identifier: example_table
    - bracketed:
        start_bracket: (
        keyword: LIKE
        table_reference:
        - naked_identifier: some_schema
        - dot: .
        - naked_identifier: another_table
        like_option_segment:
        - keyword: INCLUDING
        - keyword: DEFAULTS
        comma: ','
        column_reference:
          naked_identifier: col_name
        data_type:
          keyword: VARCHAR
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '5'
              end_bracket: )
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: some_table
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: some_column
        data_type:
          keyword: INTEGER
        column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
        column_attribute_segment:
          keyword: DEFAULT
          expression:
            numeric_literal: '1'
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: IdentityColumn_demo
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: col1
        data_type:
          keyword: BIGINT
        column_attribute_segment:
          keyword: IDENTITY
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: IdentityColumnGeneratedByDefault_demo
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: col1
        data_type:
          keyword: BIGINT
        column_attribute_segment:
        - keyword: GENERATED
        - keyword: BY
        - keyword: DEFAULT
        - keyword: AS
        - keyword: IDENTITY
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: IdentityColumnNotNull_demo
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: col1
        data_type:
          keyword: BIGINT
        column_attribute_segment:
          keyword: IDENTITY
        column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: IdentityColumnGeneratedByDefaultNotNull_demo
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: col1
        data_type:
          keyword: BIGINT
        column_attribute_segment:
        - keyword: GENERATED
        - keyword: BY
        - keyword: DEFAULT
        - keyword: AS
        - keyword: IDENTITY
        column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
      - naked_identifier: public
      - dot: .
      - naked_identifier: t1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: c1
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          naked_identifier: c2
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          naked_identifier: c3
      - data_type:
          keyword: int
      - comma: ','
      - table_constraint:
          keyword: unique
          bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: c1
          - comma: ','
          - column_reference:
              naked_identifier: c2
          - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
      - naked_identifier: public
      - dot: .
      - naked_identifier: t2
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: c1
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          naked_identifier: c2
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          naked_identifier: c3
      - data_type:
          keyword: int
      - comma: ','
      - table_constraint:
        - keyword: foreign
        - keyword: key
        - bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: c1
          - comma: ','
          - column_reference:
              naked_identifier: c2
          - end_bracket: )
        - keyword: references
        - table_reference:
          - naked_identifier: public
          - dot: .
          - naked_identifier: t1
        - bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: c1
          - comma: ','
          - column_reference:
              naked_identifier: c2
          - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        naked_identifier: test
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: col1
        data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              max_literal: max
              end_bracket: )
        end_bracket: )
- statement_terminator: ;
