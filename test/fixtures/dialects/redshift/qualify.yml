# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 2d25b00a2ecd112d1819ea5a9d17972e783c069731a71a416740e92dcfea1b4b
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: store_sales
            alias_expression:
              naked_identifier: ss
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            naked_identifier: ss_sold_time
          comparison_operator:
            raw_comparison_operator: '>'
          datetime_literal:
            datetime_type_identifier:
              keyword: time
            quoted_literal: "'12:00:00'"
      qualify_clause:
        keyword: QUALIFY
        expression:
          function:
            function_name:
              function_name_identifier: row_number
            function_contents:
              bracketed:
                start_bracket: (
                end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: PARTITION
                  - keyword: BY
                  - expression:
                      column_reference:
                        naked_identifier: ss_sold_date
                  orderby_clause:
                  - keyword: ORDER
                  - keyword: BY
                  - column_reference:
                      naked_identifier: ss_sales_price
                  - keyword: DESC
                end_bracket: )
          comparison_operator:
          - raw_comparison_operator: <
          - raw_comparison_operator: '='
          numeric_literal: '2'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: store_sales
            alias_expression:
              naked_identifier: ss
      qualify_clause:
        keyword: QUALIFY
        expression:
          function:
            function_name:
              function_name_identifier: last_value
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: ss_item
                end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: PARTITION
                  - keyword: BY
                  - expression:
                      column_reference:
                        naked_identifier: ss_sold_date
                  orderby_clause:
                  - keyword: ORDER
                  - keyword: BY
                  - column_reference:
                      naked_identifier: ss_sold_time
                  - keyword: ASC
                  frame_clause:
                  - keyword: ROWS
                  - keyword: BETWEEN
                  - keyword: UNBOUNDED
                  - keyword: PRECEDING
                  - keyword: AND
                  - keyword: UNBOUNDED
                  - keyword: FOLLOWING
                end_bracket: )
          comparison_operator:
            raw_comparison_operator: '='
          column_reference:
            naked_identifier: ss_item
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              bracketed:
                start_bracket: (
                select_statement:
                  select_clause:
                  - keyword: SELECT
                  - select_clause_element:
                      wildcard_expression:
                        wildcard_identifier:
                          star: '*'
                  - comma: ','
                  - select_clause_element:
                      function:
                        function_name:
                          function_name_identifier: last_value
                        function_contents:
                          bracketed:
                            start_bracket: (
                            expression:
                              column_reference:
                                naked_identifier: ss_item
                            end_bracket: )
                        over_clause:
                          keyword: OVER
                          bracketed:
                            start_bracket: (
                            window_specification:
                              partitionby_clause:
                              - keyword: PARTITION
                              - keyword: BY
                              - expression:
                                  column_reference:
                                    naked_identifier: ss_sold_date
                              orderby_clause:
                              - keyword: ORDER
                              - keyword: BY
                              - column_reference:
                                  naked_identifier: ss_sold_time
                              - keyword: ASC
                              frame_clause:
                              - keyword: ROWS
                              - keyword: BETWEEN
                              - keyword: UNBOUNDED
                              - keyword: PRECEDING
                              - keyword: AND
                              - keyword: UNBOUNDED
                              - keyword: FOLLOWING
                            end_bracket: )
                      alias_expression:
                        naked_identifier: ss_last_item
                  from_clause:
                    keyword: FROM
                    from_expression:
                      from_expression_element:
                        table_expression:
                          table_reference:
                            naked_identifier: store_sales
                        alias_expression:
                          naked_identifier: ss
                end_bracket: )
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            naked_identifier: ss_last_item
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
            naked_identifier: ss_item
- statement_terminator: ;
