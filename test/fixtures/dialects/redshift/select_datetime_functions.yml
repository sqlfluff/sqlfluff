# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 6537745a5bfb75cac7ecca29a8fd62d8390445e9ea6f653f029c8fc36c76e294
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          bare_function: current_date
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          bare_function: sysdate
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          bare_function: current_timestamp
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: TRUNC
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  bare_function: sysdate
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: salesid
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: pricepaid
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: TRUNC
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: saletime
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: saletime
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: TRUNC
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  bare_function: sysdate
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: now
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: sales
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            naked_identifier: saletime
        - keyword: BETWEEN
        - function:
            function_name:
              function_name_identifier: TRUNC
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  bare_function: sysdate
                end_bracket: )
        - binary_operator: '-'
        - numeric_literal: '120'
        - keyword: AND
        - function:
            function_name:
              function_name_identifier: TRUNC
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  bare_function: sysdate
                end_bracket: )
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          naked_identifier: saletime
      - keyword: ASC
- statement_terminator: ;
