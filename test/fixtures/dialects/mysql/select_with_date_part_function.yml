# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: b735d311acc9663a75452e7a80819238eb18a19f99b67cd14c8c5dfa940c13ba
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: EXTRACT
            function_contents:
              bracketed:
                start_bracket: (
                date_part: YEAR
                keyword: FROM
                expression:
                  quoted_literal: "'2019-07-02'"
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: TIMESTAMPADD
            function_contents:
              bracketed:
              - start_bracket: (
              - date_part: MINUTE
              - comma: ','
              - expression:
                  numeric_literal: '1'
              - comma: ','
              - expression:
                  quoted_literal: "'2003-01-02'"
              - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: TIMESTAMPDIFF
            function_contents:
              bracketed:
              - start_bracket: (
              - date_part: MONTH
              - comma: ','
              - expression:
                  quoted_literal: "'2003-02-01'"
              - comma: ','
              - expression:
                  quoted_literal: "'2003-05-01'"
              - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: TIMESTAMPDIFF
            function_contents:
              bracketed:
              - start_bracket: (
              - date_part: HOUR
              - comma: ','
              - expression:
                  column_reference:
                  - naked_identifier: x
                  - dot: .
                  - naked_identifier: time_created
              - comma: ','
              - expression:
                  column_reference:
                  - naked_identifier: x
                  - dot: .
                  - naked_identifier: time_updated
              - end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: example_table
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: x
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: TIMESTAMPADD
            function_contents:
              bracketed:
              - start_bracket: (
              - date_part: SECOND
              - comma: ','
              - expression:
                  numeric_literal: '1'
              - comma: ','
              - expression:
                  column_reference:
                  - naked_identifier: x
                  - dot: .
                  - naked_identifier: some_timestamp_field
              - end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: example_table
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: x
- statement_terminator: ;
