# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 6deccb43d3cf83c9062b235c0f01b5a4310ea49149b78c99c459b1aac74c1c02
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            cast_expression:
              quoted_literal: "'12'"
              casting_operator: '::'
              data_type:
                data_type_identifier: Nullable
                bracketed:
                  start_bracket: (
                  data_type:
                    data_type_identifier: Decimal
                    bracketed_arguments:
                      bracketed:
                      - start_bracket: (
                      - data_type:
                          numeric_literal: '12'
                      - comma: ','
                      - data_type:
                          numeric_literal: '0'
                      - end_bracket: )
                  end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: num_value
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            cast_expression:
              quoted_literal: "'12'"
              casting_operator: '::'
              data_type:
                data_type_identifier: Nullable
                bracketed:
                  start_bracket: (
                  data_type:
                    data_type_identifier: Decimal32
                    bracketed:
                      start_bracket: (
                      numeric_literal: '1'
                      end_bracket: )
                  end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: num_value
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            cast_expression:
              quoted_literal: "'12'"
              casting_operator: '::'
              data_type:
                data_type_identifier: Nullable
                bracketed:
                  start_bracket: (
                  data_type:
                    data_type_identifier: Decimal64
                    bracketed:
                      start_bracket: (
                      numeric_literal: '12'
                      end_bracket: )
                  end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: num_value
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            cast_expression:
              quoted_literal: "'12'"
              casting_operator: '::'
              data_type:
                data_type_identifier: Nullable
                bracketed:
                  start_bracket: (
                  data_type:
                    data_type_identifier: Decimal128
                    bracketed:
                      start_bracket: (
                      numeric_literal: '12'
                      end_bracket: )
                  end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: num_value
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            cast_expression:
              quoted_literal: "'12'"
              casting_operator: '::'
              data_type:
                data_type_identifier: Nullable
                bracketed:
                  start_bracket: (
                  data_type:
                    data_type_identifier: Decimal256
                    bracketed:
                      start_bracket: (
                      numeric_literal: '12'
                      end_bracket: )
                  end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: num_value
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            cast_expression:
              quoted_literal: "'12'"
              casting_operator: '::'
              data_type:
                data_type_identifier: Decimal
                bracketed_arguments:
                  bracketed:
                  - start_bracket: (
                  - data_type:
                      numeric_literal: '12'
                  - comma: ','
                  - data_type:
                      numeric_literal: '0'
                  - end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: num_value
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            cast_expression:
              quoted_literal: "'12'"
              casting_operator: '::'
              data_type:
                data_type_identifier: Nullable
                bracketed:
                  start_bracket: (
                  data_type:
                    data_type_identifier: Numeric
                    bracketed_arguments:
                      bracketed:
                      - start_bracket: (
                      - data_type:
                          numeric_literal: '12'
                      - comma: ','
                      - data_type:
                          numeric_literal: '0'
                      - end_bracket: )
                  end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: num_value
- statement_terminator: ;
