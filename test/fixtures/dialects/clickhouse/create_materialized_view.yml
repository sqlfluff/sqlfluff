# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 67da5fee840c85cbc40a5375461b76125f0a1a43e01d41f293de3acdf9e2220a
file:
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: table_mv
    - keyword: TO
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: table
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: column1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: column2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: table_kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: table_mv
    - keyword: TO
    - table_reference:
        naked_identifier: table
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: column1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: column2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: table_kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: table_mv
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - naked_identifier: mycluster
    - keyword: TO
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: table
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: column1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: column2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: table_kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: table_mv
    - keyword: TO
    - table_reference:
        naked_identifier: table
    - engine:
        keyword: ENGINE
        comparison_operator:
          raw_comparison_operator: '='
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: column1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: column2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: table_kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: table_mv
    - engine:
        keyword: ENGINE
        comparison_operator:
          raw_comparison_operator: '='
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: column1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: column2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: table_kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: table_mv
    - engine:
        keyword: ENGINE
        comparison_operator:
          raw_comparison_operator: '='
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
    - keyword: POPULATE
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: column1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: column2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: table_kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: mv_table
    - engine:
        keyword: ENGINE
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
        merge_tree_order_by_clause:
        - keyword: ORDER
        - keyword: BY
        - bracketed:
            start_bracket: (
            end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: my_view
    - engine:
        keyword: ENGINE
        comparison_operator:
          raw_comparison_operator: '='
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
        merge_tree_order_by_clause:
        - keyword: ORDER
        - keyword: BY
        - column_reference:
            naked_identifier: id
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: name
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        naked_identifier: my_view_2
    - engine:
        keyword: ENGINE
        comparison_operator:
          raw_comparison_operator: '='
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
        merge_tree_order_by_clause:
        - keyword: ORDER
        - keyword: BY
        - column_reference:
            naked_identifier: id
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: value
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: my_view_3
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - naked_identifier: my_cluster
    - engine:
        keyword: ENGINE
        comparison_operator:
          raw_comparison_operator: '='
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
        merge_tree_order_by_clause:
        - keyword: ORDER
        - keyword: BY
        - column_reference:
            naked_identifier: id
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: timestamp
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: my_view_3_macro
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - quoted_identifier: "'{cluster}'"
    - engine:
        keyword: ENGINE
        comparison_operator:
          raw_comparison_operator: '='
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
        merge_tree_order_by_clause:
        - keyword: ORDER
        - keyword: BY
        - column_reference:
            naked_identifier: id
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: timestamp
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: my_view_4
    - keyword: TO
    - table_reference:
        naked_identifier: target_table
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: category
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: cdc_lay
      - dot: .
      - naked_identifier: table_mv
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - naked_identifier: default
    - keyword: TO
    - table_reference:
      - naked_identifier: stg_lay
      - dot: .
      - naked_identifier: table
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: cdc_lay
      - dot: .
      - naked_identifier: table_mv_macro
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - quoted_identifier: "'{cluster}'"
    - keyword: TO
    - table_reference:
      - naked_identifier: stg_lay
      - dot: .
      - naked_identifier: table
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: cdc_lay
      - dot: .
      - naked_identifier: table_mv_macro
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - naked_identifier: default
    - keyword: TO
    - table_reference:
      - naked_identifier: stg_lay
      - dot: .
      - naked_identifier: table
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: my_view_5
    - engine:
        keyword: ENGINE
        comparison_operator:
          raw_comparison_operator: '='
        table_engine_function:
          function_name:
            function_name_identifier: MergeTree
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
        merge_tree_order_by_clause:
        - keyword: ORDER
        - keyword: BY
        - column_reference:
            naked_identifier: id
    - keyword: POPULATE
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: status
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: my_view_6
    - engine:
      - keyword: ENGINE
      - comparison_operator:
          raw_comparison_operator: '='
      - table_engine_function:
          function_name:
            function_name_identifier: ReplicatedReplacingMergeTree
          function_contents:
            bracketed:
            - start_bracket: (
            - expression:
                quoted_literal: "'/clickhouse/tables/{shard}/my_view_6'"
            - comma: ','
            - expression:
                quoted_literal: "'{replica}'"
            - end_bracket: )
      - keyword: PARTITION
      - keyword: BY
      - expression:
          function:
            function_name:
              function_name_identifier: toYYYYMM
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: timestamp
                end_bracket: )
      - merge_tree_order_by_clause:
        - keyword: ORDER
        - keyword: BY
        - bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: id
          - comma: ','
          - column_reference:
              naked_identifier: timestamp
          - end_bracket: )
    - table_ttl_segment:
        keyword: TTL
        expression:
          column_reference:
            naked_identifier: timestamp
          binary_operator: +
          interval_expression:
            keyword: INTERVAL
            numeric_literal: '1'
            date_part: MONTH
    - settings_clause:
        keyword: SETTINGS
        naked_identifier: index_granularity
        comparison_operator:
          raw_comparison_operator: '='
        numeric_literal: '8192'
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: timestamp
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: value
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: my_view_7
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - quoted_identifier: "'{cluster}'"
    - keyword: TO
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: target_table
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - table_reference:
        naked_identifier: my_view_8
    - engine:
        keyword: ENGINE
        comparison_operator:
          raw_comparison_operator: '='
        table_engine_function:
          function_name:
            function_name_identifier: SummingMergeTree
          function_contents:
            bracketed:
              start_bracket: (
              end_bracket: )
        merge_tree_order_by_clause:
        - keyword: ORDER
        - keyword: BY
        - bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: category
          - comma: ','
          - column_reference:
              naked_identifier: metric
          - end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: category
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: metric
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: sum
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      naked_identifier: value
                  end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: total_value
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: count
              function_contents:
                bracketed:
                  start_bracket: (
                  end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: count
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: avg
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      naked_identifier: value
                  end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: avg_value
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
        groupby_clause:
        - keyword: GROUP
        - keyword: BY
        - column_reference:
            naked_identifier: category
        - comma: ','
        - column_reference:
            naked_identifier: metric
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: cdc_lay
      - dot: .
      - naked_identifier: table_mv2
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - naked_identifier: default
    - keyword: TO
    - table_reference:
      - naked_identifier: stg_lay
      - dot: .
      - naked_identifier: table2
    - bracketed:
      - start_bracket: (
      - naked_identifier: id
      - comma: ','
      - naked_identifier: name
      - comma: ','
      - naked_identifier: value
      - end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: id
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: name
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: value
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: source_table
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: consumer_kafka
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - quoted_identifier: "'{cluster}'"
    - keyword: TO
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: local
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: _timestamp_ms
            alias_expression:
              keyword: AS
              naked_identifier: processedAt
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: kafka
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: nested_data_mv
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - quoted_identifier: "'{cluster}'"
    - keyword: TO
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: nested_data_local
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: identifier
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: _timestamp_ms
            alias_expression:
              keyword: AS
              naked_identifier: processedAt
        - comma: ','
        - select_clause_element:
            column_reference:
            - naked_identifier: metrics
            - dot: .
            - naked_identifier: measuredAt
            alias_expression:
              keyword: AS
              naked_identifier: measuredAt
        - comma: ','
        - select_clause_element:
            column_reference:
            - naked_identifier: metrics
            - dot: .
            - naked_identifier: value
            alias_expression:
              keyword: AS
              naked_identifier: value
        - comma: ','
        - select_clause_element:
            column_reference:
            - naked_identifier: metrics
            - dot: .
            - naked_identifier: name
            alias_expression:
              keyword: AS
              naked_identifier: name
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: kafka
            array_join_clause:
            - keyword: ARRAY
            - keyword: JOIN
            - select_clause_element:
                column_reference:
                  naked_identifier: metrics
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: aggeregating_mv
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - quoted_identifier: "'{cluster}'"
    - keyword: TO
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: aggeregating_local
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: identifier
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: _ingestedAt
            alias_expression:
              keyword: AS
              naked_identifier: ingestedAt
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: objectList
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                bracketed:
                  start_bracket: (
                  select_statement:
                    select_clause:
                    - keyword: SELECT
                    - select_clause_element:
                        function:
                          function_name:
                            function_name_identifier: toStartOfDay
                          function_contents:
                            bracketed:
                              start_bracket: (
                              expression:
                                column_reference:
                                  naked_identifier: ingestedAt
                              end_bracket: )
                        alias_expression:
                          keyword: AS
                          naked_identifier: _ingestedAt
                    - comma: ','
                    - select_clause_element:
                        column_reference:
                          naked_identifier: identifier
                    - comma: ','
                    - select_clause_element:
                        function:
                          function_name:
                            function_name_identifier: groupUniqArray
                          function_contents:
                            bracketed:
                              start_bracket: (
                              expression:
                                column_reference:
                                  naked_identifier: objectIdentfier
                              end_bracket: )
                        alias_expression:
                          keyword: AS
                          naked_identifier: objectList
                    from_clause:
                      keyword: FROM
                      from_expression:
                        from_expression_element:
                          table_expression:
                            table_reference:
                            - naked_identifier: db
                            - dot: .
                            - naked_identifier: raw_table
                    groupby_clause:
                    - keyword: GROUP
                    - keyword: BY
                    - column_reference:
                        naked_identifier: identifier
                    - comma: ','
                    - column_reference:
                        naked_identifier: _ingestedAt
                  end_bracket: )
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: aggeregating_mv2
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - quoted_identifier: "'{cluster}'"
    - keyword: TO
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: aggeregating_local2
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: identifier
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: _ingestedAt
            alias_expression:
              keyword: AS
              naked_identifier: ingestedAt
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: valueCount
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: cumulativeLagSeconds
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                bracketed:
                  start_bracket: (
                  select_statement:
                    select_clause:
                    - keyword: SELECT
                    - select_clause_element:
                        column_reference:
                          naked_identifier: identifier
                    - comma: ','
                    - select_clause_element:
                        function:
                          function_name:
                            function_name_identifier: toStartOfMinute
                          function_contents:
                            bracketed:
                              start_bracket: (
                              expression:
                                column_reference:
                                  naked_identifier: ingestedAt
                              end_bracket: )
                        alias_expression:
                          keyword: AS
                          naked_identifier: _ingestedAt
                    - comma: ','
                    - select_clause_element:
                        function:
                          function_name:
                            function_name_identifier: count
                          function_contents:
                            bracketed:
                              start_bracket: (
                              end_bracket: )
                        alias_expression:
                          keyword: AS
                          naked_identifier: valueCount
                    - comma: ','
                    - select_clause_element:
                        function:
                          function_name:
                            function_name_identifier: sum
                          function_contents:
                            bracketed:
                              start_bracket: (
                              expression:
                                bracketed:
                                  start_bracket: (
                                  expression:
                                  - function:
                                      function_name:
                                        function_name_identifier: toUnixTimestamp64Milli
                                      function_contents:
                                        bracketed:
                                          start_bracket: (
                                          expression:
                                            column_reference:
                                              naked_identifier: ingestedAt
                                          end_bracket: )
                                  - binary_operator: '-'
                                  - function:
                                      function_name:
                                        function_name_identifier: toUnixTimestamp64Milli
                                      function_contents:
                                        bracketed:
                                          start_bracket: (
                                          expression:
                                            column_reference:
                                              naked_identifier: measuredAt
                                          end_bracket: )
                                  end_bracket: )
                                binary_operator: /
                                numeric_literal: '1000'
                              end_bracket: )
                        alias_expression:
                          keyword: AS
                          naked_identifier: cumulativeLagSeconds
                    from_clause:
                      keyword: FROM
                      from_expression:
                        from_expression_element:
                          table_expression:
                            table_reference:
                            - naked_identifier: db
                            - dot: .
                            - naked_identifier: raw_table
                    groupby_clause:
                    - keyword: GROUP
                    - keyword: BY
                    - column_reference:
                        naked_identifier: identifier
                    - comma: ','
                    - column_reference:
                        naked_identifier: _ingestedAt
                  end_bracket: )
- statement_terminator: ;
- statement:
    create_materialized_view_statement:
    - keyword: CREATE
    - keyword: MATERIALIZED
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: kafka_errors
    - on_cluster_clause:
      - keyword: 'ON'
      - keyword: CLUSTER
      - quoted_identifier: "'{cluster}'"
    - keyword: TO
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: kafka_errors_local
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: _topic
            alias_expression:
              keyword: AS
              naked_identifier: topic
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: _partition
            alias_expression:
              keyword: AS
              naked_identifier: kafka_partition
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: _offset
            alias_expression:
              keyword: AS
              naked_identifier: offset
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: ifNull
              function_contents:
                bracketed:
                - start_bracket: (
                - expression:
                    column_reference:
                      naked_identifier: _timestamp_ms
                - comma: ','
                - expression:
                    function:
                      function_name:
                        function_name_identifier: now
                      function_contents:
                        bracketed:
                          start_bracket: (
                          end_bracket: )
                - end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: processedAt
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: _raw_message
            alias_expression:
              keyword: AS
              naked_identifier: raw_message
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: _error
            alias_expression:
              keyword: AS
              naked_identifier: error
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: kafka
        where_clause:
          keyword: WHERE
          expression:
            function:
              function_name:
                function_name_identifier: length
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      naked_identifier: _error
                  end_bracket: )
            comparison_operator:
              raw_comparison_operator: '>'
            numeric_literal: '0'
- statement_terminator: ;
