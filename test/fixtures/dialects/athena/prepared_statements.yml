# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: cfd7ab01c93d5e69da42578d477561782550c6935dcd9450b5470d064ffbea20
file:
- statement:
    prepare_statement:
    - keyword: PREPARE
    - table_reference:
        naked_identifier: my_select1
    - keyword: FROM
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: nation
- statement_terminator: ;
- statement:
    prepare_statement:
    - keyword: PREPARE
    - table_reference:
        naked_identifier: my_select2
    - keyword: FROM
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - quoted_identifier: '"my_database"'
                - dot: .
                - quoted_identifier: '"my_table"'
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
              naked_identifier: year
            comparison_operator:
              raw_comparison_operator: '='
            parameter: '?'
- statement_terminator: ;
- statement:
    prepare_statement:
    - keyword: PREPARE
    - table_reference:
        naked_identifier: my_select3
    - keyword: FROM
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            quoted_literal: "'order'"
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: orders
        where_clause:
          keyword: WHERE
          expression:
          - column_reference:
              naked_identifier: productid
          - comparison_operator:
              raw_comparison_operator: '='
          - parameter: '?'
          - binary_operator: and
          - column_reference:
              naked_identifier: quantity
          - comparison_operator:
              raw_comparison_operator: <
          - parameter: '?'
- statement_terminator: ;
- statement:
    prepare_statement:
    - keyword: PREPARE
    - table_reference:
        naked_identifier: my_insert
    - keyword: FROM
    - insert_statement:
      - keyword: INSERT
      - keyword: INTO
      - table_reference:
          naked_identifier: cities_usa
      - bracketed:
        - start_bracket: (
        - column_reference:
            naked_identifier: city
        - comma: ','
        - column_reference:
            naked_identifier: state
        - end_bracket: )
      - select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
                naked_identifier: city
          - comma: ','
          - select_clause_element:
              column_reference:
                naked_identifier: state
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: cities_world
          where_clause:
            keyword: WHERE
            expression:
              column_reference:
                naked_identifier: country
              comparison_operator:
                raw_comparison_operator: '='
              parameter: '?'
- statement_terminator: ;
- statement:
    prepare_statement:
    - keyword: PREPARE
    - table_reference:
        naked_identifier: my_unload
    - keyword: FROM
    - unload_statement:
      - keyword: UNLOAD
      - bracketed:
          start_bracket: (
          select_statement:
            select_clause:
              keyword: SELECT
              select_clause_element:
                wildcard_expression:
                  wildcard_identifier:
                    star: '*'
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: table1
            where_clause:
              keyword: WHERE
              expression:
                column_reference:
                  naked_identifier: productid
                comparison_operator:
                  raw_comparison_operator: <
                parameter: '?'
          end_bracket: )
      - keyword: TO
      - quoted_literal: "'s3://my_output_bucket/'"
      - keyword: WITH
      - bracketed:
          start_bracket: (
          keyword: format
          comparison_operator:
            raw_comparison_operator: '='
          quoted_literal: "'PARQUET'"
          end_bracket: )
- statement_terminator: ;
- statement:
    execute_statement:
      keyword: EXECUTE
      table_reference:
        naked_identifier: statement_name
- statement_terminator: ;
- statement:
    execute_statement:
    - keyword: EXECUTE
    - table_reference:
        naked_identifier: statement_name
    - keyword: USING
    - quoted_literal: "'value'"
- statement_terminator: ;
- statement:
    execute_statement:
    - keyword: EXECUTE
    - table_reference:
        naked_identifier: statement_name
    - keyword: USING
    - quoted_literal: "'value'"
    - comma: ','
    - numeric_literal: '10'
- statement_terminator: ;
