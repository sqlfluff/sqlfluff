# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: fceb478f9d7f168db57ff9346ae3970cddd5034004857f5cb3b9ed79392a9741
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: orderkey
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: clerk
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: totalprice
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: rank
            function_contents:
              bracketed:
                start_bracket: (
                end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: PARTITION
                  - keyword: BY
                  - expression:
                      column_reference:
                        naked_identifier: clerk
                  orderby_clause:
                  - keyword: ORDER
                  - keyword: BY
                  - column_reference:
                      naked_identifier: totalprice
                  - keyword: DESC
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: rnk
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: orders
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          naked_identifier: clerk
      - comma: ','
      - column_reference:
          naked_identifier: rnk
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: clerk
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: orderdate
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: orderkey
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: totalprice
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: sum
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: totalprice
                end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: PARTITION
                  - keyword: BY
                  - expression:
                      column_reference:
                        naked_identifier: clerk
                  orderby_clause:
                  - keyword: ORDER
                  - keyword: BY
                  - column_reference:
                      naked_identifier: orderdate
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: rolling_sum
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: orders
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          naked_identifier: clerk
      - comma: ','
      - column_reference:
          naked_identifier: orderdate
      - comma: ','
      - column_reference:
          naked_identifier: orderkey
- statement_terminator: ;
