# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: fcc2e94a157cee2033e8e1c4c434cbc9791c4e28d4b41afb2df6c097263a5b36
file:
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        naked_identifier: canada_pageviews
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: vancouver_pageviews
        where_clause:
          keyword: WHERE
          expression:
          - column_reference:
              naked_identifier: pageview_date
          - keyword: BETWEEN
          - keyword: date
          - date_constructor_literal: "'2019-07-01'"
          - keyword: AND
          - keyword: date
          - date_constructor_literal: "'2019-07-31'"
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        naked_identifier: cities
    - values_clause:
        keyword: VALUES
        expression:
          bracketed:
          - start_bracket: (
          - numeric_literal: '1'
          - comma: ','
          - quoted_literal: "'Lansing'"
          - comma: ','
          - quoted_literal: "'MI'"
          - comma: ','
          - quoted_literal: "'Si quaeris peninsulam amoenam circumspice'"
          - end_bracket: )
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
        naked_identifier: cities
    - values_clause:
      - keyword: VALUES
      - expression:
          bracketed:
          - start_bracket: (
          - numeric_literal: '1'
          - comma: ','
          - quoted_literal: "'Lansing'"
          - comma: ','
          - quoted_literal: "'MI'"
          - comma: ','
          - quoted_literal: "'Si quaeris peninsulam amoenam circumspice'"
          - end_bracket: )
      - comma: ','
      - expression:
          bracketed:
          - start_bracket: (
          - numeric_literal: '3'
          - comma: ','
          - quoted_literal: "'Boise'"
          - comma: ','
          - quoted_literal: "'ID'"
          - comma: ','
          - quoted_literal: "'Esto perpetua'"
          - end_bracket: )
- statement_terminator: ;
