# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 4b9f327cd36317b0514ab31fba38d44f4416e2578e095ee9952aac4f2289f9b0
file:
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - table_reference:
        naked_identifier: test
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: orderkey
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: orderstatus
        - comma: ','
        - select_clause_element:
            expression:
              column_reference:
                naked_identifier: totalprice
              binary_operator: /
              numeric_literal: '2'
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: half
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: orders
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: VIEW
    - table_reference:
        naked_identifier: test
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: orderkey
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: orderstatus
        - comma: ','
        - select_clause_element:
            expression:
              column_reference:
                naked_identifier: totalprice
              binary_operator: /
              numeric_literal: '4'
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: quarter
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: orders
- statement_terminator: ;
