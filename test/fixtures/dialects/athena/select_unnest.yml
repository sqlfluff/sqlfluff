# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: a8b707d504f989e82bf019fb8cb7af9068927ba0306b744159681a95e1e1bd00
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: field_1
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: field_2
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: column_value
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
          join_clause:
          - keyword: CROSS
          - keyword: JOIN
          - from_expression_element:
              table_expression:
                function:
                  function_name:
                    function_name_identifier: UNNEST
                  function_contents:
                    bracketed:
                      start_bracket: (
                      expression:
                        column_reference:
                          naked_identifier: array_field
                      end_bracket: )
              alias_expression:
                keyword: AS
                naked_identifier: my_unnested_table
                bracketed:
                  start_bracket: (
                  identifier_list:
                    naked_identifier: column_value
                  end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: numbers
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: n
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: a
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                - keyword: VALUES
                - expression:
                    bracketed:
                      start_bracket: (
                      expression:
                        typed_array_literal:
                          array_type:
                            keyword: ARRAY
                          array_literal:
                          - start_square_bracket: '['
                          - numeric_literal: '2'
                          - comma: ','
                          - numeric_literal: '5'
                          - end_square_bracket: ']'
                      end_bracket: )
                - comma: ','
                - expression:
                    bracketed:
                      start_bracket: (
                      expression:
                        typed_array_literal:
                          array_type:
                            keyword: ARRAY
                          array_literal:
                          - start_square_bracket: '['
                          - numeric_literal: '7'
                          - comma: ','
                          - numeric_literal: '8'
                          - comma: ','
                          - numeric_literal: '9'
                          - end_square_bracket: ']'
                      end_bracket: )
              end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: x
              bracketed:
                start_bracket: (
                identifier_list:
                  naked_identifier: numbers
                end_bracket: )
          join_clause:
          - keyword: CROSS
          - keyword: JOIN
          - from_expression_element:
              table_expression:
                function:
                - function_name:
                    function_name_identifier: UNNEST
                - function_contents:
                    bracketed:
                      start_bracket: (
                      expression:
                        column_reference:
                          naked_identifier: numbers
                      end_bracket: )
                - keyword: WITH
                - keyword: ORDINALITY
              alias_expression:
                keyword: AS
                naked_identifier: t
                bracketed:
                  start_bracket: (
                  identifier_list:
                  - naked_identifier: n
                  - comma: ','
                  - naked_identifier: a
                  end_bracket: )
- statement_terminator: ;
