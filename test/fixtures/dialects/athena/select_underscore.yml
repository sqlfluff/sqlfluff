# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: e41dffbd75e464ce9717929d2c5129c2befd93e7324e209793d179a32c1b86d6
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          numeric_literal: '1'
          alias_expression:
            keyword: AS
            naked_identifier: _
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          numeric_literal: '1'
          alias_expression:
            keyword: AS
            naked_identifier: __
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          numeric_literal: '1'
          alias_expression:
            keyword: AS
            naked_identifier: __TEST
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: a
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                - keyword: VALUES
                - expression:
                    bracketed:
                      start_bracket: (
                      expression:
                        quoted_literal: "'a'"
                      end_bracket: )
                - comma: ','
                - expression:
                    bracketed:
                      start_bracket: (
                      expression:
                        quoted_literal: "'b'"
                      end_bracket: )
              end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: _
              bracketed:
                start_bracket: (
                identifier_list:
                  naked_identifier: a
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: a
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                - keyword: VALUES
                - expression:
                    bracketed:
                      start_bracket: (
                      expression:
                        quoted_literal: "'a'"
                      end_bracket: )
                - comma: ','
                - expression:
                    bracketed:
                      start_bracket: (
                      expression:
                        quoted_literal: "'b'"
                      end_bracket: )
              end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: __
              bracketed:
                start_bracket: (
                identifier_list:
                  naked_identifier: a
                end_bracket: )
- statement_terminator: ;
