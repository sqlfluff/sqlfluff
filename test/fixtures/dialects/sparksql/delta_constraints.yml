# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 3e26f083e9d43fe177c07a49432da679103dc74d85a462d5dac426cfb32bea3f
file:
- statement:
    alter_table_statement:
    - keyword: ALTER
    - keyword: TABLE
    - table_reference:
      - naked_identifier: default
      - dot: .
      - naked_identifier: people10m
    - keyword: CHANGE
    - keyword: COLUMN
    - column_reference:
        naked_identifier: middle_name
    - keyword: DROP
    - keyword: NOT
    - keyword: 'NULL'
- statement_terminator: ;
- statement:
    alter_table_statement:
    - keyword: ALTER
    - keyword: TABLE
    - table_reference:
      - naked_identifier: default
      - dot: .
      - naked_identifier: people10m
    - keyword: ADD
    - keyword: CONSTRAINT
    - column_reference:
        naked_identifier: date_within_range
    - keyword: CHECK
    - bracketed:
        start_bracket: (
        expression:
          column_reference:
            naked_identifier: birthDate
          comparison_operator:
            raw_comparison_operator: '>'
          quoted_literal: "'1900-01-01'"
        end_bracket: )
- statement_terminator: ;
- statement:
    alter_table_statement:
    - keyword: ALTER
    - keyword: TABLE
    - table_reference:
      - naked_identifier: default
      - dot: .
      - naked_identifier: people10m
    - keyword: DROP
    - keyword: CONSTRAINT
    - column_reference:
        naked_identifier: date_within_range
- statement_terminator: ;
- statement:
    alter_table_statement:
    - keyword: ALTER
    - keyword: TABLE
    - table_reference:
      - naked_identifier: default
      - dot: .
      - naked_identifier: people10m
    - keyword: ADD
    - keyword: CONSTRAINT
    - column_reference:
        naked_identifier: valid_ids
    - keyword: CHECK
    - bracketed:
        start_bracket: (
        expression:
        - column_reference:
            naked_identifier: id
        - comparison_operator:
            raw_comparison_operator: '>'
        - numeric_literal: '1'
        - binary_operator: and
        - column_reference:
            naked_identifier: id
        - comparison_operator:
            raw_comparison_operator: <
        - numeric_literal: '99999999'
        end_bracket: )
- statement_terminator: ;
