# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 14a9cba2d414c0fd3fc9b6933c552b94ecb38a26ce107e3f7d1fa7f2795e4cf7
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: employee_last_name
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: SUM
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: vacation_days
                end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: employee_dimension
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            naked_identifier: employee_last_name
          keyword: ILIKE
          quoted_literal: "'S%'"
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - column_reference:
          naked_identifier: employee_last_name
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: vendor_region
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: MAX
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: deal_size
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: AS
            quoted_identifier: '"Biggest Deal"'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: vendor_dimension
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - column_reference:
          naked_identifier: vendor_region
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: vendor_region
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: MAX
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: deal_size
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            quoted_identifier: '"Biggest Deal"'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: vendor_dimension
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - column_reference:
          naked_identifier: vendor_region
      having_clause:
        keyword: HAVING
        expression:
          function:
            function_name:
              function_name_identifier: MAX
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: deal_size
                end_bracket: )
          comparison_operator:
            raw_comparison_operator: '>'
          numeric_literal: '900000'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: department
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: grants
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: SUM
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  function:
                    function_name:
                      function_name_identifier: apply_sum
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          column_reference:
                            naked_identifier: grant_values
                        end_bracket: )
                end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: employees
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - column_reference:
          naked_identifier: grants
      - comma: ','
      - column_reference:
          naked_identifier: department
- statement_terminator: ;
