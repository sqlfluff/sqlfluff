# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 7c47446fc41af297defece1192fa0dddaf8a26964ce60caa5e167cd4cc6b9420
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: store_region
      - comma: ','
      - select_clause_element:
          expression:
          - column_reference:
              naked_identifier: store_city
          - binary_operator:
            - pipe: '|'
            - pipe: '|'
          - quoted_literal: "', '"
          - binary_operator:
            - pipe: '|'
            - pipe: '|'
          - column_reference:
              naked_identifier: store_state
          alias_expression:
            naked_identifier: location
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: store_name
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: number_of_employees
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: store
              - dot: .
              - naked_identifier: store_dimension
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            naked_identifier: number_of_employees
          comparison_operator:
          - raw_comparison_operator: <
          - raw_comparison_operator: '='
          numeric_literal: '12'
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          naked_identifier: store_region
      - comma: ','
      - column_reference:
          naked_identifier: number_of_employees
      limit_clause:
        keyword: LIMIT
        numeric_literal: '10'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: store_region
      - comma: ','
      - select_clause_element:
          expression:
          - column_reference:
              naked_identifier: store_city
          - binary_operator:
            - pipe: '|'
            - pipe: '|'
          - quoted_literal: "', '"
          - binary_operator:
            - pipe: '|'
            - pipe: '|'
          - column_reference:
              naked_identifier: store_state
          alias_expression:
            naked_identifier: location
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: store_name
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: number_of_employees
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: store
              - dot: .
              - naked_identifier: store_dimension
      limit_clause:
        keyword: LIMIT
        numeric_literal: '2'
        over_clause:
          keyword: OVER
          bracketed:
            start_bracket: (
            window_specification:
              partitionby_clause:
              - keyword: PARTITION
              - keyword: BY
              - expression:
                  column_reference:
                    naked_identifier: store_region
              orderby_clause:
              - keyword: ORDER
              - keyword: BY
              - column_reference:
                  naked_identifier: number_of_employees
              - keyword: ASC
            end_bracket: )
- statement_terminator: ;
