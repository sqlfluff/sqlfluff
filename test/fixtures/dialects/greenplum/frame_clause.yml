# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: d10e5535650d36b0f0c9ec7d9881b5730cf03e6075f3d69f2e773ba7f762b322
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: SUM
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: field_1
                end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: PARTITION
                  - keyword: BY
                  - expression:
                      column_reference:
                        naked_identifier: field_2
                  orderby_clause:
                  - keyword: ORDER
                  - keyword: BY
                  - column_reference:
                      naked_identifier: field_3
                  frame_clause:
                  - keyword: RANGE
                  - keyword: BETWEEN
                  - interval_expression:
                      keyword: INTERVAL
                      quoted_literal: "'1'"
                      date_part: MONTH
                  - keyword: PRECEDING
                  - keyword: AND
                  - keyword: CURRENT
                  - keyword: ROW
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: field_1
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table_1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: SUM
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: field_1
                end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: PARTITION
                  - keyword: BY
                  - expression:
                      column_reference:
                        naked_identifier: field_2
                  orderby_clause:
                  - keyword: ORDER
                  - keyword: BY
                  - column_reference:
                      naked_identifier: field_3
                  frame_clause:
                  - keyword: RANGE
                  - keyword: BETWEEN
                  - interval_expression:
                      keyword: INTERVAL
                      quoted_literal: "'1 month'"
                  - keyword: PRECEDING
                  - keyword: AND
                  - keyword: CURRENT
                  - keyword: ROW
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: field_1
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table_1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: COUNT
            function_contents:
              bracketed:
                start_bracket: (
                star: '*'
                end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: PARTITION
                  - keyword: BY
                  - expression:
                      column_reference:
                        naked_identifier: field_1
                  orderby_clause:
                  - keyword: ORDER
                  - keyword: BY
                  - column_reference:
                      naked_identifier: field_3
                  frame_clause:
                  - keyword: RANGE
                  - keyword: BETWEEN
                  - column_reference:
                      naked_identifier: field_2
                  - keyword: PRECEDING
                  - keyword: AND
                  - keyword: CURRENT
                  - keyword: ROW
                end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table_1
- statement_terminator: ;
