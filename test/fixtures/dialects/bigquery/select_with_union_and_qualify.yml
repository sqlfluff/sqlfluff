# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: a37cfbdac7a76792f5b6a15ae81e0fb6501ed0a71ac027ebb54866d8c31d291e
file:
  statement:
    set_expression:
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: item
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: RANK
              function_contents:
                bracketed:
                  start_bracket: (
                  end_bracket: )
              over_clause:
                keyword: OVER
                bracketed:
                  start_bracket: (
                  window_specification:
                    partitionby_clause:
                    - keyword: PARTITION
                    - keyword: BY
                    - expression:
                        column_reference:
                          naked_identifier: category
                    orderby_clause:
                    - keyword: ORDER
                    - keyword: BY
                    - column_reference:
                        naked_identifier: purchases
                    - keyword: DESC
                  end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: rank
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: Produce
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
            - naked_identifier: Produce
            - dot: .
            - naked_identifier: category
            comparison_operator:
              raw_comparison_operator: '='
            quoted_literal: "'vegetable'"
        qualify_clause:
          keyword: QUALIFY
          expression:
            column_reference:
              naked_identifier: rank
            comparison_operator:
            - raw_comparison_operator: <
            - raw_comparison_operator: '='
            numeric_literal: '3'
    - set_operator:
      - keyword: UNION
      - keyword: ALL
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: item
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: RANK
              function_contents:
                bracketed:
                  start_bracket: (
                  end_bracket: )
              over_clause:
                keyword: OVER
                bracketed:
                  start_bracket: (
                  window_specification:
                    partitionby_clause:
                    - keyword: PARTITION
                    - keyword: BY
                    - expression:
                        column_reference:
                          naked_identifier: category
                    orderby_clause:
                    - keyword: ORDER
                    - keyword: BY
                    - column_reference:
                        naked_identifier: purchases
                    - keyword: DESC
                  end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: rank
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: Produce
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
            - naked_identifier: Produce
            - dot: .
            - naked_identifier: category
            comparison_operator:
              raw_comparison_operator: '='
            quoted_literal: "'vegetable'"
        qualify_clause:
          keyword: QUALIFY
          expression:
            column_reference:
              naked_identifier: rank
            comparison_operator:
            - raw_comparison_operator: <
            - raw_comparison_operator: '='
            numeric_literal: '3'
