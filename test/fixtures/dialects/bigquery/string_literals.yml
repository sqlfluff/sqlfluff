# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: f3461902286ba9716107d127147f861fa43ec5d3ed535cfdc5eda2652ff6429c
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          quoted_literal: '""'
      - comma: ','
      - select_clause_element:
          quoted_literal: "''"
      - comma: ','
      - select_clause_element:
          quoted_literal: '"abc"'
      - comma: ','
      - select_clause_element:
          quoted_literal: "\"it's\""
      - comma: ','
      - select_clause_element:
          quoted_literal: "'it\\'s'"
      - comma: ','
      - select_clause_element:
          quoted_literal: "'Title: \"Boy\"'"
      - comma: ','
      - select_clause_element:
          quoted_literal: '"test \"escaped\""'
      - comma: ','
      - select_clause_element:
          quoted_literal: "'test \\'escaped\\''"
      - comma: ','
      - select_clause_element:
          quoted_literal: '"test \\\"escaped"'
      - comma: ','
      - select_clause_element:
          quoted_literal: '"test \"escaped\\\""'
      - comma: ','
      - select_clause_element:
          quoted_literal: r""
      - comma: ','
      - select_clause_element:
          quoted_literal: "r''"
      - comma: ','
      - select_clause_element:
          quoted_literal: r"abc+"
      - comma: ','
      - select_clause_element:
          quoted_literal: R"abc+"
      - comma: ','
      - select_clause_element:
          quoted_literal: "r'abc+'"
      - comma: ','
      - select_clause_element:
          quoted_literal: "R'abc+'"
      - comma: ','
      - select_clause_element:
          quoted_literal: "r'f\\(abc, (.*),def\\)'"
      - comma: ','
      - select_clause_element:
          quoted_literal: r"f\(abc, (.*),def\)"
      - comma: ','
      - select_clause_element:
          quoted_literal: "b'abc'"
      - comma: ','
      - select_clause_element:
          quoted_literal: B"abc"
      - comma: ','
      - select_clause_element:
          quoted_literal: rb"abc*"
      - comma: ','
      - select_clause_element:
          quoted_literal: rB"abc*"
      - comma: ','
      - select_clause_element:
          quoted_literal: "Rb'abc*'"
      - comma: ','
      - select_clause_element:
          quoted_literal: "br'abc+'"
      - comma: ','
      - select_clause_element:
          quoted_literal: RB"abc+"
      - comma: ','
      - select_clause_element:
          quoted_literal: "r''' as foo ''  bar '''"
      - comma: ','
      - select_clause_element:
          quoted_literal: "B\"\"\" triple ''' quoted '' \"\" string are \"\"\""
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: hard
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: dummy
