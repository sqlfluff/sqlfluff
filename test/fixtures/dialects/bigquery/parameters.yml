# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 8c54cfecb9e82789d21a903c1597a099d07f8d290574d9b70d891d49a51329a5
file:
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          quoted_literal: '"1"'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: x
      where_clause:
        keyword: where
        expression:
          column_reference:
            naked_identifier: y
          comparison_operator:
            raw_comparison_operator: '='
          parameterized_expression:
            at_sign_literal: '@z_test1'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: datetime_trunc
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  parameterized_expression:
                    at_sign_literal: '@z2'
                comma: ','
                date_part: week
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: datetime_trunc
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  parameterized_expression:
                    at_sign_literal: '@_ab'
                comma: ','
                date_part: week
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: datetime_trunc
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  parameterized_expression:
                    at_sign_literal: '@a'
                comma: ','
                date_part: week
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: parse_date
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  quoted_literal: '"%Y%m"'
                comma: ','
                date_part: year
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          quoted_literal: '"1"'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: x
      where_clause:
        keyword: where
        expression:
          column_reference:
            naked_identifier: y
          comparison_operator:
            raw_comparison_operator: '='
          parameterized_expression:
            question_mark: '?'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
              function_name_identifier: concat
            function_contents:
              bracketed:
              - start_bracket: (
              - expression:
                  quoted_literal: '"1"'
              - comma: ','
              - expression:
                  parameterized_expression:
                    question_mark: '?'
              - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: id
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: datetime_trunc
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  parameterized_expression:
                    at_sign_literal: '@z2'
                comma: ','
                date_part: week
                end_bracket: )
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: sum
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: something
                end_bracket: )
            over_clause:
              keyword: over
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: partition
                  - keyword: by
                  - expression:
                      column_reference:
                        naked_identifier: some_id
                  orderby_clause:
                  - keyword: order
                  - keyword: by
                  - column_reference:
                      naked_identifier: some_date
                  frame_clause:
                  - keyword: rows
                  - keyword: BETWEEN
                  - parameterized_expression:
                      at_sign_literal: '@query_parameter'
                  - keyword: PRECEDING
                  - keyword: AND
                  - keyword: CURRENT
                  - keyword: ROW
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: some_sum
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: some_table
      where_clause:
        keyword: where
        expression:
          column_reference:
            naked_identifier: some_column
          comparison_operator:
            raw_comparison_operator: '='
          parameterized_expression:
            at_sign_literal: '@query_parameter2'
- statement_terminator: ;
