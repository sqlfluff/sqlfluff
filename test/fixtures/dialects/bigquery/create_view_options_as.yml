# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 190e6652d19c04d7533421dcc0f335f59e010157713bb565844366c5d562bc33
file:
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: VIEW
    - table_reference:
        naked_identifier: foo
    - keyword: AS
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              wildcard_expression:
                wildcard_identifier:
                  star: '*'
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: bar
        end_bracket: )
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: VIEW
    - table_reference:
        naked_identifier: foo
    - options_segment:
        keyword: OPTIONS
        bracketed:
          start_bracket: (
          parameter: description
          comparison_operator:
            raw_comparison_operator: '='
          quoted_literal: "'copy of bar'"
          end_bracket: )
    - keyword: AS
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              wildcard_expression:
                wildcard_identifier:
                  star: '*'
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: bar
        end_bracket: )
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        naked_identifier: foo
    - options_segment:
        keyword: OPTIONS
        bracketed:
          start_bracket: (
          parameter: description
          comparison_operator:
            raw_comparison_operator: '='
          quoted_literal: "'copy of bar'"
          end_bracket: )
    - keyword: AS
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              wildcard_expression:
                wildcard_identifier:
                  star: '*'
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: bar
        end_bracket: )
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: VIEW
    - table_reference:
        naked_identifier: foo
    - bracketed:
      - start_bracket: (
      - column_definition:
          naked_identifier: x
          options_segment:
            keyword: OPTIONS
            bracketed:
              start_bracket: (
              parameter: description
              comparison_operator:
                raw_comparison_operator: '='
              quoted_literal: "'x'"
              end_bracket: )
      - comma: ','
      - column_definition:
          naked_identifier: y
          options_segment:
            keyword: OPTIONS
            bracketed:
              start_bracket: (
              parameter: description
              comparison_operator:
                raw_comparison_operator: '='
              quoted_literal: "'y'"
              end_bracket: )
      - end_bracket: )
    - options_segment:
        keyword: OPTIONS
        bracketed:
          start_bracket: (
          parameter: description
          comparison_operator:
            raw_comparison_operator: '='
          quoted_literal: "'view_column_name_list'"
          end_bracket: )
    - keyword: AS
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
          - keyword: SELECT
          - select_clause_element:
              column_reference:
                naked_identifier: x
          - comma: ','
          - select_clause_element:
              column_reference:
                naked_identifier: y
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: bar
        end_bracket: )
- statement_terminator: ;
