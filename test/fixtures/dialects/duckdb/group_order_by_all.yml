# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: d423200c1532e7effc6c9636645550735fdfd582a41a616a0973c015d5823f2e
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: systems
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: planets
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: cities
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: cantinas
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: SUM
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                - column_reference:
                    naked_identifier: scum
                - binary_operator: +
                - column_reference:
                    naked_identifier: villainy
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: total_scum_and_villainy
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: star_wars_locations
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - keyword: ALL
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
            wildcard_exclude:
              keyword: EXCLUDE
              bracketed:
              - start_bracket: (
              - column_reference:
                  naked_identifier: cantinas
              - comma: ','
              - column_reference:
                  naked_identifier: booths
              - comma: ','
              - column_reference:
                  naked_identifier: scum
              - comma: ','
              - column_reference:
                  naked_identifier: villainy
              - end_bracket: )
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: SUM
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                - column_reference:
                    naked_identifier: scum
                - binary_operator: +
                - column_reference:
                    naked_identifier: villainy
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: total_scum_and_villainy
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: star_wars_locations
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - keyword: ALL
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: age
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: sum
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: civility
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: total_civility
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: star_wars_universe
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - keyword: ALL
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - keyword: ALL
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: x_wing
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: proton_torpedoes
      - comma: ','
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: luke_whats_wrong
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - column_reference:
          naked_identifier: x_wing
      - comma: ','
      - column_reference:
          naked_identifier: proton_torpedoes
      - comma: ','
- statement_terminator: ;
