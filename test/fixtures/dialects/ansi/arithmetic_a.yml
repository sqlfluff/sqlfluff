# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 9d3e9f0bef06f7d97a978925adc57d74f87f6a84b829981ec131aa8aae5002ba
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal: '1'
          - binary_operator: +
          - bracketed:
              start_bracket: (
              expression:
              - numeric_literal: '2'
              - binary_operator: '*'
              - numeric_literal: '3'
              end_bracket: )
          - comparison_operator:
            - raw_comparison_operator: '>'
            - raw_comparison_operator: '='
          - numeric_literal: '4'
          - binary_operator: +
          - numeric_literal: '6'
          - binary_operator: +
          - numeric_literal: '13'
          alias_expression:
            keyword: as
            naked_identifier: val
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal: '1'
          - binary_operator: +
          - tilde: '~'
          - bracketed:
              start_bracket: (
              expression:
              - tilde: '~'
              - numeric_literal: '2'
              - binary_operator: '*'
              - numeric_literal: '3'
              end_bracket: )
          - comparison_operator:
            - raw_comparison_operator: '>'
            - raw_comparison_operator: '='
          - numeric_literal: '4'
          - binary_operator: +
          - tilde: '~'
          - numeric_literal: '6'
          - binary_operator: +
          - numeric_literal: '13'
          alias_expression:
            keyword: as
            naked_identifier: val
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          numeric_literal:
            sign_indicator: '-'
            numeric_literal: '1'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal:
              sign_indicator: '-'
              numeric_literal: '1'
          - binary_operator: +
          - numeric_literal: '5'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            tilde: '~'
            numeric_literal: '1'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal:
              sign_indicator: '-'
              numeric_literal: '1'
          - binary_operator: +
          - tilde: '~'
          - numeric_literal: '5'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal: '4'
          - binary_operator:
              ampersand: '&'
          - tilde: '~'
          - numeric_literal: '8'
          - binary_operator:
              pipe: '|'
          - numeric_literal: '16'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            numeric_literal: '8'
            binary_operator: +
            tilde: '~'
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '3'
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal: '8'
          - binary_operator:
              pipe: '|'
          - tilde: '~'
          - tilde: '~'
          - tilde: '~'
          - numeric_literal: '4'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            numeric_literal: '1'
            binary_operator: '*'
            sign_indicator: '-'
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '5'
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal: '1'
          - binary_operator: '*'
          - numeric_literal:
              sign_indicator: '-'
              numeric_literal: '5'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal: '1'
          - binary_operator: '*'
          - sign_indicator: '-'
          - sign_indicator: '-'
          - numeric_literal:
              sign_indicator: '-'
              numeric_literal: '5'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal: '1'
          - binary_operator: '*'
          - sign_indicator: '-'
          - sign_indicator: '-'
          - sign_indicator: '-'
          - bracketed:
              start_bracket: (
              expression:
                numeric_literal: '5'
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal: '1'
          - binary_operator: '*'
          - sign_indicator: +
          - sign_indicator: +
          - bracketed:
              start_bracket: (
              expression:
                numeric_literal: '5'
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal: '1'
          - binary_operator: '*'
          - sign_indicator: '-'
          - sign_indicator: '-'
          - sign_indicator: '-'
          - function:
              function_name:
                function_name_identifier: func
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '5'
                  end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal: '1'
          - binary_operator: '*'
          - tilde: '~'
          - tilde: '~'
          - tilde: '~'
          - function:
              function_name:
                function_name_identifier: func
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '5'
                  end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            numeric_literal: '1'
            binary_operator: '*'
            sign_indicator: +
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '5'
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal: '1'
          - binary_operator: '*'
          - numeric_literal:
              sign_indicator: +
              numeric_literal: '5'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - numeric_literal: '1'
          - binary_operator: '*'
          - sign_indicator: +
          - numeric_literal:
              sign_indicator: +
              numeric_literal: '5'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            boolean_literal: 'FALSE'
            binary_operator: AND
            keyword: NOT
            bracketed:
              start_bracket: (
              expression:
                boolean_literal: 'TRUE'
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - boolean_literal: 'FALSE'
          - binary_operator: AND
          - keyword: NOT
          - keyword: NOT
          - keyword: NOT
          - bracketed:
              start_bracket: (
              expression:
                boolean_literal: 'TRUE'
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            boolean_literal: 'FALSE'
            binary_operator: AND
            keyword: NOT
            bracketed:
              start_bracket: (
              expression:
                boolean_literal: 'TRUE'
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            boolean_literal: 'FALSE'
            binary_operator: AND
            keyword: NOT
            function:
              function_name:
                function_name_identifier: func
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '5'
                  end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            quoted_literal: "'abc'"
            keyword: LIKE
            sign_indicator: '-'
            numeric_literal:
              sign_indicator: '-'
              numeric_literal: '5'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'abc'"
          - keyword: LIKE
          - tilde: '~'
          - tilde: '~'
          - numeric_literal: '5'
- statement_terminator: ;
