# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 6ffafae7c50e3146bbd2d040d1b6788d28e23866a9c0fcdac8aaa2015c0c3b63
file:
- statement:
    merge_statement:
    - keyword: MERGE
    - keyword: INTO
    - table_reference:
        naked_identifier: t
    - keyword: USING
    - table_reference:
        naked_identifier: u
    - join_on_condition:
        keyword: 'ON'
        bracketed:
          start_bracket: (
          expression:
          - column_reference:
              naked_identifier: a
          - comparison_operator:
              raw_comparison_operator: '='
          - column_reference:
              naked_identifier: b
          end_bracket: )
    - merge_match:
        merge_when_matched_clause:
        - keyword: WHEN
        - keyword: MATCHED
        - keyword: THEN
        - merge_update_clause:
            keyword: UPDATE
            set_clause_list:
              keyword: SET
              set_clause:
              - column_reference:
                  naked_identifier: a
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                  naked_identifier: b
        merge_when_not_matched_clause:
        - keyword: WHEN
        - keyword: NOT
        - keyword: MATCHED
        - keyword: THEN
        - merge_insert_clause:
            keyword: INSERT
            bracketed:
              start_bracket: (
              column_reference:
                naked_identifier: b
              end_bracket: )
            values_clause:
              keyword: VALUES
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: c
                end_bracket: )
- statement_terminator: ;
- statement:
    merge_statement:
    - keyword: MERGE
    - keyword: INTO
    - table_reference:
        naked_identifier: t
    - keyword: USING
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              wildcard_expression:
                wildcard_identifier:
                  star: '*'
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: u
        end_bracket: )
    - alias_expression:
        alias_operator:
          keyword: AS
        naked_identifier: u
    - join_on_condition:
        keyword: 'ON'
        bracketed:
          start_bracket: (
          expression:
          - column_reference:
              naked_identifier: a
          - comparison_operator:
              raw_comparison_operator: '='
          - column_reference:
              naked_identifier: b
          end_bracket: )
    - merge_match:
        merge_when_matched_clause:
        - keyword: WHEN
        - keyword: MATCHED
        - keyword: THEN
        - merge_update_clause:
            keyword: UPDATE
            set_clause_list:
              keyword: SET
              set_clause:
              - column_reference:
                  naked_identifier: a
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                  naked_identifier: b
        merge_when_not_matched_clause:
        - keyword: WHEN
        - keyword: NOT
        - keyword: MATCHED
        - keyword: THEN
        - merge_insert_clause:
            keyword: INSERT
            bracketed:
              start_bracket: (
              column_reference:
                naked_identifier: b
              end_bracket: )
            values_clause:
              keyword: VALUES
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: c
                end_bracket: )
- statement_terminator: ;
- statement:
    merge_statement:
    - keyword: MERGE
    - keyword: INTO
    - table_reference:
        naked_identifier: t
    - keyword: USING
    - table_reference:
        naked_identifier: u
    - join_on_condition:
        keyword: 'ON'
        bracketed:
          start_bracket: (
          expression:
          - column_reference:
              naked_identifier: a
          - comparison_operator:
              raw_comparison_operator: '='
          - column_reference:
              naked_identifier: b
          end_bracket: )
    - merge_match:
      - merge_when_matched_clause:
        - keyword: WHEN
        - keyword: MATCHED
        - keyword: THEN
        - merge_update_clause:
            keyword: UPDATE
            set_clause_list:
              keyword: SET
              set_clause:
              - column_reference:
                  naked_identifier: a
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                  naked_identifier: b
      - merge_when_matched_clause:
        - keyword: WHEN
        - keyword: MATCHED
        - keyword: THEN
        - merge_delete_clause:
            keyword: DELETE
- statement_terminator: ;
- statement:
    merge_statement:
    - keyword: MERGE
    - keyword: INTO
    - table_reference:
        naked_identifier: t
    - keyword: USING
    - table_reference:
        naked_identifier: u
    - join_on_condition:
        keyword: 'ON'
        bracketed:
          start_bracket: (
          expression:
          - column_reference:
              naked_identifier: a
          - comparison_operator:
              raw_comparison_operator: '='
          - column_reference:
              naked_identifier: b
          end_bracket: )
    - merge_match:
      - merge_when_matched_clause:
        - keyword: WHEN
        - keyword: MATCHED
        - keyword: AND
        - expression:
          - column_reference:
              naked_identifier: a
          - comparison_operator:
              raw_comparison_operator: '>'
          - column_reference:
              naked_identifier: b
        - keyword: THEN
        - merge_update_clause:
            keyword: UPDATE
            set_clause_list:
              keyword: SET
              set_clause:
              - column_reference:
                  naked_identifier: a
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                  naked_identifier: b
      - merge_when_matched_clause:
        - keyword: WHEN
        - keyword: MATCHED
        - keyword: AND
        - expression:
            bracketed:
              start_bracket: (
              expression:
              - column_reference:
                  naked_identifier: a
              - comparison_operator:
                  raw_comparison_operator: <
              - column_reference:
                  naked_identifier: b
              - binary_operator: AND
              - column_reference:
                  naked_identifier: c
              - comparison_operator:
                  raw_comparison_operator: <
              - column_reference:
                  naked_identifier: d
              end_bracket: )
        - keyword: THEN
        - merge_delete_clause:
            keyword: DELETE
      - merge_when_not_matched_clause:
        - keyword: WHEN
        - keyword: NOT
        - keyword: MATCHED
        - keyword: THEN
        - merge_insert_clause:
            keyword: INSERT
            bracketed:
            - start_bracket: (
            - column_reference:
                naked_identifier: a
            - comma: ','
            - column_reference:
                naked_identifier: c
            - end_bracket: )
            values_clause:
              keyword: VALUES
              bracketed:
              - start_bracket: (
              - expression:
                  column_reference:
                    naked_identifier: b
              - comma: ','
              - expression:
                  column_reference:
                    naked_identifier: d
              - end_bracket: )
- statement_terminator: ;
- statement:
    with_compound_statement:
      keyword: WITH
      common_table_expression:
        naked_identifier: source
        keyword: AS
        bracketed:
          start_bracket: (
          select_statement:
            select_clause:
              keyword: SELECT
              select_clause_element:
                wildcard_expression:
                  wildcard_identifier:
                    star: '*'
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: u
          end_bracket: )
      merge_statement:
      - keyword: MERGE
      - keyword: INTO
      - table_reference:
          naked_identifier: t
      - keyword: USING
      - table_reference:
          naked_identifier: source
      - alias_expression:
          alias_operator:
            keyword: AS
          naked_identifier: u
      - join_on_condition:
          keyword: 'ON'
          bracketed:
            start_bracket: (
            expression:
            - column_reference:
                naked_identifier: a
            - comparison_operator:
                raw_comparison_operator: '='
            - column_reference:
                naked_identifier: b
            end_bracket: )
      - merge_match:
          merge_when_matched_clause:
          - keyword: WHEN
          - keyword: MATCHED
          - keyword: THEN
          - merge_update_clause:
              keyword: UPDATE
              set_clause_list:
                keyword: SET
                set_clause:
                - column_reference:
                    naked_identifier: a
                - comparison_operator:
                    raw_comparison_operator: '='
                - column_reference:
                    naked_identifier: b
          merge_when_not_matched_clause:
          - keyword: WHEN
          - keyword: NOT
          - keyword: MATCHED
          - keyword: THEN
          - merge_insert_clause:
              keyword: INSERT
              bracketed:
                start_bracket: (
                column_reference:
                  naked_identifier: b
                end_bracket: )
              values_clause:
                keyword: VALUES
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      naked_identifier: c
                  end_bracket: )
- statement_terminator: ;
