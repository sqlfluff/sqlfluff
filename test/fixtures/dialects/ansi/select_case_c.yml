# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: ae00088f3a646d5a268e8ca8f9efd86b3f29d8a902c70dca694f6b39f2e20b3d
file:
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: col0
      - comma: ','
      - select_clause_element:
          expression:
            cast_expression:
              case_expression:
              - keyword: case
              - when_clause:
                - keyword: when
                - expression:
                    column_reference:
                      naked_identifier: col1
                - keyword: then
                - expression:
                    column_reference:
                      naked_identifier: col2
              - else_clause:
                  keyword: else
                  expression:
                    column_reference:
                      naked_identifier: col3
              - keyword: end
              casting_operator: '::'
              data_type:
                data_type_identifier: text
          alias_expression:
            keyword: as
            naked_identifier: mycol
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: col0
      - comma: ','
      - select_clause_element:
          expression:
            cast_expression:
            - case_expression:
              - keyword: case
              - when_clause:
                - keyword: when
                - expression:
                    column_reference:
                      naked_identifier: col1
                - keyword: then
                - expression:
                    column_reference:
                      naked_identifier: col2
              - else_clause:
                  keyword: else
                  expression:
                    column_reference:
                      naked_identifier: col3
              - keyword: end
            - casting_operator: '::'
            - data_type:
                data_type_identifier: int
            - casting_operator: '::'
            - data_type:
                data_type_identifier: float
          alias_expression:
            keyword: as
            naked_identifier: mycol
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: col0
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: cast
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  case_expression:
                  - keyword: case
                  - when_clause:
                    - keyword: when
                    - expression:
                        column_reference:
                          naked_identifier: col1
                    - keyword: then
                    - expression:
                        column_reference:
                          naked_identifier: col2
                  - else_clause:
                      keyword: else
                      expression:
                        column_reference:
                          naked_identifier: col3
                  - keyword: end
                keyword: as
                data_type:
                  data_type_identifier: text
                end_bracket: )
          alias_expression:
            keyword: as
            naked_identifier: mycol
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: column1
      - comma: ','
      - select_clause_element:
          expression:
            case_expression:
            - keyword: CASE
            - when_clause:
              - keyword: WHEN
              - expression:
                  quoted_literal: "'test'"
              - keyword: THEN
              - expression:
                  numeric_literal: '12'
            - else_clause:
                keyword: ELSE
                expression:
                  numeric_literal: '0'
            - keyword: END
            comparison_operator:
            - raw_comparison_operator: '>'
            - raw_comparison_operator: '='
            numeric_literal: '0'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: boo
- statement_terminator: ;
