# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: a8adb57b106b17117d895ece47b07a5a0ea042e499d557eb44e0e5ce3a8636fd
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: DATE
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: t
                end_bracket: )
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: ROUND
            function_contents:
              bracketed:
              - start_bracket: (
              - expression:
                  column_reference:
                    naked_identifier: b
              - comma: ','
              - expression:
                  numeric_literal: '2'
              - end_bracket: )
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: LEFT
            function_contents:
              bracketed:
              - start_bracket: (
              - expression:
                  function:
                    function_name:
                      function_name_identifier: right
                    function_contents:
                      bracketed:
                      - start_bracket: (
                      - expression:
                          column_reference:
                            naked_identifier: s
                      - comma: ','
                      - expression:
                          numeric_literal: '5'
                      - end_bracket: )
              - comma: ','
              - expression:
                  function:
                    function_name:
                      function_name_identifier: LEN
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          column_reference:
                            naked_identifier: s
                          binary_operator: +
                          numeric_literal: '6'
                        end_bracket: )
              - end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: compound
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: tbl_b
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: _custom_function
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  numeric_literal: '5'
                end_bracket: )
          alias_expression:
            alias_operator:
              keyword: as
            naked_identifier: test_column
- statement_terminator: ;
