# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 056e3d1311c24d3fd42bc09cc503bc3ba11f2aaa9b9307b04ea0ff3f2d032dce
file:
- statement:
    select_statement:
      select_clause:
        keyword: Select
        select_clause_element:
          column_reference:
            naked_identifier: A
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: Sys
              - dot: .
              - naked_identifier: dual
      where_clause:
        keyword: where
        expression:
          column_reference:
            naked_identifier: a
          keyword: in
          bracketed:
          - start_bracket: (
          - quoted_literal: "'RED'"
          - comma: ','
          - quoted_literal: "'GREEN'"
          - comma: ','
          - quoted_literal: "'BLUE'"
          - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: tbl_b
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: insert
    - keyword: into
    - table_reference:
      - naked_identifier: sch
      - dot: .
      - naked_identifier: tbl_b
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: col1
        end_bracket: )
    - values_clause:
        keyword: values
        bracketed:
          start_bracket: (
          numeric_literal: '123'
          end_bracket: )
- statement_terminator: ;
- statement:
    with_compound_statement:
      keyword: with
      common_table_expression:
        naked_identifier: tmp
        keyword: as
        bracketed:
          start_bracket: (
          select_statement:
            select_clause:
              keyword: select
              select_clause_element:
                wildcard_expression:
                  wildcard_identifier:
                    star: '*'
            from_clause:
              keyword: from
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: blah
          end_bracket: )
      select_statement:
        select_clause:
        - keyword: select
        - select_clause_element:
            column_reference:
              naked_identifier: a
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: b
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: tmp
- statement_terminator: ;
