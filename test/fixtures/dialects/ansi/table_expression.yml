# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 5f31201d2f2ff1bcb930d0cfe0ede2433174a1cfef691939d3eb27877d30dd81
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: y
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: woy
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              function:
                function_name:
                  function_name_identifier: UNNEST
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      function:
                        function_name:
                          function_name_identifier: GENERATE_ARRAY
                        function_contents:
                          bracketed:
                          - start_bracket: (
                          - expression:
                              numeric_literal: '1'
                          - comma: ','
                          - expression:
                              numeric_literal: '53'
                          - end_bracket: )
                    end_bracket: )
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: y
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: id
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: name
      from_clause:
      - keyword: FROM
      - from_expression:
          from_expression_element:
          - table_expression:
              function:
                function_name:
                  function_name_identifier: UNNEST
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      array_literal:
                      - start_square_bracket: '['
                      - numeric_literal: '1'
                      - comma: ','
                      - numeric_literal: '2'
                      - comma: ','
                      - numeric_literal: '3'
                      - end_square_bracket: ']'
                    end_bracket: )
          - alias_expression:
              naked_identifier: id
          - keyword: WITH
          - keyword: OFFSET
          - alias_expression:
              naked_identifier: pos1
      - comma: ','
      - from_expression:
          from_expression_element:
          - table_expression:
              function:
                function_name:
                  function_name_identifier: UNNEST
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      array_literal:
                      - start_square_bracket: '['
                      - quoted_literal: "'a'"
                      - comma: ','
                      - quoted_literal: "'b'"
                      - comma: ','
                      - quoted_literal: "'c'"
                      - end_square_bracket: ']'
                    end_bracket: )
          - alias_expression:
              naked_identifier: name
          - keyword: WITH
          - keyword: OFFSET
          - alias_expression:
              naked_identifier: pos2
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            naked_identifier: pos1
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
            naked_identifier: pos2
- statement_terminator: ;
