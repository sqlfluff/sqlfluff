# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: f329c571ad013c3e97ffecf4b547b7961027d6bd5dcec7460a38b64f2834549b
file:
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - keyword: TABLE
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: col2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: foo2
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - keyword: TABLE
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - values_clause:
        keyword: VALUES
        bracketed:
        - start_bracket: (
        - expression:
            bracketed:
              start_bracket: (
              numeric_literal: '1'
              comma: ','
              quoted_literal: "'a'"
              end_bracket: )
        - comma: ','
        - expression:
            bracketed:
              start_bracket: (
              numeric_literal: '2'
              comma: ','
              quoted_literal: "'b'"
              end_bracket: )
        - end_bracket: )
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - keyword: TABLE
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - keyword: PARTITION
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - end_bracket: )
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: col2
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: col3
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: foo2
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - keyword: TABLE
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - keyword: PARTITION
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - comparison_operator:
          raw_comparison_operator: '='
      - numeric_literal: '1'
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'a'"
      - end_bracket: )
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            column_reference:
              naked_identifier: col3
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: foo2
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - keyword: TABLE
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - start_square_bracket: '['
    - keyword: SHUFFLE
    - end_square_bracket: ']'
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: col2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: foo2
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - keyword: TABLE
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - start_square_bracket: '['
    - keyword: NOSHUFFLE
    - end_square_bracket: ']'
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: col2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: foo2
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: INTO
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - end_bracket: )
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: col2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: foo2
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
              naked_identifier: col2
            comparison_operator:
              raw_comparison_operator: '>'
            numeric_literal: '100'
- statement_terminator: ;
