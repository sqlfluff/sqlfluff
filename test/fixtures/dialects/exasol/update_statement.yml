# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: e15aff534b5771f12d0a2c78d260e2f173294d794f44151433cbc96d3e42d811
file:
- statement:
    update_statement:
      keyword: UPDATE
      table_reference:
        naked_identifier: staff
      set_clause_list:
        keyword: SET
        set_clause:
          column_reference:
            naked_identifier: salary
          comparison_operator:
            raw_comparison_operator: '='
          expression:
            column_reference:
              naked_identifier: salary
            binary_operator: '*'
            numeric_literal: '1.1'
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            naked_identifier: name
          comparison_operator:
            raw_comparison_operator: '='
          quoted_literal: "'SMITH'"
- statement_terminator: ;
- statement:
    update_statement:
      keyword: UPDATE
      table_reference:
        naked_identifier: staff
      alias_expression:
        keyword: AS
        naked_identifier: U
      set_clause_list:
      - keyword: SET
      - set_clause:
          column_reference:
          - naked_identifier: U
          - dot: .
          - naked_identifier: salary
          comparison_operator:
            raw_comparison_operator: '='
          expression:
            column_reference:
            - naked_identifier: U
            - dot: .
            - naked_identifier: salary
            binary_operator: /
            numeric_literal: '1.95583'
      - comma: ','
      - set_clause:
          column_reference:
          - naked_identifier: U
          - dot: .
          - naked_identifier: currency
          comparison_operator:
            raw_comparison_operator: '='
          expression:
            quoted_literal: "'EUR'"
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
          - naked_identifier: U
          - dot: .
          - naked_identifier: currency
          comparison_operator:
            raw_comparison_operator: '='
          quoted_literal: "'DM'"
- statement_terminator: ;
- statement:
    update_statement:
      keyword: UPDATE
      table_reference:
        naked_identifier: staff
      alias_expression:
        keyword: AS
        naked_identifier: U
      set_clause_list:
      - keyword: SET
      - set_clause:
          column_reference:
          - naked_identifier: U
          - dot: .
          - naked_identifier: salary
          comparison_operator:
            raw_comparison_operator: '='
          expression:
            column_reference:
            - naked_identifier: V
            - dot: .
            - naked_identifier: salary
      - comma: ','
      - set_clause:
          column_reference:
          - naked_identifier: U
          - dot: .
          - naked_identifier: currency
          comparison_operator:
            raw_comparison_operator: '='
          expression:
            column_reference:
            - naked_identifier: V
            - dot: .
            - naked_identifier: currency
      from_clause:
      - keyword: FROM
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: staff
            alias_expression:
              keyword: AS
              naked_identifier: U
      - comma: ','
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: staff_updates
            alias_expression:
              keyword: AS
              naked_identifier: V
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
          - naked_identifier: U
          - dot: .
          - naked_identifier: name
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
          - naked_identifier: V
          - dot: .
          - naked_identifier: name
- statement_terminator: ;
- statement:
    update_statement:
      keyword: UPDATE
      table_reference:
        naked_identifier: order_pos
      set_clause_list:
        keyword: SET
        set_clause:
          column_reference:
            naked_identifier: stocks
          comparison_operator:
            raw_comparison_operator: '='
          expression:
            column_reference:
              naked_identifier: stocks
            binary_operator: '*'
            numeric_literal: '10'
      preferring_clause:
        keyword: PREFERRING
        preference_term:
          function:
            function_name:
              function_name_identifier: HIGH
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: order_date
                end_bracket: )
        partitionby_clause:
        - keyword: PARTITION
        - keyword: BY
        - bracketed:
          - start_bracket: (
          - expression:
              column_reference:
                naked_identifier: shop_id
          - comma: ','
          - expression:
              column_reference:
                naked_identifier: order_id
          - end_bracket: )
- statement_terminator: ;
- statement:
    update_statement:
      keyword: UPDATE
      table_reference:
        naked_identifier: t1
      set_clause_list:
      - keyword: SET
      - set_clause:
          column_reference:
            naked_identifier: x
          comparison_operator:
            raw_comparison_operator: '='
          expression:
            column_reference:
            - naked_identifier: t2
            - dot: .
            - naked_identifier: c1
      - comma: ','
      - set_clause:
          column_reference:
            naked_identifier: w
          comparison_operator:
            raw_comparison_operator: '='
          expression:
            column_reference:
            - naked_identifier: t4
            - dot: .
            - naked_identifier: c2
      from_clause:
        keyword: FROM
        from_expression:
        - from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: t2
        - join_clause:
            keyword: JOIN
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: t3
              alias_expression:
                naked_identifier: g
            join_on_condition:
              keyword: 'ON'
              expression:
              - column_reference:
                - naked_identifier: t2
                - dot: .
                - naked_identifier: c1
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                - naked_identifier: t3
                - dot: .
                - naked_identifier: c2
        - join_clause:
          - keyword: LEFT
          - keyword: JOIN
          - from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: t4
          - join_on_condition:
              keyword: 'ON'
              expression:
              - column_reference:
                - naked_identifier: t4
                - dot: .
                - naked_identifier: c3
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                - naked_identifier: t3
                - dot: .
                - naked_identifier: c1
- statement_terminator: ;
