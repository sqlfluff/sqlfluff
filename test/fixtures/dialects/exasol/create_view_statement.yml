# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: e1e4c5c3d1717fbaffed773eb2113c9d604f7f1755f56e9418accf67563d0dd9
file:
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - view_reference:
        naked_identifier: my_view
    - keyword: as
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: select
            select_clause_element:
              column_reference:
                naked_identifier: x
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: t
        end_bracket: )
    - comment_clause:
      - keyword: COMMENT
      - keyword: IS
      - quoted_literal: "'nice view'"
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - view_reference:
        naked_identifier: my_view
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: col1
        end_bracket: )
    - keyword: as
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: select
            select_clause_element:
              column_reference:
                naked_identifier: x
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: t
        end_bracket: )
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: FORCE
    - keyword: VIEW
    - view_reference:
        naked_identifier: my_view
    - keyword: as
    - select_statement:
        select_clause:
          keyword: select
          select_clause_element:
            column_reference:
              naked_identifier: y
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: t
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: VIEW
    - view_reference:
        naked_identifier: my_view
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col_1
      - comment_clause:
        - keyword: COMMENT
        - keyword: IS
        - quoted_literal: "'something important'"
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - end_bracket: )
    - keyword: as
    - select_statement:
        select_clause:
          keyword: select
          select_clause_element:
            function:
              function_name:
                function_name_identifier: max
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      naked_identifier: y
                  end_bracket: )
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: t
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - view_reference:
      - naked_identifier: schem
      - dot: .
      - naked_identifier: few
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: col1
        end_bracket: )
    - keyword: as
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: select
            select_clause_element:
              column_reference:
                naked_identifier: x
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: t
        end_bracket: )
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - view_reference:
      - naked_identifier: schem
      - dot: .
      - naked_identifier: few
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: col1
        end_bracket: )
    - keyword: as
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: select
            select_clause_element:
              column_reference:
                naked_identifier: x
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: t
        end_bracket: )
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - view_reference:
        naked_identifier: T
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: A
    - comment_clause:
      - keyword: COMMENT
      - keyword: IS
      - quoted_literal: "'BLABLA'"
- statement_terminator: ;
