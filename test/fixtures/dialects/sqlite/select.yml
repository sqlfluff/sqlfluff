# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 8d307fe8af297a776a000d5f1d6cc85a71ba89ddd8f059ba3406bf9fdf5f360d
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: a
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: foo
      limit_clause:
        keyword: LIMIT
        numeric_literal: '10'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: survey_time
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: AVG
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    naked_identifier: light
                end_bracket: )
          alias_expression:
            keyword: AS
            naked_identifier: trips
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: survey
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - column_reference:
          naked_identifier: survey_time
- statement_terminator: ;
- statement:
    with_compound_statement:
      keyword: WITH
      common_table_expression:
        naked_identifier: time_cte
        keyword: AS
        bracketed:
          start_bracket: (
          select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  naked_identifier: branch
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: created_at
            - comma: ','
            - select_clause_element:
                column_reference:
                  naked_identifier: time
            - comma: ','
            - select_clause_element:
                function:
                  function_name:
                    function_name_identifier: cast
                  function_contents:
                    bracketed:
                      start_bracket: (
                      expression:
                        column_reference:
                          naked_identifier: time
                        binary_operator: '-'
                        function:
                          function_name:
                            function_name_identifier: LAG
                          function_contents:
                            bracketed:
                            - start_bracket: (
                            - expression:
                                column_reference:
                                  naked_identifier: time
                            - comma: ','
                            - expression:
                                numeric_literal: '1'
                            - comma: ','
                            - expression:
                                column_reference:
                                  naked_identifier: time
                            - end_bracket: )
                          over_clause:
                            keyword: OVER
                            bracketed:
                              start_bracket: (
                              window_specification:
                                orderby_clause:
                                - keyword: ORDER
                                - keyword: BY
                                - column_reference:
                                    naked_identifier: time
                              end_bracket: )
                      keyword: as
                      data_type:
                        data_type_identifier: real
                      end_bracket: )
                alias_expression:
                  keyword: AS
                  naked_identifier: time_spent
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      naked_identifier: heartbeats
                  alias_expression:
                    naked_identifier: h
            where_clause:
              keyword: WHERE
              expression:
              - column_reference:
                  naked_identifier: user_id
              - comparison_operator:
                  raw_comparison_operator: '='
              - numeric_literal: '1'
              - binary_operator: AND
              - column_reference:
                  naked_identifier: created_at
              - comparison_operator:
                - raw_comparison_operator: '>'
                - raw_comparison_operator: '='
              - function:
                  function_name:
                    function_name_identifier: DATE
                  function_contents:
                    bracketed:
                    - start_bracket: (
                    - expression:
                        quoted_literal: "'now'"
                    - comma: ','
                    - expression:
                        quoted_literal: "'start of day'"
                    - end_bracket: )
            orderby_clause:
            - keyword: ORDER
            - keyword: BY
            - column_reference:
                naked_identifier: id
            limit_clause:
            - keyword: LIMIT
            - numeric_literal: '1'
            - keyword: OFFSET
            - numeric_literal: '1'
          end_bracket: )
      select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: branch
            alias_expression:
              keyword: as
              naked_identifier: name
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: cast
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      naked_identifier: time_spent
                  keyword: as
                  data_type:
                    data_type_identifier: real
                  end_bracket: )
            alias_expression:
              keyword: as
              naked_identifier: time_spent
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: cast
              function_contents:
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      naked_identifier: time_spent
                    binary_operator: /
                    bracketed:
                      start_bracket: (
                      expression:
                        select_statement:
                          select_clause:
                            keyword: SELECT
                            select_clause_element:
                              function:
                                function_name:
                                  function_name_identifier: SUM
                                function_contents:
                                  bracketed:
                                    start_bracket: (
                                    expression:
                                      column_reference:
                                        naked_identifier: time_spent
                                    end_bracket: )
                          from_clause:
                            keyword: FROM
                            from_expression:
                              from_expression_element:
                                table_expression:
                                  table_reference:
                                    naked_identifier: time_cte
                      end_bracket: )
                  keyword: as
                  data_type:
                    data_type_identifier: real
                  end_bracket: )
            alias_expression:
              keyword: as
              naked_identifier: time_percentage
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                bracketed:
                  start_bracket: (
                  select_statement:
                    select_clause:
                    - keyword: SELECT
                    - select_clause_element:
                        column_reference:
                          naked_identifier: branch
                    - comma: ','
                    - select_clause_element:
                        function:
                          function_name:
                            function_name_identifier: cast
                          function_contents:
                            bracketed:
                              start_bracket: (
                              expression:
                                function:
                                  function_name:
                                    function_name_identifier: SUM
                                  function_contents:
                                    bracketed:
                                      start_bracket: (
                                      expression:
                                        column_reference:
                                          naked_identifier: time_spent
                                      end_bracket: )
                              keyword: as
                              data_type:
                                data_type_identifier: real
                              end_bracket: )
                        alias_expression:
                          keyword: AS
                          naked_identifier: time_spent
                    from_clause:
                      keyword: FROM
                      from_expression:
                        from_expression_element:
                          table_expression:
                            table_reference:
                              naked_identifier: time_cte
                    groupby_clause:
                    - keyword: GROUP
                    - keyword: BY
                    - column_reference:
                        naked_identifier: branch
                    orderby_clause:
                    - keyword: ORDER
                    - keyword: BY
                    - column_reference:
                        naked_identifier: time_spent
                    - keyword: DESC
                  end_bracket: )
- statement_terminator: ;
