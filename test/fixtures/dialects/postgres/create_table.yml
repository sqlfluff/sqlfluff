# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 557b9722dcb9510ef6be202c8d12b4c3a1f21983ecc5faaabaae8761d0917564
file:
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: counters
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: my_type
        data_type:
          naked_identifier: public
          dot: .
          data_type_identifier: MY_TYPE
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: distributors
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: did
      - data_type:
          keyword: integer
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - column_constraint_segment:
        - keyword: GENERATED
        - keyword: BY
        - keyword: DEFAULT
        - keyword: AS
        - keyword: IDENTITY
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '40'
              end_bracket: )
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - column_constraint_segment:
          keyword: CHECK
          bracketed:
            start_bracket: (
            expression:
              column_reference:
                naked_identifier: name
              comparison_operator:
              - raw_comparison_operator: <
              - raw_comparison_operator: '>'
              quoted_literal: "''"
            end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: array_int
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: vector
        data_type:
        - keyword: int
        - start_square_bracket: '['
        - end_square_bracket: ']'
        - start_square_bracket: '['
        - end_square_bracket: ']'
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: distributors
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: did
      - data_type:
          keyword: integer
      - column_constraint_segment:
          keyword: CHECK
          bracketed:
            start_bracket: (
            expression:
              column_reference:
                naked_identifier: did
              comparison_operator:
                raw_comparison_operator: '>'
              numeric_literal: '100'
            end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '40'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: long_varying
      - data_type:
        - keyword: char
        - keyword: varying
        - bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '100'
              end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: distributors
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: did
      - data_type:
          keyword: integer
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '40'
              end_bracket: )
      - comma: ','
      - table_constraint:
        - keyword: CONSTRAINT
        - object_reference:
            naked_identifier: con1
        - keyword: CHECK
        - bracketed:
            start_bracket: (
            expression:
            - column_reference:
                naked_identifier: did
            - comparison_operator:
                raw_comparison_operator: '>'
            - numeric_literal: '100'
            - binary_operator: AND
            - column_reference:
                naked_identifier: name
            - comparison_operator:
              - raw_comparison_operator: <
              - raw_comparison_operator: '>'
            - quoted_literal: "''"
            end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: distributors
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: did
      - data_type:
          keyword: integer
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '40'
              end_bracket: )
      - comma: ','
      - table_constraint:
        - keyword: PRIMARY
        - keyword: KEY
        - bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: did
            end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: distributors
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: did
      - data_type:
          keyword: integer
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '40'
              end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: distributors
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '40'
              end_bracket: )
      - column_constraint_segment:
          keyword: DEFAULT
          quoted_literal: "'Luso Films'"
      - comma: ','
      - column_reference:
          naked_identifier: did
      - data_type:
          keyword: integer
      - column_constraint_segment:
          keyword: DEFAULT
          function:
            function_name:
              function_name_identifier: nextval
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  quoted_literal: "'distributors_serial'"
                end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: modtime
      - data_type:
          datetime_type_identifier:
            keyword: timestamp
      - column_constraint_segment:
          keyword: DEFAULT
          bare_function: current_timestamp
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: distributors
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: did
      - data_type:
          keyword: integer
      - column_constraint_segment:
        - keyword: CONSTRAINT
        - object_reference:
            naked_identifier: no_null
        - keyword: NOT
        - keyword: 'NULL'
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '40'
              end_bracket: )
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: distributors
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: did
      - data_type:
          keyword: integer
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '40'
              end_bracket: )
      - column_constraint_segment:
          keyword: UNIQUE
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: distributors
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: did
      - data_type:
          keyword: integer
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '40'
              end_bracket: )
      - comma: ','
      - table_constraint:
          keyword: UNIQUE
          bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: name
            end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: distributors
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: did
      - data_type:
          keyword: integer
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '40'
              end_bracket: )
      - comma: ','
      - table_constraint:
          keyword: UNIQUE
          bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: name
            end_bracket: )
          index_parameters:
            keyword: WITH
            definition_parameters:
              bracketed:
                start_bracket: (
                definition_parameter:
                  properties_naked_identifier: fillfactor
                  comparison_operator:
                    raw_comparison_operator: '='
                  numeric_literal: '70'
                end_bracket: )
      - end_bracket: )
    - keyword: WITH
    - relation_options:
        bracketed:
          start_bracket: (
          relation_option:
            properties_naked_identifier: fillfactor
            comparison_operator:
              raw_comparison_operator: '='
            numeric_literal: '70'
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: cinemas
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: id
      - data_type:
          keyword: serial
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: text
      - comma: ','
      - column_reference:
          naked_identifier: location
      - data_type:
          keyword: text
      - end_bracket: )
    - keyword: TABLESPACE
    - tablespace_reference:
        naked_identifier: diskvol1
- statement_terminator: ;
- statement:
    create_type_statement:
    - keyword: CREATE
    - keyword: TYPE
    - object_reference:
        naked_identifier: employee_type
    - keyword: AS
    - bracketed:
      - start_bracket: (
      - word: name
      - word: text
      - comma: ','
      - word: salary
      - word: numeric
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: employees
    - keyword: OF
    - parameter: employee_type
    - bracketed:
      - start_bracket: (
      - table_constraint:
        - keyword: PRIMARY
        - keyword: KEY
        - bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: name
            end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: salary
      - keyword: WITH
      - keyword: OPTIONS
      - column_constraint_segment:
          keyword: DEFAULT
          numeric_literal: '1000'
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: measurement
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: logdate
      - data_type:
          datetime_type_identifier:
            keyword: date
      - column_constraint_segment:
        - keyword: not
        - keyword: 'null'
      - comma: ','
      - column_reference:
          naked_identifier: peaktemp
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          naked_identifier: unitsales
      - data_type:
          keyword: int
      - end_bracket: )
    - keyword: PARTITION
    - keyword: BY
    - keyword: RANGE
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: logdate
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: measurement_year_month
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: logdate
      - data_type:
          datetime_type_identifier:
            keyword: date
      - column_constraint_segment:
        - keyword: not
        - keyword: 'null'
      - comma: ','
      - column_reference:
          naked_identifier: peaktemp
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          naked_identifier: unitsales
      - data_type:
          keyword: int
      - end_bracket: )
    - keyword: PARTITION
    - keyword: BY
    - keyword: RANGE
    - bracketed:
      - start_bracket: (
      - function:
          function_name:
            function_name_identifier: EXTRACT
          function_contents:
            bracketed:
              start_bracket: (
              date_part: YEAR
              keyword: FROM
              expression:
                column_reference:
                  naked_identifier: logdate
              end_bracket: )
      - comma: ','
      - function:
          function_name:
            function_name_identifier: EXTRACT
          function_contents:
            bracketed:
              start_bracket: (
              date_part: MONTH
              keyword: FROM
              expression:
                column_reference:
                  naked_identifier: logdate
              end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: cities
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: city_id
      - data_type:
          keyword: bigserial
      - column_constraint_segment:
        - keyword: not
        - keyword: 'null'
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: text
      - column_constraint_segment:
        - keyword: not
        - keyword: 'null'
      - comma: ','
      - column_reference:
          naked_identifier: population
      - data_type:
          keyword: bigint
      - end_bracket: )
    - keyword: PARTITION
    - keyword: BY
    - keyword: LIST
    - bracketed:
        start_bracket: (
        function:
          function_name:
            function_name_identifier: left
          function_contents:
            bracketed:
            - start_bracket: (
            - expression:
                function:
                  function_name:
                    function_name_identifier: lower
                  function_contents:
                    bracketed:
                      start_bracket: (
                      expression:
                        column_reference:
                          naked_identifier: name
                      end_bracket: )
            - comma: ','
            - expression:
                numeric_literal: '1'
            - end_bracket: )
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: orders
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: order_id
      - data_type:
          keyword: bigint
      - column_constraint_segment:
        - keyword: not
        - keyword: 'null'
      - comma: ','
      - column_reference:
          naked_identifier: cust_id
      - data_type:
          keyword: bigint
      - column_constraint_segment:
        - keyword: not
        - keyword: 'null'
      - comma: ','
      - column_reference:
          naked_identifier: status
      - data_type:
          keyword: text
      - end_bracket: )
    - keyword: PARTITION
    - keyword: BY
    - keyword: HASH
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: order_id
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: measurement_y2016m07
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: measurement
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: unitsales
        column_constraint_segment:
          keyword: DEFAULT
          numeric_literal: '0'
        end_bracket: )
    - keyword: FOR
    - keyword: VALUES
    - partition_bound_spec:
      - keyword: FROM
      - bracketed:
          start_bracket: (
          expression:
            quoted_literal: "'2016-07-01'"
          end_bracket: )
      - keyword: TO
      - bracketed:
          start_bracket: (
          expression:
            quoted_literal: "'2016-08-01'"
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: measurement_ym_older
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: measurement_year_month
    - keyword: FOR
    - keyword: VALUES
    - partition_bound_spec:
      - keyword: FROM
      - bracketed:
        - start_bracket: (
        - expression:
            column_reference:
              naked_identifier: MINVALUE
        - comma: ','
        - expression:
            column_reference:
              naked_identifier: MINVALUE
        - end_bracket: )
      - keyword: TO
      - bracketed:
        - start_bracket: (
        - expression:
            numeric_literal: '2016'
        - comma: ','
        - expression:
            numeric_literal: '11'
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: measurement_ym_y2016m11
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: measurement_year_month
    - keyword: FOR
    - keyword: VALUES
    - partition_bound_spec:
      - keyword: FROM
      - bracketed:
        - start_bracket: (
        - expression:
            numeric_literal: '2016'
        - comma: ','
        - expression:
            numeric_literal: '11'
        - end_bracket: )
      - keyword: TO
      - bracketed:
        - start_bracket: (
        - expression:
            numeric_literal: '2016'
        - comma: ','
        - expression:
            numeric_literal: '12'
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: measurement_ym_y2016m12
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: measurement_year_month
    - keyword: FOR
    - keyword: VALUES
    - partition_bound_spec:
      - keyword: FROM
      - bracketed:
        - start_bracket: (
        - expression:
            numeric_literal: '2016'
        - comma: ','
        - expression:
            numeric_literal: '12'
        - end_bracket: )
      - keyword: TO
      - bracketed:
        - start_bracket: (
        - expression:
            numeric_literal: '2017'
        - comma: ','
        - expression:
            numeric_literal: '01'
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: measurement_ym_y2017m01
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: measurement_year_month
    - keyword: FOR
    - keyword: VALUES
    - partition_bound_spec:
      - keyword: FROM
      - bracketed:
        - start_bracket: (
        - expression:
            numeric_literal: '2017'
        - comma: ','
        - expression:
            numeric_literal: '01'
        - end_bracket: )
      - keyword: TO
      - bracketed:
        - start_bracket: (
        - expression:
            numeric_literal: '2017'
        - comma: ','
        - expression:
            numeric_literal: '02'
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: cities_ab
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: cities
    - bracketed:
        start_bracket: (
        table_constraint:
        - keyword: CONSTRAINT
        - object_reference:
            naked_identifier: city_id_nonzero
        - keyword: CHECK
        - bracketed:
            start_bracket: (
            expression:
              column_reference:
                naked_identifier: city_id
              comparison_operator:
              - raw_comparison_operator: '!'
              - raw_comparison_operator: '='
              numeric_literal: '0'
            end_bracket: )
        end_bracket: )
    - keyword: FOR
    - keyword: VALUES
    - partition_bound_spec:
        keyword: IN
        bracketed:
        - start_bracket: (
        - expression:
            quoted_literal: "'a'"
        - comma: ','
        - expression:
            quoted_literal: "'b'"
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: cities_ab
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: cities
    - bracketed:
        start_bracket: (
        table_constraint:
        - keyword: CONSTRAINT
        - object_reference:
            naked_identifier: city_id_nonzero
        - keyword: CHECK
        - bracketed:
            start_bracket: (
            expression:
              column_reference:
                naked_identifier: city_id
              comparison_operator:
              - raw_comparison_operator: '!'
              - raw_comparison_operator: '='
              numeric_literal: '0'
            end_bracket: )
        end_bracket: )
    - keyword: FOR
    - keyword: VALUES
    - partition_bound_spec:
        keyword: IN
        bracketed:
        - start_bracket: (
        - expression:
            quoted_literal: "'a'"
        - comma: ','
        - expression:
            quoted_literal: "'b'"
        - end_bracket: )
    - keyword: PARTITION
    - keyword: BY
    - keyword: RANGE
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: population
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: cities_ab_10000_to_100000
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: cities_ab
    - keyword: FOR
    - keyword: VALUES
    - partition_bound_spec:
      - keyword: FROM
      - bracketed:
          start_bracket: (
          expression:
            numeric_literal: '10000'
          end_bracket: )
      - keyword: TO
      - bracketed:
          start_bracket: (
          expression:
            numeric_literal: '100000'
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: orders_p1
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: orders
    - keyword: FOR
    - keyword: VALUES
    - partition_bound_spec:
        keyword: WITH
        bracketed:
        - start_bracket: (
        - keyword: MODULUS
        - numeric_literal: '4'
        - comma: ','
        - keyword: REMAINDER
        - numeric_literal: '0'
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: orders_p2
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: orders
    - keyword: FOR
    - keyword: VALUES
    - partition_bound_spec:
        keyword: WITH
        bracketed:
        - start_bracket: (
        - keyword: MODULUS
        - numeric_literal: '4'
        - comma: ','
        - keyword: REMAINDER
        - numeric_literal: '1'
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: orders_p3
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: orders
    - keyword: FOR
    - keyword: VALUES
    - partition_bound_spec:
        keyword: WITH
        bracketed:
        - start_bracket: (
        - keyword: MODULUS
        - numeric_literal: '4'
        - comma: ','
        - keyword: REMAINDER
        - numeric_literal: '2'
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: orders_p4
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: orders
    - keyword: FOR
    - keyword: VALUES
    - partition_bound_spec:
        keyword: WITH
        bracketed:
        - start_bracket: (
        - keyword: MODULUS
        - numeric_literal: '4'
        - comma: ','
        - keyword: REMAINDER
        - numeric_literal: '3'
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: cities_partdef
    - keyword: PARTITION
    - keyword: OF
    - table_reference:
        naked_identifier: cities
    - keyword: DEFAULT
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: UNLOGGED
    - keyword: TABLE
    - table_reference:
        naked_identifier: staging
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: event_type
      - data_type:
          keyword: INTEGER
      - comma: ','
      - column_reference:
          naked_identifier: event_time
      - data_type:
          datetime_type_identifier:
            keyword: TIMESTAMP
      - comma: ','
      - column_reference:
          naked_identifier: user_email
      - data_type:
          keyword: VARCHAR
      - comma: ','
      - column_reference:
          naked_identifier: phone_number
      - data_type:
          keyword: VARCHAR
      - comma: ','
      - column_reference:
          naked_identifier: processing_date
      - data_type:
          datetime_type_identifier:
            keyword: DATE
      - comma: ','
      - table_constraint:
        - keyword: PRIMARY
        - keyword: KEY
        - bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: event_type
          - comma: ','
          - column_reference:
              naked_identifier: event_time
          - comma: ','
          - column_reference:
              naked_identifier: user_email
          - comma: ','
          - column_reference:
              naked_identifier: phone_number
          - comma: ','
          - column_reference:
              naked_identifier: processing_date
          - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: measurement
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: city_id
      - data_type:
          keyword: int
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - comma: ','
      - column_reference:
          naked_identifier: logdate
      - data_type:
          datetime_type_identifier:
            keyword: date
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - comma: ','
      - column_reference:
          naked_identifier: peaktemp
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          naked_identifier: unitsales
      - data_type:
          keyword: int
      - end_bracket: )
    - keyword: PARTITION
    - keyword: BY
    - keyword: RANGE
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: logdate
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: public
      - dot: .
      - naked_identifier: public
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: id
      - data_type:
          keyword: serial
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: text
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - comma: ','
      - column_reference:
          naked_identifier: group_name
      - data_type:
          keyword: text
      - column_constraint_segment:
          keyword: 'NULL'
      - comma: ','
      - column_reference:
          naked_identifier: cluster_id
      - data_type:
          keyword: int8
      - column_constraint_segment:
          keyword: 'NULL'
      - comma: ','
      - column_reference:
          naked_identifier: date_created
      - data_type:
          datetime_type_identifier:
            keyword: timestamp
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - column_constraint_segment:
          keyword: DEFAULT
          bare_function: CURRENT_TIMESTAMP
      - comma: ','
      - column_reference:
          naked_identifier: date_updated
      - data_type:
          datetime_type_identifier:
            keyword: timestamp
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - column_constraint_segment:
          keyword: DEFAULT
          bare_function: CURRENT_TIMESTAMP
      - comma: ','
      - column_reference:
          naked_identifier: operation_id
      - data_type:
          keyword: int4
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - column_constraint_segment:
          keyword: DEFAULT
          cast_expression:
            quoted_literal: "'-1'"
            casting_operator: '::'
            data_type:
              keyword: integer
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: main
      - dot: .
      - naked_identifier: test_table
    - bracketed:
      - start_bracket: (
      - column_reference:
          quoted_identifier: '"col1"'
      - data_type:
        - keyword: character
        - keyword: varying
        - bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '40'
              end_bracket: )
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - comma: ','
      - column_reference:
          quoted_identifier: '"col2"'
      - data_type:
        - keyword: double
        - keyword: precision
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: groups
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: group_id
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - column_constraint_segment:
        - keyword: generated
        - keyword: BY
        - keyword: DEFAULT
        - keyword: AS
        - keyword: IDENTITY
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: users
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: user_id
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - column_constraint_segment:
        - keyword: generated
        - keyword: BY
        - keyword: DEFAULT
        - keyword: AS
        - keyword: IDENTITY
      - comma: ','
      - column_reference:
          naked_identifier: group_id
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: REFERENCES
        - table_reference:
            naked_identifier: groups
        - bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: group_id
            end_bracket: )
        - keyword: 'ON'
        - keyword: DELETE
        - keyword: CASCADE
      - comma: ','
      - column_reference:
          naked_identifier: domain_id
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: REFERENCES
        - table_reference:
            naked_identifier: groups
        - bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: group_id
            end_bracket: )
        - keyword: 'ON'
        - keyword: UPDATE
        - keyword: RESTRICT
      - comma: ','
      - column_reference:
          naked_identifier: other_id
      - data_type:
          keyword: INTEGER
      - column_constraint_segment:
        - keyword: REFERENCES
        - table_reference:
            naked_identifier: groups
        - bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: group_id
            end_bracket: )
        - keyword: MATCH
        - keyword: SIMPLE
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: orders
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: id
      - data_type:
          keyword: bigint
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - column_constraint_segment:
          keyword: DEFAULT
          function:
            function_name:
              function_name_identifier: NEXTVAL
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  cast_expression:
                    quoted_literal: "'orders_id_seq'"
                    casting_operator: '::'
                    data_type:
                      data_type_identifier: regclass
                end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: constraint_collate_constraints
      - data_type:
          keyword: text
      - column_constraint_segment:
          keyword: UNIQUE
      - keyword: COLLATE
      - collation_reference:
          naked_identifier: numeric
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: constraints_collate
      - data_type:
          keyword: text
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - column_constraint_segment:
          keyword: UNIQUE
      - keyword: COLLATE
      - collation_reference:
          naked_identifier: numeric
      - comma: ','
      - column_reference:
          naked_identifier: collate_constraints
      - data_type:
          keyword: text
      - keyword: COLLATE
      - collation_reference:
          naked_identifier: numeric
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - column_constraint_segment:
          keyword: UNIQUE
      - comma: ','
      - column_reference:
          naked_identifier: nulls_distinct
      - data_type:
          keyword: text
      - column_constraint_segment:
        - keyword: UNIQUE
        - keyword: NULLS
        - keyword: DISTINCT
      - comma: ','
      - column_reference:
          naked_identifier: nulls_not_distinct
      - data_type:
          keyword: text
      - column_constraint_segment:
        - keyword: UNIQUE
        - keyword: NULLS
        - keyword: NOT
        - keyword: DISTINCT
      - comma: ','
      - column_reference:
          naked_identifier: everything
      - data_type:
          keyword: text
      - column_constraint_segment:
        - keyword: UNIQUE
        - keyword: NULLS
        - keyword: DISTINCT
        - keyword: WITH
        - definition_parameters:
            bracketed:
            - start_bracket: (
            - definition_parameter:
                properties_naked_identifier: arg1
                comparison_operator:
                  raw_comparison_operator: '='
                numeric_literal: '3'
            - comma: ','
            - definition_parameter:
                properties_naked_identifier: arg5
                comparison_operator:
                  raw_comparison_operator: '='
                quoted_literal: "'str'"
            - end_bracket: )
        - keyword: USING
        - keyword: INDEX
        - keyword: TABLESPACE
        - tablespace_reference:
            naked_identifier: tblspace
      - keyword: COLLATE
      - collation_reference:
          naked_identifier: numeric
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: primary_key_options
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: everything
      - data_type:
          keyword: int
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
        - keyword: WITH
        - definition_parameters:
            bracketed:
            - start_bracket: (
            - definition_parameter:
                properties_naked_identifier: arg1
                comparison_operator:
                  raw_comparison_operator: '='
                numeric_literal: '3'
            - comma: ','
            - definition_parameter:
                properties_naked_identifier: arg5
                comparison_operator:
                  raw_comparison_operator: '='
                quoted_literal: "'str'"
            - end_bracket: )
        - keyword: USING
        - keyword: INDEX
        - keyword: TABLESPACE
        - tablespace_reference:
            naked_identifier: tblspace
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: quotas
      - dot: .
      - naked_identifier: usage
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: foo
        data_type:
          keyword: int
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
      - naked_identifier: quotas
      - dot: .
      - naked_identifier: my_table
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: usage
        data_type:
          keyword: int
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: with_constraints1
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col_1
      - data_type:
          keyword: boolean
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - column_constraint_segment:
          keyword: DEFAULT
          boolean_literal: 'false'
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: with_constraints2
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col_1
      - data_type:
          keyword: boolean
      - column_constraint_segment:
          keyword: DEFAULT
          boolean_literal: 'false'
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: with_constraints3
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col_1
      - data_type:
          keyword: int
      - column_constraint_segment:
          keyword: DEFAULT
          expression:
          - bracketed:
              start_bracket: (
              expression:
              - numeric_literal: '1'
              - binary_operator: +
              - numeric_literal: '2'
              end_bracket: )
          - binary_operator: '*'
          - bracketed:
              start_bracket: (
              expression:
              - numeric_literal: '3'
              - binary_operator: +
              - numeric_literal: '4'
              end_bracket: )
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: with_constraints33
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col_1
      - data_type:
          keyword: int
      - column_constraint_segment:
          keyword: DEFAULT
          expression:
          - numeric_literal: '1'
          - binary_operator: +
          - numeric_literal: '2'
          - binary_operator: '*'
          - numeric_literal: '3'
          - binary_operator: +
          - numeric_literal: '4'
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: with_constraints4
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col_1
      - data_type:
          keyword: int
      - column_constraint_segment:
          keyword: DEFAULT
          expression:
            bracketed:
              start_bracket: (
              expression:
              - numeric_literal: '1'
              - binary_operator: +
              - numeric_literal: '2'
              - binary_operator: '*'
              - numeric_literal: '3'
              - binary_operator: +
              - numeric_literal: '4'
              end_bracket: )
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: with_constraints5
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col_1
      - data_type:
          keyword: bool
      - column_constraint_segment:
          keyword: DEFAULT
          expression:
            bracketed:
              start_bracket: (
              expression:
              - numeric_literal: '1'
              - keyword: NOT
              - keyword: IN
              - bracketed:
                - start_bracket: (
                - numeric_literal: '3'
                - comma: ','
                - numeric_literal: '4'
                - end_bracket: )
              end_bracket: )
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: with_constraints6
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col_1
      - data_type:
          keyword: bool
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - column_constraint_segment:
          keyword: DEFAULT
          expression:
            bracketed:
              start_bracket: (
              expression:
              - numeric_literal: '5'
              - keyword: NOT
              - keyword: IN
              - bracketed:
                - start_bracket: (
                - numeric_literal: '5'
                - comma: ','
                - numeric_literal: '6'
                - end_bracket: )
              end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: test_with_storage_param
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: col_1
        data_type:
          keyword: boolean
        end_bracket: )
    - keyword: WITH
    - relation_options:
        bracketed:
          start_bracket: (
          relation_option:
            properties_naked_identifier: autovacuum_enabled
            comparison_operator:
              raw_comparison_operator: '='
            boolean_literal: 'true'
          end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: test_with_storage_params
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: col_1
        data_type:
          keyword: boolean
        end_bracket: )
    - keyword: WITH
    - relation_options:
        bracketed:
        - start_bracket: (
        - relation_option:
            properties_naked_identifier: autovacuum_enabled
            comparison_operator:
              raw_comparison_operator: '='
            boolean_literal: 'true'
        - comma: ','
        - relation_option:
            properties_naked_identifier: vacuum_truncate
            comparison_operator:
              raw_comparison_operator: '='
            boolean_literal: 'false'
        - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: tbl
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col_char_varying_unlimited
      - data_type:
        - keyword: character
        - keyword: varying
      - comma: ','
      - column_reference:
          naked_identifier: col_char_varying_limited
      - data_type:
        - keyword: character
        - keyword: varying
        - bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '50'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: col_varchar_unlimited
      - data_type:
          keyword: varchar
      - comma: ','
      - column_reference:
          naked_identifier: col_varchar_limited
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '50'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: col_character_default
      - data_type:
          keyword: character
      - comma: ','
      - column_reference:
          naked_identifier: col_character_specified
      - data_type:
          keyword: character
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '50'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: col_char_default
      - data_type:
          keyword: char
      - comma: ','
      - column_reference:
          naked_identifier: col_char_specified
      - data_type:
          keyword: character
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '50'
              end_bracket: )
      - comma: ','
      - column_reference:
          naked_identifier: col_text
      - data_type:
          keyword: text
      - comma: ','
      - column_reference:
          naked_identifier: col_system_char
      - data_type:
          quoted_identifier: '"char"'
      - comma: ','
      - column_reference:
          naked_identifier: col_name
      - data_type:
          data_type_identifier: name
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: reservation
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: during
        data_type:
          keyword: tsrange
        comma: ','
        table_constraint:
        - keyword: EXCLUDE
        - keyword: USING
        - index_access_method:
            naked_identifier: gist
        - bracketed:
            start_bracket: (
            exclusion_constraint_element:
              index_element:
                column_reference:
                  naked_identifier: during
              keyword: WITH
              comparison_operator:
              - ampersand: '&'
              - ampersand: '&'
            end_bracket: )
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: room_reservation
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: room
      - data_type:
          keyword: text
      - comma: ','
      - column_reference:
          naked_identifier: during
      - data_type:
          keyword: tsrange
      - comma: ','
      - table_constraint:
        - keyword: EXCLUDE
        - keyword: USING
        - index_access_method:
            naked_identifier: gist
        - bracketed:
          - start_bracket: (
          - exclusion_constraint_element:
              index_element:
                column_reference:
                  naked_identifier: room
              keyword: WITH
              comparison_operator:
                raw_comparison_operator: '='
          - comma: ','
          - exclusion_constraint_element:
              index_element:
                column_reference:
                  naked_identifier: during
              keyword: WITH
              comparison_operator:
              - ampersand: '&'
              - ampersand: '&'
          - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: no_using
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: field
        data_type:
          keyword: text
        comma: ','
        table_constraint:
        - keyword: EXCLUDE
        - bracketed:
            start_bracket: (
            exclusion_constraint_element:
              index_element:
                column_reference:
                  naked_identifier: field
              keyword: WITH
              comparison_operator:
                raw_comparison_operator: '='
            end_bracket: )
        - keyword: NOT
        - keyword: DEFERRABLE
        - keyword: INITIALLY
        - keyword: IMMEDIATE
        - keyword: 'NO'
        - keyword: INHERIT
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: many_options
    - bracketed:
        start_bracket: (
        column_reference:
          naked_identifier: field
        data_type:
          keyword: text
        comma: ','
        table_constraint:
        - keyword: EXCLUDE
        - keyword: USING
        - index_access_method:
            naked_identifier: gist
        - bracketed:
          - start_bracket: (
          - exclusion_constraint_element:
              index_element:
                column_reference:
                  naked_identifier: one
              keyword: WITH
              comparison_operator:
                raw_comparison_operator: '='
          - comma: ','
          - exclusion_constraint_element:
              index_element:
                column_reference:
                  naked_identifier: nulls_opclass
                index_element_options:
                  operator_class_reference:
                    naked_identifier: nulls
              keyword: WITH
              comparison_operator:
                raw_comparison_operator: '='
          - comma: ','
          - exclusion_constraint_element:
              index_element:
                column_reference:
                  naked_identifier: nulls_last
                index_element_options:
                - keyword: NULLS
                - keyword: LAST
              keyword: WITH
              comparison_operator:
                raw_comparison_operator: '='
          - comma: ','
          - exclusion_constraint_element:
              index_element:
                column_reference:
                  naked_identifier: two
                index_element_options:
                - keyword: COLLATE
                - collation_reference:
                    quoted_identifier: '"en-US"'
                - operator_class_reference:
                    naked_identifier: opclass
                - relation_options:
                    bracketed:
                    - start_bracket: (
                    - relation_option:
                        properties_naked_identifier: opt1
                    - comma: ','
                    - relation_option:
                        properties_naked_identifier: opt2
                        comparison_operator:
                          raw_comparison_operator: '='
                        numeric_literal: '5'
                    - comma: ','
                    - relation_option:
                        properties_naked_identifier: opt3
                        comparison_operator:
                          raw_comparison_operator: '='
                        quoted_literal: "'str'"
                    - comma: ','
                    - relation_option:
                      - properties_naked_identifier: ns
                      - dot: .
                      - properties_naked_identifier: opt4
                    - comma: ','
                    - relation_option:
                      - properties_naked_identifier: ns
                      - dot: .
                      - properties_naked_identifier: opt5
                      - comparison_operator:
                          raw_comparison_operator: '='
                      - numeric_literal: '6'
                    - comma: ','
                    - relation_option:
                      - properties_naked_identifier: ns
                      - dot: .
                      - properties_naked_identifier: opt6
                      - comparison_operator:
                          raw_comparison_operator: '='
                      - quoted_literal: "'str'"
                    - comma: ','
                    - relation_option:
                      - properties_naked_identifier: opt7
                      - comparison_operator:
                          raw_comparison_operator: '='
                      - properties_naked_identifier: ASC
                    - end_bracket: )
                - keyword: ASC
                - keyword: NULLS
                - keyword: FIRST
              keyword: WITH
              comparison_operator:
                raw_comparison_operator: '='
          - comma: ','
          - exclusion_constraint_element:
              index_element:
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      naked_identifier: two
                    binary_operator: +
                    numeric_literal: '5'
                  end_bracket: )
              keyword: WITH
              comparison_operator:
                raw_comparison_operator: '='
          - comma: ','
          - exclusion_constraint_element:
              index_element:
                function:
                  function_name:
                    function_name_identifier: myfunc
                  function_contents:
                    bracketed:
                    - start_bracket: (
                    - expression:
                        column_reference:
                          naked_identifier: a
                    - comma: ','
                    - expression:
                        column_reference:
                          naked_identifier: b
                    - end_bracket: )
              keyword: WITH
              comparison_operator:
                raw_comparison_operator: '='
          - comma: ','
          - exclusion_constraint_element:
              index_element:
                function:
                  function_name:
                    function_name_identifier: myfunc_opclass
                  function_contents:
                    bracketed:
                    - start_bracket: (
                    - expression:
                        column_reference:
                          naked_identifier: a
                    - comma: ','
                    - expression:
                        column_reference:
                          naked_identifier: b
                    - end_bracket: )
                index_element_options:
                  operator_class_reference:
                    naked_identifier: fop
                  relation_options:
                    bracketed:
                    - start_bracket: (
                    - relation_option:
                        properties_naked_identifier: opt
                        comparison_operator:
                          raw_comparison_operator: '='
                        numeric_literal: '1'
                    - comma: ','
                    - relation_option:
                        properties_naked_identifier: foo
                        comparison_operator:
                          raw_comparison_operator: '='
                        numeric_literal: '2'
                    - end_bracket: )
              keyword: WITH
              comparison_operator:
                raw_comparison_operator: '='
          - comma: ','
          - exclusion_constraint_element:
              index_element:
                column_reference:
                  naked_identifier: only_opclass
                index_element_options:
                  operator_class_reference:
                    naked_identifier: opclass
              keyword: WITH
              comparison_operator:
                raw_comparison_operator: '='
          - comma: ','
          - exclusion_constraint_element:
              index_element:
                column_reference:
                  naked_identifier: desc_order
                index_element_options:
                  keyword: DESC
              keyword: WITH
              comparison_operator:
                raw_comparison_operator: '='
          - end_bracket: )
        - index_parameters:
          - keyword: INCLUDE
          - bracketed:
            - start_bracket: (
            - column_reference:
                naked_identifier: a
            - comma: ','
            - column_reference:
                naked_identifier: b
            - end_bracket: )
          - keyword: WITH
          - definition_parameters:
              bracketed:
              - start_bracket: (
              - definition_parameter:
                  properties_naked_identifier: idx_num
                  comparison_operator:
                    raw_comparison_operator: '='
                  numeric_literal: '5'
              - comma: ','
              - definition_parameter:
                  properties_naked_identifier: idx_str
                  comparison_operator:
                    raw_comparison_operator: '='
                  quoted_literal: "'idx_value'"
              - comma: ','
              - definition_parameter:
                - properties_naked_identifier: idx_kw
                - comparison_operator:
                    raw_comparison_operator: '='
                - properties_naked_identifier: DESC
              - end_bracket: )
          - keyword: USING
          - keyword: INDEX
          - keyword: TABLESPACE
          - tablespace_reference:
              naked_identifier: tblspc
        - keyword: WHERE
        - bracketed:
            start_bracket: (
            expression:
              column_reference:
                naked_identifier: field
              comparison_operator:
              - raw_comparison_operator: '!'
              - raw_comparison_operator: '='
              quoted_literal: "'def'"
            end_bracket: )
        - keyword: DEFERRABLE
        - keyword: INITIALLY
        - keyword: DEFERRED
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: example_table
    - bracketed:
        start_bracket: (
        end_bracket: )
    - keyword: INHERITS
    - bracketed:
        start_bracket: (
        table_reference:
          naked_identifier: parent_table
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        naked_identifier: table2
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: int
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - comma: ','
      - column_reference:
          naked_identifier: col3
      - data_type:
          keyword: int
      - comma: ','
      - table_constraint:
        - keyword: FOREIGN
        - keyword: KEY
        - bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: col1
          - comma: ','
          - column_reference:
              naked_identifier: col2
          - end_bracket: )
        - keyword: REFERENCES
        - table_reference:
            naked_identifier: table1
        - bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: col1
          - comma: ','
          - column_reference:
              naked_identifier: col2
          - end_bracket: )
        - keyword: 'ON'
        - keyword: DELETE
        - keyword: SET
        - keyword: 'NULL'
        - bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: col1
            end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        naked_identifier: table2
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - data_type:
          keyword: int
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - data_type:
          keyword: int
      - column_constraint_segment:
        - keyword: NOT
        - keyword: 'NULL'
      - comma: ','
      - column_reference:
          naked_identifier: col3
      - data_type:
          keyword: int
      - comma: ','
      - table_constraint:
        - keyword: FOREIGN
        - keyword: KEY
        - bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: col1
          - comma: ','
          - column_reference:
              naked_identifier: col2
          - end_bracket: )
        - keyword: REFERENCES
        - table_reference:
            naked_identifier: table1
        - bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: col1
          - comma: ','
          - column_reference:
              naked_identifier: col2
          - end_bracket: )
        - keyword: 'ON'
        - keyword: DELETE
        - keyword: SET
        - keyword: DEFAULT
        - bracketed:
            start_bracket: (
            column_reference:
              naked_identifier: col1
            end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: myschema
      - dot: .
      - naked_identifier: user
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: user_id
      - data_type:
          keyword: bigint
      - column_constraint_segment:
        - keyword: PRIMARY
        - keyword: KEY
      - comma: ','
      - column_reference:
          naked_identifier: name
      - data_type:
          keyword: varchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              numeric_literal: '40'
              end_bracket: )
      - end_bracket: )
- statement_terminator: ;
