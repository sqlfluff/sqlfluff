# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 714593d027c63bf09d4fa6599019a620b77fd838325e58faf48371efcb318a84
file:
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: start_date
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: end_date
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test_overlaps
      where_clause:
        keyword: where
        expression:
          overlaps_clause:
          - bracketed:
            - start_bracket: (
            - column_reference:
                naked_identifier: start_date
            - comma: ','
            - column_reference:
                naked_identifier: end_date
            - end_bracket: )
          - keyword: overlaps
          - bracketed:
            - start_bracket: (
            - datetime_literal:
                datetime_type_identifier:
                  keyword: DATE
                quoted_literal: "'2023-02-15'"
            - comma: ','
            - datetime_literal:
                datetime_type_identifier:
                  keyword: DATE
                quoted_literal: "'2023-03-15'"
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: start_date
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: end_date
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test_overlaps
      where_clause:
        keyword: where
        expression:
          overlaps_clause:
          - bracketed:
            - start_bracket: (
            - column_reference:
                naked_identifier: start_date
            - comma: ','
            - column_reference:
                naked_identifier: end_date
            - end_bracket: )
          - keyword: overlaps
          - bracketed:
            - start_bracket: (
            - datetime_literal:
                quoted_literal: "'2023-02-15'"
            - comma: ','
            - datetime_literal:
                quoted_literal: "'2023-03-15'"
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - naked_identifier: t1
          - dot: .
          - naked_identifier: start_date
      - comma: ','
      - select_clause_element:
          column_reference:
          - naked_identifier: t1
          - dot: .
          - naked_identifier: end_date
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test_overlaps1
            alias_expression:
              keyword: AS
              naked_identifier: t1
          join_clause:
          - keyword: LEFT
          - keyword: JOIN
          - from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: test_overlaps2
              alias_expression:
                keyword: AS
                naked_identifier: t2
      where_clause:
        keyword: WHERE
        expression:
          overlaps_clause:
          - bracketed:
            - start_bracket: (
            - column_reference:
              - naked_identifier: t1
              - dot: .
              - naked_identifier: start_date
            - comma: ','
            - column_reference:
              - naked_identifier: t1
              - dot: .
              - naked_identifier: end_date
            - end_bracket: )
          - keyword: OVERLAPS
          - bracketed:
            - start_bracket: (
            - column_reference:
              - naked_identifier: t2
              - dot: .
              - naked_identifier: start_date
            - comma: ','
            - column_reference:
              - naked_identifier: t2
              - dot: .
              - naked_identifier: end_date
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: start_date
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: end_date
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test_overlaps
      where_clause:
        keyword: WHERE
        expression:
          overlaps_clause:
          - bracketed:
            - start_bracket: (
            - column_reference:
                naked_identifier: start_date
            - comma: ','
            - column_reference:
                naked_identifier: end_date
            - end_bracket: )
          - keyword: OVERLAPS
          - bracketed:
            - start_bracket: (
            - cast_expression:
                quoted_literal: "'2023-12-30T00:00:00'"
                casting_operator: '::'
                data_type:
                  datetime_type_identifier:
                    keyword: TIMESTAMP
            - comma: ','
            - cast_expression:
                quoted_literal: "'2024-01-14T13:01:39.884877'"
                casting_operator: '::'
                data_type:
                  datetime_type_identifier:
                    keyword: TIMESTAMP
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: start_date
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: end_date
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test_overlaps
      where_clause:
        keyword: WHERE
        expression:
          overlaps_clause:
          - bracketed:
            - start_bracket: (
            - cast_expression:
                quoted_literal: "'2023-12-30T00:00:00'"
                casting_operator: '::'
                data_type:
                  datetime_type_identifier:
                    keyword: TIMESTAMP
            - comma: ','
            - cast_expression:
                quoted_literal: "'2024-01-14T13:01:39.884877'"
                casting_operator: '::'
                data_type:
                  datetime_type_identifier:
                    keyword: TIMESTAMP
            - end_bracket: )
          - keyword: OVERLAPS
          - bracketed:
            - start_bracket: (
            - column_reference:
                naked_identifier: start_date
            - comma: ','
            - column_reference:
                naked_identifier: end_date
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: start_date
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: end_date
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test_overlaps
      where_clause:
        keyword: WHERE
        expression:
          overlaps_clause:
          - bracketed:
            - start_bracket: (
            - column_reference:
                naked_identifier: start_date
            - comma: ','
            - column_reference:
                naked_identifier: end_date
            - end_bracket: )
          - keyword: OVERLAPS
          - bracketed:
            - start_bracket: (
            - datetime_literal:
                datetime_type_identifier:
                  keyword: DATE
                quoted_literal: "'2023-12-30'"
            - comma: ','
            - datetime_literal:
                datetime_type_identifier:
                  keyword: INTERVAL
                quoted_literal: "'2 HOURS'"
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: start_date
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: end_date
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test_overlaps
      where_clause:
        keyword: WHERE
        expression:
          overlaps_clause:
          - bracketed:
            - start_bracket: (
            - datetime_literal:
                datetime_type_identifier:
                  keyword: DATE
                quoted_literal: "'2023-12-30'"
            - comma: ','
            - datetime_literal:
                datetime_type_identifier:
                  keyword: DATE
                quoted_literal: "'2024-01-14'"
            - end_bracket: )
          - keyword: OVERLAPS
          - bracketed:
            - start_bracket: (
            - column_reference:
                naked_identifier: start_date
            - comma: ','
            - column_reference:
                naked_identifier: end_date
            - end_bracket: )
- statement_terminator: ;
