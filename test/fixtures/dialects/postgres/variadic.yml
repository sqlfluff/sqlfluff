# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 92b2cf467675139e3bc7ac853e3792c534f91964fa86bc59d627204c88e096a4
file:
- statement:
    create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: mleast
    - function_parameter_list:
        bracketed:
          start_bracket: (
          keyword: VARIADIC
          parameter: arr
          data_type:
            keyword: numeric
            start_square_bracket: '['
            end_square_bracket: ']'
          end_bracket: )
    - keyword: RETURNS
    - data_type:
        keyword: numeric
    - function_definition:
        keyword: AS
        quoted_literal: "$$\n    SELECT min($1[i]) FROM generate_subscripts($1, 1)\
          \ g(i);\n$$"
        language_clause:
          keyword: LANGUAGE
          naked_identifier: SQL
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: mleast
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  typed_array_literal:
                    keyword: VARIADIC
                    array_type:
                      keyword: ARRAY
                    array_literal:
                    - start_square_bracket: '['
                    - numeric_literal: '10'
                    - comma: ','
                    - numeric_literal:
                        sign_indicator: '-'
                        numeric_literal: '1'
                    - comma: ','
                    - numeric_literal: '5'
                    - comma: ','
                    - numeric_literal: '4.4'
                    - end_square_bracket: ']'
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: mleast
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  cast_expression:
                    typed_array_literal:
                      keyword: VARIADIC
                      array_type:
                        keyword: ARRAY
                      array_literal:
                        start_square_bracket: '['
                        end_square_bracket: ']'
                    casting_operator: '::'
                    data_type:
                      keyword: numeric
                      start_square_bracket: '['
                      end_square_bracket: ']'
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: mleast
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  typed_array_literal:
                    keyword: VARIADIC
                    naked_identifier: arr
                    assignment_operator: :=
                    array_type:
                      keyword: ARRAY
                    array_literal:
                    - start_square_bracket: '['
                    - numeric_literal: '10'
                    - comma: ','
                    - numeric_literal:
                        sign_indicator: '-'
                        numeric_literal: '1'
                    - comma: ','
                    - numeric_literal: '5'
                    - comma: ','
                    - numeric_literal: '4.4'
                    - end_square_bracket: ']'
                end_bracket: )
- statement_terminator: ;
- statement:
    create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: anyleast
    - function_parameter_list:
        bracketed:
          start_bracket: (
          keyword: VARIADIC
          data_type:
            data_type_identifier: anyarray
          end_bracket: )
    - keyword: RETURNS
    - data_type:
        data_type_identifier: anyelement
    - function_definition:
        keyword: AS
        quoted_literal: "$$\n    SELECT min($1[i]) FROM generate_subscripts($1, 1)\
          \ g(i);\n$$"
        language_clause:
          keyword: LANGUAGE
          naked_identifier: SQL
- statement_terminator: ;
- statement:
    create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: concat_values
    - function_parameter_list:
        bracketed:
        - start_bracket: (
        - data_type:
            keyword: text
        - comma: ','
        - keyword: VARIADIC
        - data_type:
            data_type_identifier: anyarray
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
        keyword: text
    - function_definition:
        keyword: AS
        quoted_literal: "$$\n    SELECT array_to_string($2, $1);\n$$"
        language_clause:
          keyword: LANGUAGE
          naked_identifier: SQL
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: my_function
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  function:
                    function_name:
                      function_name_identifier: other_function
                    function_contents:
                      bracketed:
                        start_bracket: (
                        keyword: VARIADIC
                        expression:
                          function:
                            function_name:
                              function_name_identifier: ARRAY_REMOVE
                            function_contents:
                              bracketed:
                              - start_bracket: (
                              - expression:
                                  typed_array_literal:
                                    array_type:
                                      keyword: ARRAY
                                    array_literal:
                                    - start_square_bracket: '['
                                    - column_reference:
                                      - naked_identifier: a
                                      - dot: .
                                      - naked_identifier: value1
                                    - comma: ','
                                    - column_reference:
                                      - naked_identifier: b
                                      - dot: .
                                      - naked_identifier: value2
                                    - comma: ','
                                    - column_reference:
                                      - naked_identifier: c
                                      - dot: .
                                      - naked_identifier: value3
                                    - end_square_bracket: ']'
                              - comma: ','
                              - expression:
                                  null_literal: 'NULL'
                              - end_bracket: )
                        end_bracket: )
                end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
        - from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: a
        - join_clause:
          - keyword: FULL
          - keyword: OUTER
          - keyword: JOIN
          - from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: b
          - keyword: USING
          - bracketed:
              start_bracket: (
              naked_identifier: id
              end_bracket: )
        - join_clause:
          - keyword: FULL
          - keyword: OUTER
          - keyword: JOIN
          - from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: c
          - keyword: USING
          - bracketed:
              start_bracket: (
              naked_identifier: id
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: json_extract_path_text
            function_contents:
              bracketed:
              - start_bracket: (
              - expression:
                  cast_expression:
                    column_reference:
                    - naked_identifier: t
                    - dot: .
                    - naked_identifier: col
                    casting_operator: '::'
                    data_type:
                      keyword: json
              - comma: ','
              - expression:
                  typed_array_literal:
                    keyword: VARIADIC
                    array_type:
                      keyword: ARRAY
                    array_literal:
                      start_square_bracket: '['
                      expression:
                        cast_expression:
                          quoted_literal: "'foo'"
                          casting_operator: '::'
                          data_type:
                            keyword: text
                      end_square_bracket: ']'
              - end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: t
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: my_function
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  typed_array_literal:
                    keyword: VARIADIC
                    array_type:
                      keyword: ARRAY
                    array_literal:
                    - start_square_bracket: '['
                    - expression:
                        case_expression:
                        - keyword: CASE
                        - when_clause:
                          - keyword: WHEN
                          - expression:
                              column_reference:
                                naked_identifier: x
                              comparison_operator:
                                raw_comparison_operator: '>'
                              numeric_literal: '0'
                          - keyword: THEN
                          - expression:
                              column_reference:
                                naked_identifier: x
                        - else_clause:
                            keyword: ELSE
                            expression:
                              numeric_literal: '0'
                        - keyword: END
                    - comma: ','
                    - expression:
                      - column_reference:
                          naked_identifier: y
                      - binary_operator: +
                      - column_reference:
                          naked_identifier: z
                    - comma: ','
                    - quoted_literal: "'literal'"
                    - end_square_bracket: ']'
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: my_function
            function_contents:
              bracketed:
                start_bracket: (
                keyword: VARIADIC
                expression:
                  function:
                    function_name:
                      function_name_identifier: ARRAY
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          select_statement:
                            select_clause:
                              keyword: SELECT
                              select_clause_element:
                                column_reference:
                                  naked_identifier: value
                            from_clause:
                              keyword: FROM
                              from_expression:
                                from_expression_element:
                                  table_expression:
                                    table_reference:
                                      naked_identifier: table1
                        end_bracket: )
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: my_function
            function_contents:
              bracketed:
                start_bracket: (
                keyword: VARIADIC
                expression:
                  column_reference:
                    naked_identifier: param_name
                  comparison_operator:
                    raw_comparison_operator: '='
                  typed_array_literal:
                    array_type:
                      keyword: ARRAY
                    array_literal:
                    - start_square_bracket: '['
                    - numeric_literal: '1'
                    - comma: ','
                    - numeric_literal: '2'
                    - comma: ','
                    - numeric_literal: '3'
                    - end_square_bracket: ']'
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: my_function
            function_contents:
              bracketed:
              - start_bracket: (
              - expression:
                  column_reference:
                    naked_identifier: regular_param
                  comparison_operator:
                    raw_comparison_operator: '='
                  quoted_literal: "'value'"
              - comma: ','
              - keyword: VARIADIC
              - expression:
                  column_reference:
                    naked_identifier: variadic_param
                  comparison_operator:
                    raw_comparison_operator: '='
                  typed_array_literal:
                    array_type:
                      keyword: ARRAY
                    array_literal:
                    - start_square_bracket: '['
                    - numeric_literal: '1'
                    - comma: ','
                    - numeric_literal: '2'
                    - comma: ','
                    - numeric_literal: '3'
                    - end_square_bracket: ']'
              - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: my_function
            function_contents:
              bracketed:
                start_bracket: (
                keyword: VARIADIC
                named_argument:
                  naked_identifier: param_name
                  right_arrow: =>
                  expression:
                    typed_array_literal:
                      array_type:
                        keyword: ARRAY
                      array_literal:
                      - start_square_bracket: '['
                      - numeric_literal: '1'
                      - comma: ','
                      - numeric_literal: '2'
                      - comma: ','
                      - numeric_literal: '3'
                      - end_square_bracket: ']'
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: my_function
            function_contents:
              bracketed:
              - start_bracket: (
              - named_argument:
                  naked_identifier: regular_param
                  right_arrow: =>
                  expression:
                    quoted_literal: "'value'"
              - comma: ','
              - keyword: VARIADIC
              - named_argument:
                  naked_identifier: variadic_param
                  right_arrow: =>
                  expression:
                    typed_array_literal:
                      array_type:
                        keyword: ARRAY
                      array_literal:
                      - start_square_bracket: '['
                      - numeric_literal: '1'
                      - comma: ','
                      - numeric_literal: '2'
                      - comma: ','
                      - numeric_literal: '3'
                      - end_square_bracket: ']'
              - end_bracket: )
- statement_terminator: ;
