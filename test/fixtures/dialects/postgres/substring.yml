# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 207c99a9018776d497e9b71b264c3250bc1d00e82f0eb44e197a5a7270ecfa4e
file:
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              function:
                function_name:
                  function_name_identifier: substring
                function_contents:
                  bracketed:
                  - start_bracket: (
                  - expression:
                      quoted_literal: "'Thomas'"
                  - keyword: from
                  - expression:
                      numeric_literal: '2'
                  - keyword: for
                  - expression:
                      numeric_literal: '3'
                  - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              function:
                function_name:
                  function_name_identifier: substring
                function_contents:
                  bracketed:
                  - start_bracket: (
                  - expression:
                      quoted_literal: "'Thomas'"
                  - keyword: from
                  - expression:
                      numeric_literal: '3'
                  - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              function:
                function_name:
                  function_name_identifier: substring
                function_contents:
                  bracketed:
                  - start_bracket: (
                  - expression:
                      quoted_literal: "'Thomas'"
                  - keyword: for
                  - expression:
                      numeric_literal: '2'
                  - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              function:
                function_name:
                  function_name_identifier: substring
                function_contents:
                  bracketed:
                  - start_bracket: (
                  - expression:
                      quoted_literal: "'Thomas'"
                  - expression:
                      data_type:
                        data_type_identifier: similar
                      quoted_literal: "'%#\"o_a#\"_'"
                  - expression:
                      data_type:
                        data_type_identifier: escape
                      quoted_literal: "'#'"
                  - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              function:
                function_name:
                  function_name_identifier: substring
                function_contents:
                  bracketed:
                  - start_bracket: (
                  - expression:
                      quoted_literal: "'Thomas'"
                  - keyword: from
                  - expression:
                      quoted_literal: "'...$'"
                  - end_bracket: )
- statement_terminator: ;
