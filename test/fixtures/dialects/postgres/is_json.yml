# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: bf62473fa3cda540f26cc43c6685cca05769a1c7c06dc9d927603ffffe31b930
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'{}'"
          - keyword: IS
          - keyword: JSON
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'[]'"
          - keyword: IS
          - keyword: JSON
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'\"test\"'"
          - keyword: IS
          - keyword: JSON
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'invalid'"
          - keyword: IS
          - keyword: JSON
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'invalid'"
          - keyword: IS
          - keyword: NOT
          - keyword: JSON
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'{}'"
          - keyword: IS
          - keyword: NOT
          - keyword: JSON
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'{}'"
          - keyword: IS
          - keyword: JSON
          - keyword: OBJECT
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'[]'"
          - keyword: IS
          - keyword: JSON
          - keyword: ARRAY
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'\"test\"'"
          - keyword: IS
          - keyword: JSON
          - keyword: SCALAR
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'{\"a\": 1}'"
          - keyword: IS
          - keyword: JSON
          - keyword: VALUE
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'\"test\"'"
          - keyword: IS
          - keyword: NOT
          - keyword: JSON
          - keyword: OBJECT
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'{}'"
          - keyword: IS
          - keyword: NOT
          - keyword: JSON
          - keyword: ARRAY
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'[]'"
          - keyword: IS
          - keyword: NOT
          - keyword: JSON
          - keyword: SCALAR
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'invalid'"
          - keyword: IS
          - keyword: NOT
          - keyword: JSON
          - keyword: VALUE
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'{\"a\": 1, \"b\": 2}'"
          - keyword: IS
          - keyword: JSON
          - keyword: WITH
          - keyword: UNIQUE
          - keyword: KEYS
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'{\"a\": 1, \"a\": 2}'"
          - keyword: IS
          - keyword: JSON
          - keyword: WITH
          - keyword: UNIQUE
          - keyword: KEYS
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'{\"a\": 1, \"b\": 2}'"
          - keyword: IS
          - keyword: JSON
          - keyword: WITHOUT
          - keyword: UNIQUE
          - keyword: KEYS
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'{\"a\": 1, \"b\": 2}'"
          - keyword: IS
          - keyword: JSON
          - keyword: OBJECT
          - keyword: WITH
          - keyword: UNIQUE
          - keyword: KEYS
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'{\"a\": 1, \"a\": 2}'"
          - keyword: IS
          - keyword: JSON
          - keyword: OBJECT
          - keyword: WITH
          - keyword: UNIQUE
          - keyword: KEYS
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'{\"a\": 1, \"b\": 2}'"
          - keyword: IS
          - keyword: JSON
          - keyword: OBJECT
          - keyword: WITHOUT
          - keyword: UNIQUE
          - keyword: KEYS
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'[]'"
          - keyword: IS
          - keyword: NOT
          - keyword: JSON
          - keyword: OBJECT
          - keyword: WITH
          - keyword: UNIQUE
          - keyword: KEYS
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - quoted_literal: "'[1, 2]'"
          - keyword: IS
          - keyword: NOT
          - keyword: JSON
          - keyword: OBJECT
          - keyword: WITHOUT
          - keyword: UNIQUE
          - keyword: KEYS
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          expression:
          - column_reference:
              naked_identifier: col1
          - keyword: IS
          - keyword: JSON
      - comma: ','
      - select_clause_element:
          expression:
          - column_reference:
              naked_identifier: col2
          - keyword: IS
          - keyword: NOT
          - keyword: JSON
          - keyword: ARRAY
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            case_expression:
            - keyword: CASE
            - when_clause:
              - keyword: WHEN
              - expression:
                - column_reference:
                    naked_identifier: data
                - keyword: IS
                - keyword: JSON
                - keyword: OBJECT
              - keyword: THEN
              - expression:
                  quoted_literal: "'valid'"
            - else_clause:
                keyword: ELSE
                expression:
                  quoted_literal: "'invalid'"
            - keyword: END
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table1
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            naked_identifier: data
        - keyword: IS
        - keyword: JSON
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table1
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            naked_identifier: config
        - keyword: IS
        - keyword: NOT
        - keyword: JSON
        - keyword: OBJECT
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table1
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            naked_identifier: metadata
        - keyword: IS
        - keyword: JSON
        - keyword: WITH
        - keyword: UNIQUE
        - keyword: KEYS
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - bracketed:
              start_bracket: (
              expression:
                cast_expression:
                  column_reference:
                    naked_identifier: column_name
                  casting_operator: '::'
                  data_type:
                    keyword: text
              end_bracket: )
          - keyword: IS
          - keyword: JSON
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - function:
              function_name:
                function_name_identifier: COALESCE
              function_contents:
                bracketed:
                - start_bracket: (
                - expression:
                    column_reference:
                      naked_identifier: data
                - comma: ','
                - expression:
                    quoted_literal: "'{}'"
                - end_bracket: )
          - keyword: IS
          - keyword: JSON
          - keyword: OBJECT
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table1
- statement_terminator: ;
