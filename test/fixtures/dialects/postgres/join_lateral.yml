# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: ae546a1a74bf0964dd8d94303015f5337dcffdbf2ceba9cd83cef14fdefbb1f1
file:
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          column_reference:
          - naked_identifier: tbl1
          - dot: .
          - naked_identifier: id
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: tbl1
          join_clause:
            keyword: join
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: tbl2
            join_on_condition:
              keyword: 'on'
              expression:
              - column_reference:
                - naked_identifier: tbl1
                - dot: .
                - naked_identifier: id
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                - naked_identifier: tbl2
                - dot: .
                - naked_identifier: id
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          column_reference:
          - naked_identifier: tbl1
          - dot: .
          - naked_identifier: id
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: tbl1
          join_clause:
            keyword: join
            from_expression_element:
              keyword: lateral
              table_expression:
                bracketed:
                  start_bracket: (
                  select_statement:
                    select_clause:
                      keyword: SELECT
                      select_clause_element:
                        wildcard_expression:
                          wildcard_identifier:
                            star: '*'
                    from_clause:
                      keyword: FROM
                      from_expression:
                        from_expression_element:
                          table_expression:
                            table_reference:
                              naked_identifier: tbl2
                  end_bracket: )
              alias_expression:
                alias_operator:
                  keyword: AS
                naked_identifier: foo
            join_on_condition:
              keyword: 'ON'
              expression:
              - column_reference:
                - naked_identifier: tbl1
                - dot: .
                - naked_identifier: id
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                - naked_identifier: foo
                - dot: .
                - naked_identifier: id
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          column_reference:
          - naked_identifier: tbl1
          - dot: .
          - naked_identifier: id
      from_clause:
        keyword: from
        from_expression:
        - from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: tbl1
        - join_clause:
          - keyword: full
          - keyword: outer
          - keyword: join
          - from_expression_element:
              keyword: lateral
              table_expression:
                bracketed:
                  start_bracket: (
                  select_statement:
                    select_clause:
                      keyword: SELECT
                      select_clause_element:
                        wildcard_expression:
                          wildcard_identifier:
                            star: '*'
                    from_clause:
                      keyword: FROM
                      from_expression:
                        from_expression_element:
                          table_expression:
                            table_reference:
                              naked_identifier: tbl2
                  end_bracket: )
              alias_expression:
                alias_operator:
                  keyword: AS
                naked_identifier: tbl2
          - join_on_condition:
              keyword: 'on'
              expression:
              - column_reference:
                - naked_identifier: tbl1
                - dot: .
                - naked_identifier: id
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                - naked_identifier: tbl2
                - dot: .
                - naked_identifier: id
        - join_clause:
          - keyword: cross
          - keyword: join
          - from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: tbl3
        - join_clause:
          - keyword: left
          - keyword: join
          - from_expression_element:
              keyword: lateral
              table_expression:
                bracketed:
                  start_bracket: (
                  select_statement:
                    select_clause:
                      keyword: SELECT
                      select_clause_element:
                        wildcard_expression:
                          wildcard_identifier:
                            star: '*'
                    from_clause:
                      keyword: FROM
                      from_expression:
                        from_expression_element:
                          table_expression:
                            table_reference:
                              naked_identifier: tbl4
                  end_bracket: )
              alias_expression:
                alias_operator:
                  keyword: AS
                naked_identifier: tbl4
          - join_on_condition:
              keyword: 'on'
              expression:
              - column_reference:
                - naked_identifier: tbl1
                - dot: .
                - naked_identifier: id
              - comparison_operator:
                  raw_comparison_operator: '='
              - column_reference:
                - naked_identifier: tbl4
                - dot: .
                - naked_identifier: id
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - naked_identifier: X
          - dot: .
          - naked_identifier: NUM
      - comma: ','
      - select_clause_element:
          column_reference:
          - naked_identifier: D
          - dot: .
          - naked_identifier: id
      from_clause:
      - keyword: FROM
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: tbl1
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: D
      - comma: ','
      - from_expression:
          from_expression_element:
            keyword: LATERAL
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                - keyword: values
                - bracketed:
                    start_bracket: (
                    expression:
                      numeric_literal: '0'
                    end_bracket: )
                - comma: ','
                - bracketed:
                    start_bracket: (
                    expression:
                      numeric_literal: '1'
                    end_bracket: )
              end_bracket: )
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: X
              bracketed:
                start_bracket: (
                identifier_list:
                  naked_identifier: NUM
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - naked_identifier: m
          - dot: .
          - naked_identifier: name
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: mname
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: pname
      from_clause:
      - keyword: FROM
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: manufacturers
            alias_expression:
              naked_identifier: m
      - comma: ','
      - from_expression:
          from_expression_element:
            keyword: LATERAL
            table_expression:
              function:
                function_name:
                  function_name_identifier: get_product_names
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                      - naked_identifier: m
                      - dot: .
                      - naked_identifier: id
                    end_bracket: )
            alias_expression:
              naked_identifier: pname
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - naked_identifier: m
          - dot: .
          - naked_identifier: name
          alias_expression:
            alias_operator:
              keyword: AS
            naked_identifier: mname
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: pname
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: manufacturers
            alias_expression:
              naked_identifier: m
          join_clause:
          - keyword: LEFT
          - keyword: JOIN
          - from_expression_element:
              keyword: LATERAL
              table_expression:
                function:
                  function_name:
                    function_name_identifier: get_product_names
                  function_contents:
                    bracketed:
                      start_bracket: (
                      expression:
                        column_reference:
                        - naked_identifier: m
                        - dot: .
                        - naked_identifier: id
                      end_bracket: )
              alias_expression:
                naked_identifier: pname
          - join_on_condition:
              keyword: 'ON'
              expression:
                boolean_literal: 'true'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
          - naked_identifier: X
          - dot: .
          - naked_identifier: NUM
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            keyword: LATERAL
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                - keyword: values
                - bracketed:
                    start_bracket: (
                    expression:
                      numeric_literal: '0'
                    end_bracket: )
                - comma: ','
                - bracketed:
                    start_bracket: (
                    expression:
                      numeric_literal: '1'
                    end_bracket: )
              end_bracket: )
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: X
              bracketed:
                start_bracket: (
                identifier_list:
                  naked_identifier: NUM
                end_bracket: )
- statement_terminator: ;
