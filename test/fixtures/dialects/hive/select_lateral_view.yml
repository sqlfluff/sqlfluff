# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: d0033207a8516050461186d3e6020d8516ab5c115f74e1a2263ad8b116e44aad
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: pageid
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: adid
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: pageAds
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: explode
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                        naked_identifier: adid_list
                    end_bracket: )
            - naked_identifier: adTable
            - keyword: AS
            - naked_identifier: adid
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: adid
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: count
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  numeric_literal: '1'
                end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: pageAds
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: explode
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                        naked_identifier: adid_list
                    end_bracket: )
            - naked_identifier: adTable
            - keyword: AS
            - naked_identifier: adid
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - column_reference:
          naked_identifier: adid
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
          - table_expression:
              table_reference:
                naked_identifier: exampleTable
          - lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: explode
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                        naked_identifier: col1
                    end_bracket: )
            - naked_identifier: myTable1
            - keyword: AS
            - naked_identifier: myCol1
          - lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: explode
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                        naked_identifier: myCol1
                    end_bracket: )
            - naked_identifier: myTable2
            - keyword: AS
            - naked_identifier: myCol2
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: myCol1
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: myCol2
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
          - table_expression:
              table_reference:
                naked_identifier: baseTable
          - lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: explode
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                        naked_identifier: col1
                    end_bracket: )
            - naked_identifier: myTable1
            - keyword: AS
            - naked_identifier: myCol1
          - lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: explode
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                        naked_identifier: col2
                    end_bracket: )
            - naked_identifier: myTable2
            - keyword: AS
            - naked_identifier: myCol2
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: src
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - function:
                function_name:
                  function_name_identifier: explode
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      function:
                        function_name:
                          function_name_identifier: array
                        function_contents:
                          bracketed:
                            start_bracket: (
                            end_bracket: )
                    end_bracket: )
            - naked_identifier: C
            - keyword: AS
            - naked_identifier: a
      limit_clause:
        keyword: limit
        numeric_literal: '10'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: src
            lateral_view_clause:
            - keyword: LATERAL
            - keyword: VIEW
            - keyword: OUTER
            - function:
                function_name:
                  function_name_identifier: explode
                function_contents:
                  bracketed:
                    start_bracket: (
                    expression:
                      function:
                        function_name:
                          function_name_identifier: array
                        function_contents:
                          bracketed:
                            start_bracket: (
                            end_bracket: )
                    end_bracket: )
            - naked_identifier: C
            - keyword: AS
            - naked_identifier: a
      limit_clause:
        keyword: limit
        numeric_literal: '10'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: explode
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  function:
                    function_name:
                      function_name_identifier: map
                    function_contents:
                      bracketed:
                      - start_bracket: (
                      - expression:
                          quoted_literal: "'A'"
                      - comma: ','
                      - expression:
                          numeric_literal: '10'
                      - comma: ','
                      - expression:
                          quoted_literal: "'B'"
                      - comma: ','
                      - expression:
                          numeric_literal: '20'
                      - comma: ','
                      - expression:
                          quoted_literal: "'C'"
                      - comma: ','
                      - expression:
                          numeric_literal: '30'
                      - end_bracket: )
                end_bracket: )
          alias_expression:
            keyword: AS
            bracketed:
              start_bracket: (
              identifier_list:
              - naked_identifier: key
              - comma: ','
              - naked_identifier: value
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: posexplode
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  function:
                    function_name:
                      function_name_identifier: array
                    function_contents:
                      bracketed:
                      - start_bracket: (
                      - expression:
                          quoted_literal: "'A'"
                      - comma: ','
                      - expression:
                          quoted_literal: "'B'"
                      - comma: ','
                      - expression:
                          quoted_literal: "'C'"
                      - end_bracket: )
                end_bracket: )
          alias_expression:
            keyword: AS
            bracketed:
              start_bracket: (
              identifier_list:
              - naked_identifier: pos
              - comma: ','
              - naked_identifier: val
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: inline
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  function:
                    function_name:
                      function_name_identifier: array
                    function_contents:
                      bracketed:
                      - start_bracket: (
                      - expression:
                          function:
                            function_name:
                              function_name_identifier: struct
                            function_contents:
                              bracketed:
                              - start_bracket: (
                              - expression:
                                  quoted_literal: "'A'"
                              - comma: ','
                              - expression:
                                  numeric_literal: '10'
                              - comma: ','
                              - expression:
                                  keyword: DATE
                                  date_constructor_literal: "'2015-01-01'"
                              - end_bracket: )
                      - comma: ','
                      - expression:
                          function:
                            function_name:
                              function_name_identifier: struct
                            function_contents:
                              bracketed:
                              - start_bracket: (
                              - expression:
                                  quoted_literal: "'B'"
                              - comma: ','
                              - expression:
                                  numeric_literal: '20'
                              - comma: ','
                              - expression:
                                  keyword: DATE
                                  date_constructor_literal: "'2016-02-02'"
                              - end_bracket: )
                      - end_bracket: )
                end_bracket: )
          alias_expression:
            keyword: AS
            bracketed:
              start_bracket: (
              identifier_list:
              - naked_identifier: col1
              - comma: ','
              - naked_identifier: col2
              - comma: ','
              - naked_identifier: col3
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: stack
            function_contents:
              bracketed:
              - start_bracket: (
              - expression:
                  numeric_literal: '2'
              - comma: ','
              - expression:
                  quoted_literal: "'A'"
              - comma: ','
              - expression:
                  numeric_literal: '10'
              - comma: ','
              - expression:
                  keyword: DATE
                  date_constructor_literal: "'2015-01-01'"
              - comma: ','
              - expression:
                  quoted_literal: "'B'"
              - comma: ','
              - expression:
                  numeric_literal: '20'
              - comma: ','
              - expression:
                  keyword: DATE
                  date_constructor_literal: "'2016-01-01'"
              - end_bracket: )
          alias_expression:
            keyword: AS
            bracketed:
              start_bracket: (
              identifier_list:
              - naked_identifier: col0
              - comma: ','
              - naked_identifier: col1
              - comma: ','
              - naked_identifier: col2
              end_bracket: )
- statement_terminator: ;
