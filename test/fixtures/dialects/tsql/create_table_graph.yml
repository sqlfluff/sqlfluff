# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: eec36e50396bb61abe0713b0338d60f4c17688597f014d5ea215db882d52c97d
file:
  batch:
  - statement:
      create_table_graph_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
        - quoted_identifier: '[dbo]'
        - dot: .
        - quoted_identifier: '[Person]'
      - bracketed:
        - start_bracket: (
        - column_definition:
            naked_identifier: ID
            data_type:
              data_type_identifier: INTEGER
            column_constraint_segment:
            - keyword: PRIMARY
            - keyword: KEY
        - comma: ','
        - column_definition:
            quoted_identifier: '[name]'
            data_type:
              data_type_identifier: VARCHAR
              bracketed_arguments:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '100'
                  end_bracket: )
        - end_bracket: )
      - keyword: AS
      - keyword: NODE
      - statement_terminator: ;
  - statement:
      create_table_graph_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
          naked_identifier: friends
      - bracketed:
        - start_bracket: (
        - column_definition:
            naked_identifier: id
            data_type:
              data_type_identifier: INTEGER
            column_constraint_segment:
            - keyword: PRIMARY
            - keyword: KEY
        - comma: ','
        - column_definition:
            naked_identifier: start_date
            data_type:
              data_type_identifier: DATE
        - end_bracket: )
      - keyword: AS
      - keyword: EDGE
      - statement_terminator: ;
  - statement:
      create_table_graph_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
          naked_identifier: likes
      - keyword: AS
      - keyword: EDGE
      - statement_terminator: ;
  - statement:
      create_table_graph_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: FriendOf
      - bracketed:
          start_bracket: (
          graph_table_constraint:
            keyword: CONSTRAINT
            object_reference:
              naked_identifier: cnt_Person_FriendOf_Person
            connection_constraint_grammar:
              keyword: CONNECTION
              bracketed:
              - start_bracket: (
              - table_reference:
                - naked_identifier: dbo
                - dot: .
                - naked_identifier: Person
              - keyword: TO
              - table_reference:
                - naked_identifier: dbo
                - dot: .
                - naked_identifier: Person
              - end_bracket: )
          end_bracket: )
      - keyword: AS
      - keyword: EDGE
      - statement_terminator: ;
  - statement:
      create_table_graph_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: FriendOf
      - bracketed:
          start_bracket: (
          graph_table_constraint:
            keyword: CONSTRAINT
            object_reference:
              naked_identifier: cnt_Person_FriendOf_Person
            connection_constraint_grammar:
            - keyword: CONNECTION
            - bracketed:
              - start_bracket: (
              - table_reference:
                - naked_identifier: dbo
                - dot: .
                - naked_identifier: Person
              - keyword: TO
              - table_reference:
                - naked_identifier: dbo
                - dot: .
                - naked_identifier: Person
              - end_bracket: )
            - keyword: 'ON'
            - keyword: DELETE
            - keyword: CASCADE
          end_bracket: )
      - keyword: AS
      - keyword: EDGE
      - statement_terminator: ;
