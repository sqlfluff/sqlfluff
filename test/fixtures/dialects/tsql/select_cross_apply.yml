# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 2e2c7637899f7476f622812d11b3143df72b03cec6987cf9a113dfdcd0e28ad4
file:
  batch:
  - statement:
      select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: DeptID
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: DeptName
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: DeptMgrID
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: EmpID
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: EmpLastName
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: EmpSalary
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: Departments
              alias_expression:
                naked_identifier: d
            join_clause:
            - keyword: CROSS
            - keyword: APPLY
            - from_expression_element:
                table_expression:
                  function:
                    function_name:
                      naked_identifier: dbo
                      dot: .
                      function_name_identifier: GetReports
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          column_reference:
                          - naked_identifier: d
                          - dot: .
                          - naked_identifier: DeptMgrID
                        end_bracket: )
          statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
            - naked_identifier: d
            - dot: .
            - naked_identifier: DeptID
        - comma: ','
        - select_clause_element:
            column_reference:
            - naked_identifier: d
            - dot: .
            - naked_identifier: DeptName
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: DeptMgrID
        - comma: ','
        - select_clause_element:
            column_reference:
            - naked_identifier: reps
            - dot: .
            - naked_identifier: EmpID
        - comma: ','
        - select_clause_element:
            column_reference:
            - naked_identifier: reps
            - dot: .
            - naked_identifier: EmpLastName
        - comma: ','
        - select_clause_element:
            column_reference:
            - naked_identifier: reps
            - dot: .
            - naked_identifier: EmpSalary
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: Departments
              alias_expression:
                keyword: AS
                naked_identifier: d
            join_clause:
            - keyword: CROSS
            - keyword: APPLY
            - from_expression_element:
                table_expression:
                  function:
                    function_name:
                      naked_identifier: dbo
                      dot: .
                      function_name_identifier: GetReports
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          column_reference:
                          - naked_identifier: d
                          - dot: .
                          - naked_identifier: DeptMgrID
                        end_bracket: )
                alias_expression:
                  keyword: AS
                  naked_identifier: reps
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
            - naked_identifier: d
            - dot: .
            - naked_identifier: DeptMgrID
            comparison_operator:
              raw_comparison_operator: '='
            numeric_literal: '10'
        statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: Department
              alias_expression:
                naked_identifier: D
            join_clause:
            - keyword: OUTER
            - keyword: APPLY
            - from_expression_element:
                table_expression:
                  function:
                    function_name:
                      naked_identifier: dbo
                      dot: .
                      function_name_identifier: fn_GetAllEmployeeOfADepartment
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          column_reference:
                          - naked_identifier: D
                          - dot: .
                          - naked_identifier: DepartmentID
                        end_bracket: )
          statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: Department
              alias_expression:
                naked_identifier: D
            join_clause:
            - keyword: OUTER
            - keyword: APPLY
            - from_expression_element:
                table_expression:
                  function:
                    function_name:
                      naked_identifier: dbo
                      dot: .
                      function_name_identifier: fn_GetAllEmployeeOfADepartment
                    function_contents:
                      bracketed:
                        start_bracket: (
                        expression:
                          column_reference:
                          - naked_identifier: D
                          - dot: .
                          - naked_identifier: DepartmentID
                        end_bracket: )
                alias_expression:
                  keyword: AS
                  naked_identifier: AllEmp
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
            - naked_identifier: D
            - dot: .
            - naked_identifier: DepartmentId
            comparison_operator:
              raw_comparison_operator: '='
            numeric_literal: '10'
        statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
        - keyword: select
        - select_clause_element:
            column_reference:
            - naked_identifier: s
            - dot: .
            - naked_identifier: column_id
        - comma: ','
        - select_clause_element:
            column_reference:
            - naked_identifier: sp
            - dot: .
            - naked_identifier: value
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: table1
              alias_expression:
                keyword: as
                naked_identifier: s
            join_clause:
            - keyword: cross
            - keyword: apply
            - from_expression_element:
                table_expression:
                  function:
                    function_name:
                      function_name_identifier: string_split
                    function_contents:
                      bracketed:
                      - start_bracket: (
                      - expression:
                          function:
                            function_name:
                              function_name_identifier: replace
                            function_contents:
                              bracketed:
                              - start_bracket: (
                              - expression:
                                  column_reference:
                                  - naked_identifier: s
                                  - dot: .
                                  - naked_identifier: some_path
                              - comma: ','
                              - expression:
                                  quoted_literal: "'->'"
                              - comma: ','
                              - expression:
                                  quoted_literal: "'{'"
                              - end_bracket: )
                      - comma: ','
                      - expression:
                          quoted_literal: "'{'"
                      - end_bracket: )
                alias_expression:
                  keyword: as
                  naked_identifier: sp
          statement_terminator: ;
