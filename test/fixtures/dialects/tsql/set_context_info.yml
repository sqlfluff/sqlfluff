# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: ac90b1cbf372890a0cdd68884d7cb6035083f8dfde4433230a8afbae43d79000
file:
  batch:
  - statement:
      set_context_info_statement:
      - keyword: SET
      - keyword: CONTEXT_INFO
      - numeric_literal: '0x01010101'
  - statement_terminator: ;
  - statement:
      declare_segment:
        keyword: DECLARE
        parameter: '@BinVar'
        data_type:
          data_type_identifier: varbinary
          bracketed_arguments:
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '128'
              end_bracket: )
        statement_terminator: ;
  - statement:
      set_segment:
        keyword: SET
        parameter: '@BinVar'
        assignment_operator:
          raw_comparison_operator: '='
        expression:
          function:
            function_name:
              keyword: CAST
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  function:
                    function_name:
                      keyword: REPLICATE
                    function_contents:
                      bracketed:
                        start_bracket: (
                        numeric_literal: '0x20'
                        comma: ','
                        expression:
                          numeric_literal: '128'
                        end_bracket: )
                keyword: AS
                data_type:
                  data_type_identifier: varbinary
                  bracketed_arguments:
                    bracketed:
                      start_bracket: (
                      expression:
                        numeric_literal: '128'
                      end_bracket: )
                end_bracket: )
        statement_terminator: ;
  - statement:
      set_context_info_statement:
      - keyword: SET
      - keyword: CONTEXT_INFO
      - parameter: '@BinVar'
  - statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            function:
              function_name:
                function_name_identifier: CONTEXT_INFO
              function_contents:
                bracketed:
                  start_bracket: (
                  end_bracket: )
            alias_expression:
              alias_operator:
                keyword: AS
              naked_identifier: MyContextInfo
        statement_terminator: ;
