# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 239013b521b0192fd7c63b5eac97cbf964128a89fc638c20d9476df945dbed14
file:
  batch:
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            function:
              function_name:
                keyword: JSON_OBJECT
              function_contents:
                bracketed:
                - start_bracket: (
                - keyword: ABSENT
                - keyword: 'ON'
                - keyword: 'NULL'
                - end_bracket: )
        statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            function:
              function_name:
                function_name_identifier: JSON_ARRAY
              function_contents:
                bracketed:
                - start_bracket: (
                - expression:
                    quoted_literal: "'a'"
                - comma: ','
                - expression:
                    numeric_literal: '1'
                - comma: ','
                - expression:
                    quoted_literal: "'b'"
                - comma: ','
                - expression:
                    numeric_literal: '2'
                - end_bracket: )
        statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            function:
              function_name:
                keyword: JSON_ARRAY
              function_contents:
                bracketed:
                - start_bracket: (
                - quoted_literal: "'a'"
                - comma: ','
                - numeric_literal: '1'
                - comma: ','
                - keyword: 'NULL'
                - comma: ','
                - numeric_literal: '2'
                - comma: ','
                - keyword: 'NULL'
                - keyword: 'ON'
                - keyword: 'NULL'
                - end_bracket: )
        statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            function:
              function_name:
                keyword: JSON_OBJECT
              function_contents:
                bracketed:
                - start_bracket: (
                - quoted_literal: "'name'"
                - colon: ':'
                - quoted_literal: "'value'"
                - comma: ','
                - quoted_literal: "'new'"
                - colon: ':'
                - numeric_literal: '1'
                - end_bracket: )
        statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            function:
              function_name:
                keyword: JSON_OBJECT
              function_contents:
                bracketed:
                - start_bracket: (
                - quoted_literal: "'name'"
                - colon: ':'
                - quoted_literal: "'value'"
                - comma: ','
                - quoted_literal: "'type'"
                - colon: ':'
                - null_literal: 'NULL'
                - keyword: ABSENT
                - keyword: 'ON'
                - keyword: 'NULL'
                - end_bracket: )
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            function:
              function_name:
                keyword: JSON_OBJECT
              function_contents:
                bracketed:
                - start_bracket: (
                - quoted_literal: "'name'"
                - colon: ':'
                - quoted_literal: "'value'"
                - comma: ','
                - quoted_literal: "'type'"
                - colon: ':'
                - function:
                    function_name:
                      function_name_identifier: JSON_ARRAY
                    function_contents:
                      bracketed:
                      - start_bracket: (
                      - expression:
                          numeric_literal: '1'
                      - comma: ','
                      - expression:
                          numeric_literal: '2'
                      - end_bracket: )
                - end_bracket: )
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            function:
              function_name:
                keyword: JSON_OBJECT
              function_contents:
                bracketed:
                - start_bracket: (
                - quoted_literal: "'name'"
                - colon: ':'
                - quoted_literal: "'value'"
                - comma: ','
                - quoted_literal: "'type'"
                - colon: ':'
                - function:
                    function_name:
                      keyword: JSON_OBJECT
                    function_contents:
                      bracketed:
                      - start_bracket: (
                      - quoted_literal: "'type_id'"
                      - colon: ':'
                      - numeric_literal: '1'
                      - comma: ','
                      - quoted_literal: "'name'"
                      - colon: ':'
                      - quoted_literal: "'a'"
                      - end_bracket: )
                - end_bracket: )
  - statement:
      declare_segment:
      - keyword: DECLARE
      - parameter: '@id_key'
      - data_type:
          data_type_identifier: nvarchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '10'
              end_bracket: )
      - comparison_operator:
          raw_comparison_operator: '='
      - expression:
          quoted_literal: "N'id'"
      - comma: ','
      - parameter: '@id_value'
      - data_type:
          data_type_identifier: nvarchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '64'
              end_bracket: )
      - comparison_operator:
          raw_comparison_operator: '='
      - expression:
          function:
            function_name:
              function_name_identifier: NEWID
            function_contents:
              bracketed:
                start_bracket: (
                end_bracket: )
      - statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            function:
              function_name:
                keyword: JSON_OBJECT
              function_contents:
                bracketed:
                - start_bracket: (
                - quoted_literal: "'user_name'"
                - colon: ':'
                - function:
                    function_name:
                      function_name_identifier: USER_NAME
                    function_contents:
                      bracketed:
                        start_bracket: (
                        end_bracket: )
                - comma: ','
                - parameter: '@id_key'
                - colon: ':'
                - parameter: '@id_value'
                - comma: ','
                - quoted_literal: "'sid'"
                - colon: ':'
                - bracketed:
                    start_bracket: (
                    select_statement:
                      select_clause:
                        keyword: SELECT
                        select_clause_element:
                          system_variable: '@@SPID'
                    end_bracket: )
                - end_bracket: )
        statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
            - naked_identifier: s
            - dot: .
            - naked_identifier: session_id
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                keyword: JSON_OBJECT
              function_contents:
                bracketed:
                - start_bracket: (
                - quoted_literal: "'security_id'"
                - colon: ':'
                - column_reference:
                  - naked_identifier: s
                  - dot: .
                  - naked_identifier: security_id
                - comma: ','
                - quoted_literal: "'login'"
                - colon: ':'
                - column_reference:
                  - naked_identifier: s
                  - dot: .
                  - naked_identifier: login_name
                - comma: ','
                - quoted_literal: "'status'"
                - colon: ':'
                - column_reference:
                  - naked_identifier: s
                  - dot: .
                  - naked_identifier: status
                - end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: info
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: sys
                - dot: .
                - naked_identifier: dm_exec_sessions
              alias_expression:
                keyword: AS
                naked_identifier: s
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
            - naked_identifier: s
            - dot: .
            - naked_identifier: is_user_process
            comparison_operator:
              raw_comparison_operator: '='
            numeric_literal: '1'
        statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            function:
              function_name:
                function_name_identifier: JSON_ARRAY
              function_contents:
                bracketed:
                - start_bracket: (
                - expression:
                    quoted_literal: "'a'"
                - comma: ','
                - expression:
                    function:
                      function_name:
                        keyword: JSON_OBJECT
                      function_contents:
                        bracketed:
                        - start_bracket: (
                        - quoted_literal: "'name'"
                        - colon: ':'
                        - quoted_literal: "'value'"
                        - comma: ','
                        - quoted_literal: "'type'"
                        - colon: ':'
                        - numeric_literal: '1'
                        - end_bracket: )
                - end_bracket: )
        statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            function:
              function_name:
                function_name_identifier: JSON_ARRAY
              function_contents:
                bracketed:
                - start_bracket: (
                - expression:
                    quoted_literal: "'a'"
                - comma: ','
                - expression:
                    function:
                      function_name:
                        keyword: JSON_OBJECT
                      function_contents:
                        bracketed:
                        - start_bracket: (
                        - quoted_literal: "'name'"
                        - colon: ':'
                        - quoted_literal: "'value'"
                        - comma: ','
                        - quoted_literal: "'type'"
                        - colon: ':'
                        - numeric_literal: '1'
                        - end_bracket: )
                - comma: ','
                - expression:
                    function:
                      function_name:
                        keyword: JSON_ARRAY
                      function_contents:
                        bracketed:
                        - start_bracket: (
                        - numeric_literal: '1'
                        - comma: ','
                        - keyword: 'NULL'
                        - comma: ','
                        - numeric_literal: '2'
                        - keyword: 'NULL'
                        - keyword: 'ON'
                        - keyword: 'NULL'
                        - end_bracket: )
                - end_bracket: )
        statement_terminator: ;
  - statement:
      declare_segment:
        keyword: DECLARE
        parameter: '@id_value'
        data_type:
          data_type_identifier: nvarchar
          bracketed_arguments:
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '64'
              end_bracket: )
        comparison_operator:
          raw_comparison_operator: '='
        expression:
          function:
            function_name:
              function_name_identifier: NEWID
            function_contents:
              bracketed:
                start_bracket: (
                end_bracket: )
        statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            function:
              function_name:
                function_name_identifier: JSON_ARRAY
              function_contents:
                bracketed:
                - start_bracket: (
                - expression:
                    numeric_literal: '1'
                - comma: ','
                - expression:
                    parameter: '@id_value'
                - comma: ','
                - expression:
                    bracketed:
                      start_bracket: (
                      expression:
                        select_statement:
                          select_clause:
                            keyword: SELECT
                            select_clause_element:
                              system_variable: '@@SPID'
                      end_bracket: )
                - end_bracket: )
        statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
            - naked_identifier: s
            - dot: .
            - naked_identifier: session_id
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: JSON_ARRAY
              function_contents:
                bracketed:
                - start_bracket: (
                - expression:
                    column_reference:
                    - naked_identifier: s
                    - dot: .
                    - naked_identifier: host_name
                - comma: ','
                - expression:
                    column_reference:
                    - naked_identifier: s
                    - dot: .
                    - naked_identifier: program_name
                - comma: ','
                - expression:
                    column_reference:
                    - naked_identifier: s
                    - dot: .
                    - naked_identifier: client_interface_name
                - end_bracket: )
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: sys
                - dot: .
                - naked_identifier: dm_exec_sessions
              alias_expression:
                keyword: AS
                naked_identifier: s
        where_clause:
          keyword: WHERE
          expression:
            column_reference:
            - naked_identifier: s
            - dot: .
            - naked_identifier: is_user_process
            comparison_operator:
              raw_comparison_operator: '='
            numeric_literal: '1'
        statement_terminator: ;
