# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 21356df263327efa381bdb326b08c823c86242dab0bb18cc5b26b1a2aba9f7b4
file:
- batch:
    create_procedure_statement:
    - keyword: CREATE
    - keyword: PROCEDURE
    - object_reference:
      - naked_identifier: dbo
      - dot: .
      - naked_identifier: Test_Begin_End
    - keyword: AS
    - procedure_statement:
        statement:
          begin_end_block:
          - keyword: BEGIN
          - statement:
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    quoted_literal: "'Weekend'"
                statement_terminator: ;
          - statement:
              select_statement:
                select_clause:
                  keyword: select
                  select_clause_element:
                    column_reference:
                      naked_identifier: a
                from_clause:
                  keyword: from
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                          naked_identifier: tbl1
                  statement_terminator: ;
          - statement:
              select_statement:
                select_clause:
                  keyword: select
                  select_clause_element:
                    column_reference:
                      naked_identifier: b
                from_clause:
                  keyword: from
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                          naked_identifier: tbl2
                  statement_terminator: ;
          - keyword: END
        statement_terminator: ;
- go_statement:
    keyword: GO
- batch:
    create_procedure_statement:
    - keyword: CREATE
    - keyword: PROCEDURE
    - object_reference:
      - quoted_identifier: '[dbo]'
      - dot: .
      - quoted_identifier: '[usp_process_tran_log]'
    - procedure_parameter_list:
      - parameter: '@out_vchCode'
      - data_type:
          data_type_identifier: uddt_output_code
      - keyword: OUTPUT
      - comma: ','
      - parameter: '@out_vchMsg'
      - data_type:
          data_type_identifier: uddt_output_msg
      - keyword: OUTPUT
      - comma: ','
      - parameter: '@in_debug'
      - data_type:
          data_type_identifier: INT
      - comparison_operator:
          raw_comparison_operator: '='
      - expression:
          numeric_literal: '1'
    - keyword: AS
    - procedure_statement:
      - statement:
          set_segment:
          - keyword: SET
          - keyword: NOCOUNT
          - keyword: 'ON'
          - statement_terminator: ;
      - statement:
          begin_end_block:
          - keyword: BEGIN
          - statement:
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    quoted_literal: "'8'"
          - keyword: END
      - statement_terminator: ;
- go_statement:
    keyword: GO
- batch:
    create_procedure_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: ALTER
    - keyword: PROCEDURE
    - object_reference:
      - quoted_identifier: '[dbo]'
      - dot: .
      - quoted_identifier: '[usp_process_tran_log]'
    - procedure_parameter_list:
      - parameter: '@out_vchCode'
      - data_type:
          data_type_identifier: uddt_output_code
      - keyword: OUTPUT
      - comma: ','
      - parameter: '@out_vchMsg'
      - data_type:
          data_type_identifier: uddt_output_msg
      - keyword: OUT
      - comma: ','
      - parameter: '@in_debug'
      - data_type:
          data_type_identifier: INT
      - comparison_operator:
          raw_comparison_operator: '='
      - expression:
          numeric_literal: '1'
      - keyword: READONLY
    - keyword: AS
    - procedure_statement:
      - statement:
          set_segment:
          - keyword: SET
          - keyword: NOCOUNT
          - keyword: 'ON'
          - statement_terminator: ;
      - statement:
          begin_end_block:
          - keyword: BEGIN
          - statement:
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    quoted_literal: "'8'"
          - keyword: END
      - statement_terminator: ;
- go_statement:
    keyword: GO
- batch:
    create_procedure_statement:
    - keyword: ALTER
    - keyword: PROCEDURE
    - object_reference:
      - quoted_identifier: '[dbo]'
      - dot: .
      - quoted_identifier: '[usp_process_tran_log]'
    - procedure_parameter_list:
      - parameter: '@out_vchCode'
      - data_type:
          data_type_identifier: uddt_output_code
      - keyword: OUTPUT
      - comma: ','
      - parameter: '@out_vchMsg'
      - data_type:
          data_type_identifier: uddt_output_msg
      - keyword: OUTPUT
      - comma: ','
      - parameter: '@in_debug'
      - data_type:
          data_type_identifier: INT
      - comparison_operator:
          raw_comparison_operator: '='
      - expression:
          numeric_literal: '1'
    - keyword: AS
    - procedure_statement:
      - statement:
          set_segment:
          - keyword: SET
          - keyword: NOCOUNT
          - keyword: 'ON'
          - statement_terminator: ;
      - statement:
          begin_end_block:
          - keyword: BEGIN
          - statement:
              try_catch:
              - keyword: BEGIN
              - keyword: TRY
              - statement:
                  select_statement:
                    select_clause:
                      keyword: SELECT
                      select_clause_element:
                        quoted_literal: "'8'"
                    statement_terminator: ;
              - keyword: END
              - keyword: TRY
              - keyword: BEGIN
              - keyword: CATCH
              - statement:
                  set_segment:
                    keyword: SET
                    parameter: '@v_nSysErrorNum'
                    assignment_operator:
                      raw_comparison_operator: '='
                    expression:
                      function:
                        function_name:
                          function_name_identifier: ERROR_NUMBER
                        function_contents:
                          bracketed:
                            start_bracket: (
                            end_bracket: )
                    statement_terminator: ;
              - statement:
                  set_segment:
                    keyword: SET
                    parameter: '@v_vchCode'
                    assignment_operator:
                      raw_comparison_operator: '='
                    expression:
                      function:
                        function_name:
                          function_name_identifier: ERROR_LINE
                        function_contents:
                          bracketed:
                            start_bracket: (
                            end_bracket: )
                    statement_terminator: ;
              - statement:
                  set_segment:
                    keyword: SET
                    parameter: '@v_vchMsg'
                    assignment_operator:
                      raw_comparison_operator: '='
                    expression:
                      quoted_literal: "N'Missing control type.'"
                    statement_terminator: ;
              - statement:
                  set_segment:
                    keyword: SET
                    parameter: '@v_vchMsg'
                    assignment_operator:
                      raw_comparison_operator: '='
                    expression:
                    - parameter: '@v_vchMsg'
                    - binary_operator: +
                    - quoted_literal: "N' SQL Error = '"
                    - binary_operator: +
                    - function:
                        function_name:
                          function_name_identifier: ERROR_MESSAGE
                        function_contents:
                          bracketed:
                            start_bracket: (
                            end_bracket: )
                    statement_terminator: ;
              - statement:
                  goto_statement:
                    keyword: GOTO
                    naked_identifier: ERROR_HANDLER
              - statement_terminator: ;
              - keyword: END
              - keyword: CATCH
          - keyword: END
      - statement_terminator: ;
- go_statement:
    keyword: GO
