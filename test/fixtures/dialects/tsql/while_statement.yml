# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 8abf6cf853a6b3e42fcef7ddf3e8c207f72aa1e176555baf9a04efadc50063c6
file:
  batch:
    statement:
      while_statement:
        keyword: WHILE
        expression:
          bracketed:
            start_bracket: (
            expression:
            - numeric_literal: '1'
            - comparison_operator:
                raw_comparison_operator: '='
            - numeric_literal: '1'
            end_bracket: )
        statement:
          begin_end_block:
          - keyword: BEGIN
          - statement:
              if_then_statement:
                if_clause:
                  keyword: IF
                  expression:
                    keyword: EXISTS
                    bracketed:
                      start_bracket: (
                      select_statement:
                        select_clause:
                          keyword: SELECT
                          select_clause_element:
                            wildcard_expression:
                              wildcard_identifier:
                                star: '*'
                        from_clause:
                          keyword: FROM
                          from_expression:
                            from_expression_element:
                              table_expression:
                                table_reference:
                                  hash_identifier: '##MyTempTable'
                        where_clause:
                          keyword: WHERE
                          expression:
                            column_reference:
                              naked_identifier: EventCode
                            comparison_operator:
                              raw_comparison_operator: '='
                            quoted_literal: "'Done'"
                      end_bracket: )
                statement:
                  begin_end_block:
                  - keyword: BEGIN
                  - statement:
                      break_statement:
                        keyword: BREAK
                  - statement_terminator: ;
                  - keyword: END
          - statement:
              print_statement:
                keyword: PRINT
                expression:
                  quoted_literal: "N'The other process is not yet done.'"
                statement_terminator: ;
          - keyword: END
