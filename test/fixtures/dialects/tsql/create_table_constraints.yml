# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 698fc3e052539d86352bbfca199a76a7809282b7a4834e12b7671cbfc94b00e7
file:
- batch:
    statement:
      create_table_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
        - quoted_identifier: '[dbo]'
        - dot: .
        - quoted_identifier: '[example]'
      - bracketed:
        - start_bracket: (
        - column_definition:
            quoted_identifier: '[Column A]'
            data_type:
              data_type_identifier: '[int]'
            column_constraint_segment:
              identity_grammar:
                keyword: IDENTITY
        - comma: ','
        - column_definition:
          - quoted_identifier: '[Column B]'
          - data_type:
              data_type_identifier: '[int]'
          - column_constraint_segment:
              identity_grammar:
                keyword: IDENTITY
                bracketed:
                - start_bracket: (
                - numeric_literal: '1'
                - comma: ','
                - numeric_literal: '1'
                - end_bracket: )
          - column_constraint_segment:
            - keyword: NOT
            - keyword: 'NULL'
        - comma: ','
        - column_definition:
            quoted_identifier: '[ColumnC]'
            data_type:
              data_type_identifier: varchar
              bracketed_arguments:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '100'
                  end_bracket: )
            column_constraint_segment:
              keyword: DEFAULT
              quoted_literal: "'mydefault'"
        - comma: ','
        - column_definition:
            quoted_identifier: '[ColumnDecimal]'
            data_type:
              data_type_identifier: DATE
            column_constraint_segment:
              keyword: DEFAULT
              function:
                function_name:
                  function_name_identifier: GETDATE
                function_contents:
                  bracketed:
                    start_bracket: (
                    end_bracket: )
        - comma: ','
        - column_definition:
            quoted_identifier: '[ColumnUser]'
            data_type:
              data_type_identifier: char
              bracketed_arguments:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '30'
                  end_bracket: )
            column_constraint_segment:
              keyword: DEFAULT
              bare_function: CURRENT_USER
        - comma: ','
        - column_definition:
          - quoted_identifier: '[col1]'
          - data_type:
              data_type_identifier: int
          - column_constraint_segment:
              keyword: default
              bracketed:
                start_bracket: (
                bracketed:
                  start_bracket: (
                  numeric_literal:
                    sign_indicator: '-'
                    numeric_literal: '1'
                  end_bracket: )
                end_bracket: )
          - column_constraint_segment:
            - keyword: not
            - keyword: 'null'
        - comma: ','
        - column_definition:
          - quoted_identifier: '[col1]'
          - data_type:
              data_type_identifier: int
          - column_constraint_segment:
              keyword: default
              bracketed:
                start_bracket: (
                numeric_literal:
                  sign_indicator: '-'
                  numeric_literal: '1'
                end_bracket: )
          - column_constraint_segment:
            - keyword: not
            - keyword: 'null'
        - comma: ','
        - column_definition:
          - quoted_identifier: '[col1]'
          - data_type:
              data_type_identifier: int
          - column_constraint_segment:
              keyword: default
              numeric_literal:
                sign_indicator: '-'
                numeric_literal: '1'
          - column_constraint_segment:
            - keyword: not
            - keyword: 'null'
        - comma: ','
        - column_definition:
          - quoted_identifier: '[col1]'
          - data_type:
              data_type_identifier: INT
          - column_constraint_segment:
              keyword: DEFAULT
              bracketed:
                start_bracket: (
                null_literal: 'NULL'
                end_bracket: )
          - column_constraint_segment:
              keyword: 'NULL'
        - end_bracket: )
- go_statement:
    keyword: GO
- batch:
    statement:
      create_table_statement:
      - keyword: create
      - keyword: table
      - table_reference:
        - quoted_identifier: '[schema1]'
        - dot: .
        - quoted_identifier: '[table1]'
      - bracketed:
          start_bracket: (
          column_definition:
            quoted_identifier: '[col1]'
            data_type:
              data_type_identifier: INT
          comma: ','
          table_constraint:
          - keyword: PRIMARY
          - keyword: KEY
          - keyword: CLUSTERED
          - bracketed_index_column_list_grammar:
              bracketed:
                start_bracket: (
                index_column_definition:
                  quoted_identifier: '[col1]'
                  keyword: ASC
                end_bracket: )
          end_bracket: )
- go_statement:
    keyword: GO
- batch:
    statement:
      create_table_statement:
      - keyword: create
      - keyword: table
      - table_reference:
        - quoted_identifier: '[schema1]'
        - dot: .
        - quoted_identifier: '[table1]'
      - bracketed:
          start_bracket: (
          column_definition:
            quoted_identifier: '[col1]'
            data_type:
              data_type_identifier: INT
          comma: ','
          table_constraint:
          - keyword: CONSTRAINT
          - object_reference:
              quoted_identifier: '[Pk_Id]'
          - keyword: PRIMARY
          - keyword: KEY
          - keyword: NONCLUSTERED
          - bracketed_index_column_list_grammar:
              bracketed:
                start_bracket: (
                index_column_definition:
                  quoted_identifier: '[col1]'
                  keyword: DESC
                end_bracket: )
          end_bracket: )
- go_statement:
    keyword: GO
- batch:
    statement:
      create_table_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
        - quoted_identifier: '[dbo]'
        - dot: .
        - quoted_identifier: '[table1]'
      - bracketed:
        - start_bracket: (
        - column_definition:
          - quoted_identifier: '[ColumnB]'
          - data_type:
              data_type_identifier: '[varchar]'
              bracketed_arguments:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '100'
                  end_bracket: )
          - column_constraint_segment:
              keyword: FILESTREAM
          - column_constraint_segment:
            - keyword: MASKED
            - keyword: WITH
            - bracketed:
                start_bracket: (
                keyword: FUNCTION
                comparison_operator:
                  raw_comparison_operator: '='
                quoted_literal: "'my_func'"
                end_bracket: )
        - comma: ','
        - column_definition:
          - quoted_identifier: '[ColumnC]'
          - data_type:
              data_type_identifier: varchar
              bracketed_arguments:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '100'
                  end_bracket: )
          - column_constraint_segment:
              keyword: 'NULL'
          - column_constraint_segment:
            - keyword: NOT
            - keyword: FOR
            - keyword: REPLICATION
        - comma: ','
        - column_definition:
            quoted_identifier: '[ColumnDecimal]'
            data_type:
              data_type_identifier: decimal
              bracketed_arguments:
                bracketed:
                - start_bracket: (
                - expression:
                    numeric_literal: '10'
                - comma: ','
                - expression:
                    numeric_literal: '3'
                - end_bracket: )
            column_constraint_segment:
            - keyword: GENERATED
            - keyword: ALWAYS
            - keyword: AS
            - keyword: ROW
            - keyword: START
            - keyword: HIDDEN
        - comma: ','
        - column_definition:
            quoted_identifier: '[columnE]'
            data_type:
              data_type_identifier: varchar
              bracketed_arguments:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '100'
                  end_bracket: )
            column_constraint_segment:
              encrypted_with_grammar:
              - keyword: ENCRYPTED
              - keyword: WITH
              - bracketed:
                - start_bracket: (
                - keyword: COLUMN_ENCRYPTION_KEY
                - comparison_operator:
                    raw_comparison_operator: '='
                - naked_identifier: key_name
                - comma: ','
                - keyword: ENCRYPTION_TYPE
                - comparison_operator:
                    raw_comparison_operator: '='
                - keyword: RANDOMIZED
                - comma: ','
                - keyword: ALGORITHM
                - comparison_operator:
                    raw_comparison_operator: '='
                - quoted_literal: "'AEAD_AES_256_CBC_HMAC_SHA_256'"
                - end_bracket: )
        - comma: ','
        - column_definition:
            quoted_identifier: '[column1]'
            data_type:
              data_type_identifier: varchar
              bracketed_arguments:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '100'
                  end_bracket: )
            column_constraint_segment:
              keyword: collate
              collation_reference:
                naked_identifier: Latin1_General_BIN
        - end_bracket: )
- go_statement:
    keyword: GO
- batch:
    statement:
      create_table_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
          naked_identifier: table_name
      - bracketed:
          start_bracket: (
          column_definition:
          - naked_identifier: id
          - data_type:
              data_type_identifier: UNIQUEIDENTIFIER
          - column_constraint_segment:
            - keyword: NOT
            - keyword: 'NULL'
          - column_constraint_segment:
              keyword: CONSTRAINT
              object_reference:
                naked_identifier: constraint_name
              references_constraint_grammar:
              - keyword: REFERENCES
              - table_reference:
                  naked_identifier: referenced_table_name
              - keyword: 'ON'
              - keyword: DELETE
              - keyword: 'NO'
              - keyword: ACTION
          end_bracket: )
      - statement_terminator: ;
